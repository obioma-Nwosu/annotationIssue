{"version":3,"file":"chunks/1865.chunk.js","mappings":"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","sources":["webpack://webviewer-ui/./src/components/SignaturePanel/SignatureIcon/SignatureIcon.js","webpack://webviewer-ui/./src/components/SignaturePanel/SignatureIcon/index.js","webpack://webviewer-ui/./src/helpers/setVerificationResult.js","webpack://webviewer-ui/./src/components/SignaturePanel/Spinner/index.js","webpack://webviewer-ui/./src/components/SignaturePanel/WidgetLocator/WidgetLocator.js","webpack://webviewer-ui/./src/components/SignaturePanel/WidgetLocator/index.js","webpack://webviewer-ui/./src/components/SignaturePanel/WidgetInfo/WidgetInfo.js","webpack://webviewer-ui/./src/components/SignaturePanel/WidgetInfo/index.js","webpack://webviewer-ui/./src/components/SignaturePanel/SignaturePanel.js","webpack://webviewer-ui/./src/components/SignaturePanel/index.js","webpack://webviewer-ui/./src/components/SignaturePanel/SignatureIcon/SignatureIcon.scss","webpack://webviewer-ui/./src/components/SignaturePanel/SignaturePanel.scss","webpack://webviewer-ui/./src/components/SignaturePanel/Spinner/Spinner.scss","webpack://webviewer-ui/./src/components/SignaturePanel/WidgetInfo/WidgetInfo.scss","webpack://webviewer-ui/./src/components/SignaturePanel/SignatureIcon/SignatureIcon.scss?2bca","webpack://webviewer-ui/./src/components/SignaturePanel/SignaturePanel.scss?b4de","webpack://webviewer-ui/./src/components/SignaturePanel/Spinner/Spinner.scss?0d5c","webpack://webviewer-ui/./src/components/SignaturePanel/WidgetInfo/WidgetInfo.scss?5626"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from 'components/Icon';\r\n\r\nimport './SignatureIcon.scss';\r\n\r\nconst propTypes = {\r\n  badge: PropTypes.string,\r\n  size: PropTypes.string,\r\n};\r\n\r\nconst SignatureIcon = ({ badge, size = 'medium' }) => (\r\n  <div className=\"signature-icon\">\r\n    {badge && <Icon glyph={badge} className={`badge ${size}`} />}\r\n  </div>\r\n);\r\n\r\nSignatureIcon.propTypes = propTypes;\r\n\r\nexport default SignatureIcon;\r\n","import SignatureIcon from './SignatureIcon';\r\n\r\nexport default SignatureIcon;\r\n","import actions from 'actions';\r\n\r\nconst DEFAULT_REVOCATION_PROXY_PREFIX = 'https://proxy.pdftron.com';\r\n\r\n/**\r\n * Side-effect function that sets the verification status of the document.\r\n * One of three possible results can happen:\r\n *\r\n * 1. Valid: All signatures have been successfully verified\r\n * 2. Unknown: One or more signatures has issues, but the verification API\r\n * cannot definitively state the signatures are valid or invalid (i.e. a\r\n * required Public Key Certificate is missing)\r\n * 3. Invalid: The document has been digitally signed, but has one or more\r\n * invalid signatures (i.e. because the document was modified after it was\r\n * signed, and one or more signature field did not allow for this to occur)\r\n *\r\n * The above results are dictated by the return values of:\r\n *\r\n * PDFNet.VerificationResult.getDocumentStatus:\r\n * https://docs.apryse.com/api/web/Core.PDFNet.VerificationResult.html#getDocumentStatus__anchor\r\n *\r\n * PDFNet.VerificationResult.getTrustStatus:\r\n * https://docs.apryse.com/api/web/Core.PDFNet.VerificationResult.html#getTrustStatus__anchor\r\n *\r\n * PDFNet.VerificationResult.getDigestStatus:\r\n * https://docs.apryse.com/api/web/Core.PDFNet.VerificationResult.html#getDigestStatus__anchor\r\n *\r\n * PDFNet.VerificationResult.getPermissionsStatus:\r\n * https://docs.apryse.com/api/web/Core.PDFNet.VerificationResult.html#getPermissionsStatus__anchor\r\n *\r\n * Valid:\r\n * DocumentStatus.e_no_error && TrustStatus.e_trust_verified\r\n *\r\n * Unknown:\r\n * DocumentStatus.e_no_error\r\n * && (\r\n *  DigestStatus.e_digest_verified\r\n *  || DigestStatus.e_digest_verification_disabled\r\n * ) && trustStatus !== TrustStatus.e_no_trust_status\r\n * && (\r\n *   ModificationPermissionsStatus.e_unmodified\r\n *   || ModificationPermissionsStatus.e_has_allowed_changes\r\n *   || ModificationPermissionsStatus.e_permissions_verification_disabled\r\n * )\r\n *\r\n * Any other combinations will cause the signature field to be considered\r\n * Invalid.\r\n * @ignore\r\n */\r\nexport default async (doc, certificates, trustLists, currentLanguage, revocationChecking, revocationProxyPrefix, dispatch) => {\r\n  const verificationResult = await getVerificationResult(doc, certificates, trustLists, currentLanguage, revocationChecking, revocationProxyPrefix);\r\n  dispatch(actions.setVerificationResult(verificationResult));\r\n  return verificationResult;\r\n};\r\n\r\n/**\r\n * Iterates through each signature widget in the document, retrieves and returns\r\n * all pertinent information pertaining to Digital Signature Verification\r\n *\r\n * @param {Core.Document} doc The document with signatures to verify\r\n * with the given certificate\r\n * @param {Array<File | string>} certificates The certificate files to be used\r\n * for verification. Can be passed as a File object, or a URL in the form\r\n * of a string, in which a GET call will be made to retrieve the certificate\r\n * @param {\r\n *   Array<Blob | ArrayBuffer | Int8Array | Uint8Array | Uint8ClampedArray>\r\n * } trustLists The Trust Lists to load for verification.\r\n * @param {string} currentLanguage Current UI language\r\n * @param {boolean} revocationChecking Determines if the PDFNet API\r\n * VerificationOptions.enableOnlineCRLRevocationChecking is invoked to enable\r\n * Online Certification Revocation List (CRL) Revocation Checking is done\r\n * within the PDFNet logic\r\n * @param {string} revocationProxyPrefix The URL of a proxy server that should\r\n * be used to avoid CORS related issues when contacting Certificate Revocation\r\n * List (CRL) servers\r\n * @returns {object} An object mapping the field name of each signature widget\r\n * to their verification results\r\n * @ignore\r\n */\r\nconst getVerificationResult = async (doc, certificates, trustLists, currentLanguage, revocationChecking, revocationProxyPrefix) => {\r\n  const { PDFNet } = window.Core;\r\n  const { VerificationResult } = PDFNet;\r\n  const {\r\n    TrustStatus,\r\n    DigestStatus,\r\n    ModificationPermissionsStatus,\r\n    DocumentStatus,\r\n  } = VerificationResult;\r\n  const verificationResults = {};\r\n\r\n\r\n  await PDFNet.runWithCleanup(async () => {\r\n    /**\r\n     * @todo Remove re-assignment of argument from original code?\r\n     */\r\n    doc = await doc.getPDFDoc();\r\n    const opts = await PDFNet.VerificationOptions.create(\r\n      PDFNet.VerificationOptions.SecurityLevel.e_compatibility_and_archiving\r\n    );\r\n\r\n    if (revocationChecking) {\r\n      await opts.enableOnlineCRLRevocationChecking(true);\r\n    }\r\n\r\n    if (revocationProxyPrefix === null) {\r\n      await opts.setRevocationProxyPrefix(DEFAULT_REVOCATION_PROXY_PREFIX);\r\n    } else if (revocationProxyPrefix !== undefined) {\r\n      await opts.setRevocationProxyPrefix(revocationProxyPrefix);\r\n    }\r\n\r\n    for (const certificate of certificates) {\r\n      if (typeof certificate === 'string') {\r\n        try {\r\n          await opts.addTrustedCertificateFromURL(certificate);\r\n        } catch {\r\n          console.error(\r\n            `Error encountered when trying to load certificate from URL: ${certificate}\\n`\r\n            + 'Certificate will not be used as part of verification process.'\r\n          );\r\n          continue;\r\n        }\r\n      } else if (\r\n        certificate instanceof File ||\r\n        Object.prototype.toString.call(certificate) === '[object File]'\r\n      ) {\r\n        const fileReader = new FileReader();\r\n        const arrayBufferPromise = new Promise((resolve, reject) => {\r\n          fileReader.addEventListener('load', async (e) => {\r\n            resolve(new Uint8Array(e.target.result));\r\n          });\r\n          fileReader.addEventListener('error', () => {\r\n            reject('Error reading the local certificate');\r\n          });\r\n\r\n          fileReader.readAsArrayBuffer(certificate);\r\n        });\r\n        try {\r\n          await opts.addTrustedCertificate(await arrayBufferPromise);\r\n        } catch (error) {\r\n          console.error(\r\n            `Error encountered when trying to load certificate: ${error}`\r\n            + 'Certificate will not be used as part of the verification process.'\r\n          );\r\n          continue;\r\n        }\r\n      } else if (\r\n        certificate instanceof ArrayBuffer\r\n        || certificate instanceof Int8Array\r\n        || certificate instanceof Uint8Array\r\n        || certificate instanceof Uint8ClampedArray\r\n      ) {\r\n        try {\r\n          await opts.addTrustedCertificate(certificate);\r\n        } catch (error) {\r\n          console.error(\r\n            `Error encountered when trying to load certificate: ${error}`\r\n            + 'Certificate will not be used as part of the verification process.'\r\n          );\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const trustList of trustLists) {\r\n      const trustListDataStructure = trustList.constructor.name;\r\n      const supportedDataStructures = [\r\n        'ArrayBuffer',\r\n        'Int8Array',\r\n        'Uint8Array',\r\n        'Uint8ClampedArray',\r\n      ];\r\n      let fdfDocBuffer;\r\n      if (trustListDataStructure === 'Blob') {\r\n        fdfDocBuffer = await trustList.arrayBuffer();\r\n      } else if (supportedDataStructures.includes(trustListDataStructure)) {\r\n        fdfDocBuffer = trustList;\r\n      } else {\r\n        console.error(\r\n          'The provided TrustList is an unsupported data-structure. '\r\n          + 'Please ensure the TrustList is formatted as one of the following '\r\n          + `data-structures: ${[...supportedDataStructures, 'Blob'].join('|')}`\r\n        );\r\n        continue;\r\n      }\r\n      try {\r\n        const fdf = await PDFNet.FDFDoc.createFromMemoryBuffer(fdfDocBuffer);\r\n        await opts.loadTrustList(fdf);\r\n      } catch (error) {\r\n        console.error(\r\n          `Error encountered when trying to load certificate: ${error}. `\r\n          + 'Certificate will not be used as part of the verification process.'\r\n        );\r\n        continue;\r\n      }\r\n    }\r\n\r\n    const fieldIterator = await doc.getFieldIteratorBegin();\r\n    for (; (await fieldIterator.hasNext()); fieldIterator.next()) {\r\n      const field = await fieldIterator.current();\r\n      if (\r\n        !(await field.isValid())\r\n        || await field.getType() !== PDFNet.Field.Type.e_signature\r\n      ) {\r\n        continue;\r\n      }\r\n      const digitalSigField = await PDFNet.DigitalSignatureField.createFromField(field);\r\n      try {\r\n        const result = await digitalSigField.verify(opts);\r\n        const id = await (await digitalSigField.getSDFObj()).getObjNum();\r\n\r\n        let signer;\r\n        let signTime;\r\n        let documentPermission;\r\n        let isCertification;\r\n        let contactInfo;\r\n        let location;\r\n        let reason;\r\n        let validAtTimeOfSigning;\r\n        let signerName;\r\n        const issuerField = {};\r\n        const subjectField = {};\r\n\r\n        const signed = await digitalSigField.hasCryptographicSignature();\r\n        if (signed) {\r\n          const subFilter = await digitalSigField.getSubFilter();\r\n          if (subFilter === PDFNet.DigitalSignatureField.SubFilterType.e_adbe_pkcs7_detached) {\r\n            const signerCert = await digitalSigField.getSignerCertFromCMS();\r\n            /**\r\n             * @note \"Issuer\" refers to the Certificate Authority that issued the\r\n             * certificate\r\n             * \"Subject\" refers to the organization/person that the Certificate\r\n             * Auhority issued this certificate to\r\n             *\r\n             * It is likely that future UI iterations will leverage Issuer\r\n             * information, so the code has been commented out for now, but will\r\n             * be uncommented in future feature implementations\r\n             */\r\n            // const retrievedIssuerField = await signerCert.getIssuerField();\r\n            // const processedIssuerField = await processX501DistinguishedName(retrievedIssuerField) || {};\r\n            const retrievedSubjectField = await signerCert.getSubjectField();\r\n            const processedSubjectField = await processX501DistinguishedName(retrievedSubjectField) || {};\r\n            signer = processedSubjectField['e_commonName'];\r\n          }\r\n          // Getter functions cannot be called on Digital Signature fields using\r\n          // e_ETSI_RFC3161\r\n          if (subFilter !== PDFNet.DigitalSignatureField.SubFilterType.e_ETSI_RFC3161) {\r\n            if (!signer) {\r\n              signer = (\r\n                await digitalSigField.getSignatureName()\r\n                || await digitalSigField.getContactInfo()\r\n              );\r\n            }\r\n            signTime = await digitalSigField.getSigningTime();\r\n\r\n            if (await signTime.isValid()) {\r\n              signTime = formatPDFNetDate(signTime, currentLanguage);\r\n            } else {\r\n              signTime = null;\r\n            }\r\n\r\n            contactInfo = await digitalSigField.getContactInfo();\r\n            location = await digitalSigField.getLocation();\r\n            reason = await digitalSigField.getReason();\r\n          }\r\n\r\n          documentPermission = await digitalSigField.getDocumentPermissions();\r\n          isCertification = await digitalSigField.isCertification();\r\n        }\r\n\r\n        const verificationStatus = await result.getVerificationStatus();\r\n        const documentStatus = await result.getDocumentStatus();\r\n        const digestStatus = await result.getDigestStatus();\r\n        const trustStatus = await result.getTrustStatus();\r\n        const permissionStatus = await result.getPermissionsStatus();\r\n        const digestAlgorithm = await result.getDigestAlgorithm();\r\n        const disallowedChanges = await Promise.all(\r\n          (await result.getDisallowedChanges()).map(async (change) => ({\r\n            objnum: await change.getObjNum(),\r\n            type: await change.getTypeAsString(),\r\n          }))\r\n        );\r\n        const validSignerIdentity = trustStatus === TrustStatus.e_trust_verified;\r\n\r\n        let trustVerificationResultString;\r\n        let trustVerificationResultBoolean;\r\n        let timeOfTrustVerificationEnum;\r\n        let trustVerificationTime;\r\n        const hasTrustVerificationResult = await result.hasTrustVerificationResult();\r\n        if (hasTrustVerificationResult) {\r\n          const trustVerificationResult = await result.getTrustVerificationResult();\r\n\r\n          trustVerificationResultBoolean = await trustVerificationResult.wasSuccessful();\r\n          trustVerificationResultString = await trustVerificationResult.getResultString();\r\n          timeOfTrustVerificationEnum = await trustVerificationResult.getTimeOfTrustVerificationEnum();\r\n\r\n          const epochTrustVerificationTime = await trustVerificationResult.getTimeOfTrustVerification();\r\n          if (epochTrustVerificationTime) {\r\n            trustVerificationTime = formatDate(epochTrustVerificationTime, currentLanguage);\r\n          }\r\n          const certPath = await trustVerificationResult.getCertPath();\r\n          if (certPath.length) {\r\n            const firstX509Cert = certPath[0];\r\n            const retrievedIssuerField = await firstX509Cert.getIssuerField();\r\n            const processedIssuerField = await processX501DistinguishedName(retrievedIssuerField);\r\n            Object.assign(issuerField, processedIssuerField);\r\n            const retrievedSubjectField = await firstX509Cert.getSubjectField();\r\n            const processedSubjectField = await processX501DistinguishedName(retrievedSubjectField);\r\n            Object.assign(subjectField, processedSubjectField);\r\n            const lastX509Cert = certPath[certPath.length - 1];\r\n            /**\r\n             * @todo @colim @rdjericpdftron 2022-05-30\r\n             * Using the pdftron::PDF::VerificationOptions::LoadTrustList API\r\n             * in combination with\r\n             * pdftron::Crypto::X509Certificate::GetNotBeforeEpochTime\r\n             * or\r\n             * pdftron::Crypto::X509Certificate::GetNotAfterEpochTime\r\n             * Results in the following fatal error being thrown:\r\n             *\r\n             * calendar_point::to_std_timepoint() does not support years after\r\n             * 2037 on this system\r\n             *\r\n             * @rdjericpdftron Mentions that this should be addressed in a\r\n             * future release of PDFNet when the Botan library has been patched\r\n             */\r\n            try {\r\n              const notBeforeEpochTime = await lastX509Cert.getNotBeforeEpochTime();\r\n              const notAfterEpochTime = await lastX509Cert.getNotAfterEpochTime();\r\n              validAtTimeOfSigning = (\r\n                notAfterEpochTime >= epochTrustVerificationTime\r\n                && epochTrustVerificationTime >= notBeforeEpochTime\r\n              );\r\n            } catch (dateBugError) {\r\n              if (dateBugError.includes('calendar_point::to_std_timepoint() does not support years after')) {\r\n                console.warn(\r\n                  'The following error is a known issue with Botan, and aims to be addressed in a future release of '\r\n                  + 'PDFNet. This currently does not impact PDFTron\\'s Digital Signature Verification capabilities.'\r\n                );\r\n                console.warn(dateBugError);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        let badgeIcon;\r\n        if (verificationStatus) {\r\n          badgeIcon = 'digital_signature_valid';\r\n        } else if (\r\n          documentStatus === DocumentStatus.e_no_error &&\r\n          (digestStatus === DigestStatus.e_digest_verified ||\r\n            digestStatus === DigestStatus.e_digest_verification_disabled) &&\r\n          trustStatus !== TrustStatus.e_no_trust_status &&\r\n          (permissionStatus === ModificationPermissionsStatus.e_unmodified ||\r\n            permissionStatus === ModificationPermissionsStatus.e_has_allowed_changes ||\r\n            permissionStatus === ModificationPermissionsStatus.e_permissions_verification_disabled)\r\n        ) {\r\n          badgeIcon = 'digital_signature_warning';\r\n        } else {\r\n          badgeIcon = 'digital_signature_error';\r\n        }\r\n\r\n        if (signer) {\r\n          signerName = signer;\r\n        } else if (!signer && subjectField.e_commonName) {\r\n          signerName = subjectField.e_commonName;\r\n        }\r\n        const fieldName = await field.getName();\r\n        verificationResults[fieldName] = {\r\n          signed,\r\n          signer,\r\n          signerName,\r\n          signTime,\r\n          verificationStatus,\r\n          documentStatus,\r\n          digestStatus,\r\n          trustStatus,\r\n          permissionStatus,\r\n          disallowedChanges,\r\n          trustVerificationResultBoolean,\r\n          trustVerificationResultString,\r\n          timeOfTrustVerificationEnum,\r\n          trustVerificationTime,\r\n          id,\r\n          badgeIcon,\r\n          validSignerIdentity,\r\n          digestAlgorithm,\r\n          documentPermission,\r\n          isCertification,\r\n          contactInfo,\r\n          location,\r\n          reason,\r\n          issuerField,\r\n          subjectField,\r\n          validAtTimeOfSigning,\r\n        };\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  });\r\n\r\n  return verificationResults;\r\n};\r\n\r\n/**\r\n * Retrieves the relevant information from the given object, containing date\r\n * information that originates from epoch time, and returns a string containing\r\n * the date and time information in a human readable string\r\n *\r\n * @param {object} date The date object that is returned from PDFNet\r\n * @returns {string} Human readable formatted date and time\r\n * @ignore\r\n */\r\nconst formatPDFNetDate = (date, currentLanguage) => {\r\n  const { year, month, day, hour, minute, second } = date;\r\n  const d = new Date(Date.UTC(year, month - 1, day, hour, minute, second));\r\n\r\n  return d.toLocaleDateString(currentLanguage.replace('_', '-'), {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    weekday: 'long',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    timeZoneName: 'short',\r\n  });\r\n};\r\n\r\n/**\r\n * Converts an epoch time input to date in string\r\n *\r\n * @param {number} epochTime The epoch time to be converted\r\n * @returns {string} The converted epoch time\r\n * @ignore\r\n */\r\nconst formatDate = (epochTime, currentLanguage) => {\r\n  const date = new Date(0);\r\n  // Values greater than 59 are converted into their parent values\r\n  // (i.e. seconds -> minutes -> hours -> day etc.)\r\n  date.setUTCSeconds(epochTime);\r\n\r\n  return date.toLocaleDateString(currentLanguage.replace('_', '-'), {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    weekday: 'long',\r\n    day: 'numeric',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    timeZoneName: 'short',\r\n  });\r\n};\r\n\r\n/**\r\n * Processes an instance of the PDFNet.X501DistinguishedName class into a\r\n * Javascript object that is human readable\r\n *\r\n * Intended to process the objects returned from invoking\r\n * PDFNet.X509Certificate.GetIssuerField and\r\n * PDFNet.X509Certificate.GetSubjectField\r\n *\r\n * @param {PDFNet.X501DistinguishedName} x501DistinguishedNameObject An instance\r\n * of the PDFNet.X501DistinguishedName class, to be processed into a Javascript\r\n * object\r\n * @returns {object} Maps human readable keys (as opposed to the Botan Crpyto\r\n * OIDs, represented as Array<int> in PDFTron Core) to the corresponding values\r\n * they map to\r\n * @ignore\r\n */\r\nconst processX501DistinguishedName = async (x501DistinguishedNameObject) => {\r\n  const processedObject = {};\r\n  const allAttributeAndValues = await x501DistinguishedNameObject.getAllAttributesAndValues();\r\n  for (const x501AttributeTypeAndValue of allAttributeAndValues) {\r\n    const objectIdentifier = await x501AttributeTypeAndValue.getAttributeTypeOID();\r\n    const key = await objectIdentifier.getRawValue();\r\n    const value = await x501AttributeTypeAndValue.getStringValue();\r\n    processedObject[translateObjectIdentifierBotanOID(key)] = value;\r\n  }\r\n  return processedObject;\r\n};\r\n\r\n/**\r\n * Takes an Array<Number> argument (or its string representation from\r\n * JSON.stringify) and returns the enum it is supposed to represent based on\r\n * its OID representation in the Botan crypto C++ library\r\n *\r\n * PDFTron Core represents the key from the original Map<string, string>\r\n * data-structre in the form of an array\r\n *\r\n * @example The key of the object\r\n * { \"2.5.4.3\", \"X520.CommonName\" }\r\n * Is represented as [2,5,4,3] in PDFTron Core\r\n *\r\n * Source: https://botan.randombit.net/doxygen/oid__maps_8cpp_source.html\r\n *\r\n * @param {string | Array<Number>} objectIdentifierOIDenum The array returned\r\n * from the invocation of PDFNet.ObjectIdentifier.getRawValue, which can be\r\n * accepted as the Array input (which the body of the function will convert to a\r\n * string), or a string representation of the array\r\n * @returns {string} The human readable enum that the array represents\r\n * @ignore\r\n */\r\nconst translateObjectIdentifierBotanOID = (objectIdentifierOIDenum) => {\r\n  const botanArrayToEnum = {\r\n    '[2,5,4,3]': 'e_commonName',\r\n    '[2,5,4,4]': 'e_surname',\r\n    '[2,5,4,6]': 'e_countryName',\r\n    '[2,5,4,7]': 'e_localityName',\r\n    '[2,5,4,8]': 'e_stateOrProvinceName',\r\n    '[2,5,4,9]': 'e_streetAddress',\r\n    '[2,5,4,10]': 'e_organizationName',\r\n    '[2,5,4,11]': 'e_organizationalUnitName',\r\n    /**\r\n     * @note Added by @CorreyL, enum is not in PDFTronCore codebase as of\r\n     * PDFNetJS8.1\r\n     *\r\n     * Listed as { \"1.2.840.113549.1.9.1\", \"PKCS9.EmailAddress\" }\r\n     * in load_oid2str_map()\r\n     */\r\n    '[1,2,840,113549,1,9,1]': 'e_emailAddress',\r\n  };\r\n  const arrayAsString = (typeof objectIdentifierOIDenum === 'string')\r\n    ? objectIdentifierOIDenum\r\n    : JSON.stringify(objectIdentifierOIDenum);\r\n  return botanArrayToEnum[arrayAsString];\r\n};\r\n","import React from 'react';\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => <div className=\"spinner\" />;\r\n\r\nexport default Spinner;\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport core from 'core';\r\nimport getRootNode from 'helpers/getRootNode';\r\n\r\nconst WidgetLocator = ({ rect }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const scrollViewContainer = core.getScrollViewElement();\r\n    const handleScroll = () => {\r\n      setShow(false);\r\n    };\r\n\r\n    scrollViewContainer.addEventListener('scroll', handleScroll);\r\n    return () => scrollViewContainer.removeEventListener('scroll', handleScroll);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (rect) {\r\n      setTimeout(() => {\r\n        // so that the locator won't disappear because of the scroll\r\n        setShow(true);\r\n      }, 50);\r\n\r\n      setTimeout(() => {\r\n        setShow(false);\r\n      }, 700);\r\n    }\r\n  }, [rect]);\r\n\r\n  return (\r\n    show &&\r\n    ReactDOM.createPortal(\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          top: rect.y1,\r\n          left: rect.x1,\r\n          width: rect.x2 - rect.x1,\r\n          height: rect.y2 - rect.y1,\r\n          border: '1px solid #00a5e4',\r\n          zIndex: 100,\r\n        }}\r\n      />,\r\n      getRootNode().querySelector('#app')\r\n    )\r\n  );\r\n};\r\n\r\nexport default WidgetLocator;\r\n","import WidgetLocator from './WidgetLocator';\r\n\r\nexport default WidgetLocator;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport actions from 'actions';\r\nimport classNames from 'classnames';\r\nimport core from 'core';\r\nimport selectors from 'selectors';\r\n\r\nimport SignatureIcon from 'components/SignaturePanel/SignatureIcon';\r\nimport Icon from 'components/Icon';\r\nimport WidgetLocator from '../WidgetLocator';\r\n\r\nimport './WidgetInfo.scss';\r\n\r\nexport const renderPermissionStatus = ({\r\n  isCertification,\r\n  ModificationPermissionsStatus,\r\n  permissionStatus,\r\n  translate,\r\n}) => {\r\n  let content;\r\n\r\n  switch (permissionStatus) {\r\n    case ModificationPermissionsStatus.e_invalidated_by_disallowed_changes:\r\n      content = translate(\r\n        'digitalSignatureVerification.permissionStatus.invalidatedByDisallowedChanges'\r\n      );\r\n      break;\r\n    case ModificationPermissionsStatus.e_has_allowed_changes:\r\n      content = translate(\r\n        'digitalSignatureVerification.permissionStatus.hasAllowedChanges'\r\n      );\r\n      break;\r\n    case ModificationPermissionsStatus.e_unmodified:\r\n      content = `${\r\n        translate('digitalSignatureVerification.permissionStatus.unmodified')\r\n      } ${\r\n        isCertification\r\n          ? translate('digitalSignatureVerification.certified')\r\n          : translate('digitalSignatureVerification.signed')\r\n      }.`;\r\n      break;\r\n    case ModificationPermissionsStatus.e_permissions_verification_disabled:\r\n      content = translate(\r\n        'digitalSignatureVerification.permissionStatus.permissionsVerificationDisabled'\r\n      );\r\n      break;\r\n    case ModificationPermissionsStatus.e_no_permissions_status:\r\n      content = translate(\r\n        'digitalSignatureVerification.permissionStatus.noPermissionsStatus'\r\n      );\r\n      break;\r\n  }\r\n\r\n  return <p>{content}</p>;\r\n};\r\n\r\nconst propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  collapsible: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func,\r\n  field: PropTypes.instanceOf(window.Core.Annotations.Forms.Field),\r\n};\r\n\r\nconst WidgetInfo = ({ name, collapsible, field }) => {\r\n  const verificationResult = useSelector((state) => selectors.getVerificationResult(state, name));\r\n  const [isExpanded, setIsExpanded] = useState(true);\r\n  const [locatorRect, setLocatorRect] = useState(null);\r\n  const [signatureDetailsExpanded, setSignatureDetailsExpanded] = useState(false);\r\n  const { VerificationResult, VerificationOptions } = window.Core.PDFNet;\r\n  const { TimeMode } = VerificationOptions;\r\n  const { ModificationPermissionsStatus } = VerificationResult;\r\n  const [translate] = useTranslation();\r\n\r\n  const {\r\n    signed,\r\n    signTime,\r\n    verificationStatus,\r\n    permissionStatus,\r\n    disallowedChanges,\r\n    trustVerificationResultBoolean,\r\n    timeOfTrustVerificationEnum,\r\n    trustVerificationTime,\r\n    badgeIcon,\r\n    isCertification,\r\n    contactInfo,\r\n    location,\r\n    reason,\r\n    signerName,\r\n  } = verificationResult;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleArrowClick = (e) => {\r\n    e.stopPropagation();\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  /**\r\n   * Side-effect function that highlights the SignatureWidgetAnnotation\r\n   * pertaining to the text element that was clicked by using core code to find\r\n   * the coordinates of the widget on the page it is placed on\r\n   *\r\n   * @param {Annotations.Forms.Field} field The field pertaining\r\n   * to the text element clicked in the Signature Panel\r\n   */\r\n  const jumpToWidget = (field) => {\r\n    if (!field.widgets.length) {\r\n      return;\r\n    }\r\n    const widget = field.widgets[0];\r\n    core.jumpToAnnotation(widget);\r\n\r\n    const { scrollLeft, scrollTop } = core.getScrollViewElement();\r\n    const rect = widget.getRect();\r\n    const windowTopLeft = core\r\n      .getDisplayModeObject()\r\n      .pageToWindow({ x: rect.x1, y: rect.y1 }, widget.PageNumber);\r\n    const windowBottomRight = core\r\n      .getDisplayModeObject()\r\n      .pageToWindow({ x: rect.x2, y: rect.y2 }, widget.PageNumber);\r\n\r\n    setLocatorRect({\r\n      x1: windowTopLeft.x - scrollLeft,\r\n      y1: windowTopLeft.y - scrollTop,\r\n      x2: windowBottomRight.x - scrollLeft,\r\n      y2: windowBottomRight.y - scrollTop,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Function that invokes the necessary methods when a user interacts with\r\n   * the title of the widget\r\n   *\r\n   * @param {Event} event The event that is passed from an onClick or onKeyPress\r\n   * interaction\r\n   */\r\n  const titleInteraction = (event) => {\r\n    handleArrowClick(event);\r\n    jumpToWidget(field);\r\n  };\r\n\r\n  const renderTitle = () => {\r\n    let content = isCertification\r\n      ? translate('digitalSignatureVerification.Certified')\r\n      : translate('digitalSignatureVerification.Signed');\r\n    content += ` ${translate('digitalSignatureVerification.by')} ${signerName || translate('digitalSignatureModal.unknown')}`;\r\n    if (signTime) {\r\n      content += ` ${translate('digitalSignatureVerification.on')} ${signTime}`;\r\n    }\r\n    return (\r\n      <div\r\n        className=\"title dropdown\"\r\n        onClick={titleInteraction}\r\n        onKeyPress={titleInteraction}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        {collapsible && (\r\n          <div\r\n            className={classNames({\r\n              arrow: true,\r\n              expanded: isExpanded,\r\n            })}\r\n          >\r\n            <Icon glyph=\"ic_chevron_right_black_24px\" />\r\n          </div>\r\n        )}\r\n        <SignatureIcon badge={badgeIcon} size=\"small\"/>\r\n        <p>{content}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderVerificationStatus = () => {\r\n    const verificationType = isCertification\r\n      ? translate('digitalSignatureVerification.Certification')\r\n      : translate('digitalSignatureVerification.Signature');\r\n    return (\r\n      <div className=\"title\">\r\n        <p>\r\n          {\r\n            verificationStatus\r\n              ? translate('digitalSignatureVerification.verificationStatus.valid', { verificationType })\r\n              : translate('digitalSignatureVerification.verificationStatus.failed', { verificationType })\r\n          }\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderPermissionStatus = () => {\r\n    let content;\r\n\r\n    switch (permissionStatus) {\r\n      case ModificationPermissionsStatus.e_invalidated_by_disallowed_changes:\r\n        content = translate(\r\n          'digitalSignatureVerification.permissionStatus.invalidatedByDisallowedChanges'\r\n        );\r\n        break;\r\n      case ModificationPermissionsStatus.e_has_allowed_changes:\r\n        content = translate(\r\n          'digitalSignatureVerification.permissionStatus.hasAllowedChanges'\r\n        );\r\n        break;\r\n      case ModificationPermissionsStatus.e_unmodified:\r\n        content = `${\r\n          translate('digitalSignatureVerification.permissionStatus.unmodified')\r\n        } ${\r\n          isCertification\r\n            ? translate('digitalSignatureVerification.certified')\r\n            : translate('digitalSignatureVerification.signed')\r\n        }.`;\r\n        break;\r\n      case ModificationPermissionsStatus.e_permissions_verification_disabled:\r\n        content = translate(\r\n          'digitalSignatureVerification.permissionStatus.permissionsVerificationDisabled'\r\n        );\r\n        break;\r\n      case ModificationPermissionsStatus.e_no_permissions_status:\r\n        content = translate(\r\n          'digitalSignatureVerification.permissionStatus.noPermissionsStatus'\r\n        );\r\n        break;\r\n    }\r\n\r\n    return <p>{content}</p>;\r\n  };\r\n\r\n  const renderDisallowedChanges = () => {\r\n    return disallowedChanges.map(({ objnum, type }) => (\r\n      <p key={objnum}>\r\n        {\r\n          translate(\r\n            'digitalSignatureVerification.disallowedChange',\r\n            { type, objnum }\r\n          )\r\n        }\r\n      </p>\r\n    ));\r\n  };\r\n\r\n  const renderTrustVerification = () => {\r\n    let verificationTimeMessage;\r\n    switch (timeOfTrustVerificationEnum) {\r\n      case (TimeMode.e_current):\r\n        verificationTimeMessage = (\r\n          translate('digitalSignatureVerification.trustVerification.current')\r\n        );\r\n        break;\r\n      case (TimeMode.e_signing):\r\n        verificationTimeMessage = (\r\n          translate('digitalSignatureVerification.trustVerification.signing')\r\n        );\r\n        break;\r\n      case (TimeMode.e_timestamp):\r\n        verificationTimeMessage = (\r\n          translate('digitalSignatureVerification.trustVerification.timestamp')\r\n        );\r\n        break;\r\n      default:\r\n        console.warn(\r\n          `Unexpected pdftron::PDF::VerificationOptions::TimeMode: ${timeOfTrustVerificationEnum}`\r\n        );\r\n    }\r\n    return (\r\n      <div className=\"trust-verification-result\">\r\n        <p>\r\n          {\r\n            translate(\r\n              trustVerificationResultBoolean\r\n                ? 'digitalSignatureVerification.trustVerification.verifiedTrust'\r\n                : 'digitalSignatureVerification.trustVerification.noTrustVerification'\r\n            )\r\n          }\r\n        </p>\r\n        {\r\n          /**\r\n           * @todo Chat with @rastko when he is available to determine what\r\n           * content from `trustVerificationResultString` could potentially\r\n           * be important to show to users\r\n           *\r\n           * <div>\r\n           *   <p className='bold'>Trust verification result:</p>\r\n           *   {\r\n           *     trustVerificationResultString.split('\\n').map((line, idx) => {\r\n           *       return (\r\n           *         <p\r\n           *           key={`trustVerificationResultString-${idx}`}\r\n           *           className={line[0] === '\\t' ? '' : 'bold'}\r\n           *         >\r\n           *           {line}\r\n           *         </p>\r\n           *       );\r\n           *     })\r\n           *   }\r\n           * </div>\r\n           */\r\n        }\r\n        <p>{trustVerificationTime}</p>\r\n        <p>{verificationTimeMessage}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSignatureDetails = () => {\r\n    // No additional signature details to render\r\n    if (!contactInfo && !location && !reason) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"title dropdown\"\r\n          onClick={\r\n            () => setSignatureDetailsExpanded(!signatureDetailsExpanded)\r\n          }\r\n          onKeyPress={\r\n            () => setSignatureDetailsExpanded(!signatureDetailsExpanded)\r\n          }\r\n          role=\"button\"\r\n          tabIndex={0}\r\n        >\r\n          <div\r\n            className={classNames({\r\n              arrow: true,\r\n              expanded: signatureDetailsExpanded,\r\n            })}\r\n          >\r\n            <Icon glyph=\"ic_chevron_right_black_24px\" />\r\n          </div>\r\n          <p>\r\n            {\r\n              translate(\r\n                'digitalSignatureVerification.signatureDetails.signatureDetails'\r\n              )\r\n            }\r\n          </p>\r\n        </div>\r\n        {\r\n          signatureDetailsExpanded\r\n          && (\r\n            <div className=\"body\">\r\n              <div>\r\n                <p className=\"bold\">\r\n                  {\r\n                    `${translate('digitalSignatureVerification.signatureDetails.contactInformation')}:`\r\n                  }\r\n                </p>\r\n                <p className=\"result-for-header\">\r\n                  {\r\n                    contactInfo\r\n                    || translate('digitalSignatureVerification.signatureDetails.noContactInformation')\r\n                  }\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p className=\"bold\">\r\n                  {\r\n                    `${translate('digitalSignatureVerification.signatureDetails.location')}:`\r\n                  }\r\n                </p>\r\n                <p className=\"result-for-header\">\r\n                  {\r\n                    location\r\n                    || translate('digitalSignatureVerification.signatureDetails.noLocation')\r\n                  }\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p className=\"bold\">\r\n                  {\r\n                    `${translate('digitalSignatureVerification.signatureDetails.reason')}:`\r\n                  }\r\n                </p>\r\n                <p className=\"result-for-header\">\r\n                  {\r\n                    reason\r\n                    || translate('digitalSignatureVerification.signatureDetails.noReason')\r\n                  }\r\n                </p>\r\n              </div>\r\n              {\r\n                signTime && (\r\n                  <div>\r\n                    <p className=\"bold\">\r\n                      {\r\n                        `${translate('digitalSignatureVerification.signatureDetails.signingTime')}:`\r\n                      }\r\n                    </p>\r\n                    <p className=\"result-for-header\">\r\n                      {\r\n                        signTime\r\n                        || translate('digitalSignatureVerification.signatureDetails.noSigningTime')\r\n                      }\r\n                    </p>\r\n                  </div>\r\n                )\r\n              }\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const openSignatureModal = () => {\r\n    dispatch(actions.setSignatureValidationModalWidgetName(name));\r\n    dispatch(actions.openElement('signatureValidationModal'));\r\n  };\r\n\r\n  /**\r\n   * Renders a link to open the signature modal\r\n   */\r\n  const renderSignaturePropertiesLink = () => {\r\n    return (\r\n      <div\r\n        onClick={openSignatureModal}\r\n        onKeyPress={openSignatureModal}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        className=\"link\"\r\n      >\r\n        <p className=\"bold underline\">{translate('digitalSignatureVerification.signatureProperties')}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"signature-widget-info\"\r\n    >\r\n      {signed ? (\r\n        <React.Fragment>\r\n          {renderTitle()}\r\n          {isExpanded && (\r\n            <div>\r\n              <div className=\"header\">\r\n                {\r\n                  renderVerificationStatus({\r\n                    isCertification,\r\n                    verificationStatus,\r\n                  })\r\n                }\r\n                <div className=\"body\">\r\n                  {\r\n                    renderPermissionStatus({\r\n                      isCertification,\r\n                      ModificationPermissionsStatus,\r\n                      permissionStatus,\r\n                      translate,\r\n                    })\r\n                  }\r\n                  {renderDisallowedChanges()}\r\n                  {renderTrustVerification()}\r\n                  {renderSignaturePropertiesLink()}\r\n                </div>\r\n              </div>\r\n              <div className=\"header header-with-arrow\">\r\n                {renderSignatureDetails()}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <div\r\n            className=\"title link\"\r\n            tabIndex={0}\r\n            onClick={() => jumpToWidget(field)}\r\n            onKeyPress={() => jumpToWidget(field)}\r\n          >\r\n            <SignatureIcon />\r\n            <p>{translate('digitalSignatureVerification.unsignedSignatureField', { fieldName: field.name })}</p>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n      <WidgetLocator rect={locatorRect} />\r\n    </div>\r\n  );\r\n};\r\n\r\nWidgetInfo.propTypes = propTypes;\r\n\r\nexport default WidgetInfo;\r\n","import WidgetInfo, { renderPermissionStatus } from './WidgetInfo';\r\n\r\nexport default WidgetInfo;\r\nexport {\r\n  renderPermissionStatus\r\n};\r\n","import React, { useCallback, useEffect, useState, } from 'react';\r\nimport { useDispatch, useSelector, } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport actions from 'actions';\r\nimport core from 'core';\r\nimport selectors from 'selectors';\r\nimport setVerificationResult from 'helpers/setVerificationResult';\r\n\r\nimport Spinner from './Spinner';\r\nimport WidgetInfo from './WidgetInfo';\r\n\r\nimport './SignaturePanel.scss';\r\nimport Icon from 'components/Icon';\r\nimport { panelData, panelNames } from 'constants/panel';\r\n\r\nconst SignaturePanel = () => {\r\n  const dispatch = useDispatch();\r\n  const [fields, setFields] = useState([]);\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [certificateErrorMessage, setCertificateErrorMessage] = useState('');\r\n  const [document, setDocument] = useState(core.getDocument());\r\n  const [\r\n    isDisabled,\r\n    certificate,\r\n    trustLists,\r\n    currentLanguage,\r\n    revocationChecking,\r\n    revocationProxyPrefix,\r\n  ] = useSelector((state) => [\r\n    selectors.isElementDisabled(state, 'signaturePanel'),\r\n    selectors.getCertificates(state),\r\n    selectors.getTrustLists(state),\r\n    selectors.getCurrentLanguage(state),\r\n    selectors.getIsRevocationCheckingEnabled(state),\r\n    selectors.getRevocationProxyPrefix(state),\r\n  ]);\r\n  const [translate] = useTranslation();\r\n\r\n  const onDocumentLoaded = async () => {\r\n    setDocument(core.getDocument());\r\n  };\r\n\r\n  const onDocumentUnloaded = useCallback(() => {\r\n    setShowSpinner(true);\r\n    dispatch(actions.setVerificationResult({}));\r\n  }, [setShowSpinner, dispatch]);\r\n\r\n  const onAnnotationChanged = ((annotations, action) => {\r\n    const isInFormCreationMode = core.getAnnotationManager().getFormFieldCreationManager().isInFormFieldCreationMode();\r\n\r\n    if (action === 'add') {\r\n      addSignatureWidgetAnnotations(core.getAnnotationManager().getAnnotationsList());\r\n    } else if (action === 'delete' && isInFormCreationMode) {\r\n      removeAnnotations(annotations);\r\n    }\r\n  });\r\n\r\n  const addNonSignedFields = () => {\r\n    const currentAnnotations = core.getAnnotationManager().getAnnotationsList();\r\n    addSignatureWidgetAnnotations(currentAnnotations);\r\n  };\r\n\r\n  const addSignatureWidgetAnnotations = (annotations) => {\r\n    const currentFields = [];\r\n    annotations.forEach((annotation) => {\r\n      if (annotation instanceof window.Core.Annotations.SignatureWidgetAnnotation) {\r\n        currentFields.push(annotation.getField());\r\n      }\r\n    });\r\n    const newSet = new Set(currentFields);\r\n    setFields([...newSet]);\r\n  };\r\n\r\n  const removeAnnotations = (annotations) => {\r\n    annotations.forEach((annotation) => {\r\n      removeMatchingWidget(annotation);\r\n    });\r\n\r\n    addNonSignedFields();\r\n  };\r\n\r\n  const removeMatchingWidget = (annotation) => {\r\n    const annot = annotation;\r\n    const widgetFieldName = annot.getCustomData('trn-form-field-name');\r\n    const isRectanglePlaceholder = annotation instanceof window.Core.Annotations.RectangleAnnotation && widgetFieldName;\r\n    if (isRectanglePlaceholder) {\r\n      const annotationManager = core.getAnnotationManager();\r\n      const annotationList = annotationManager.getAnnotationsList();\r\n      const widgetToDelete = annotationList.filter((annotation) => {\r\n        return annotation.getCustomData('trn-editing-rectangle-id') === annot.Id;\r\n      });\r\n      annotationManager.deleteAnnotations(widgetToDelete);\r\n    }\r\n  };\r\n\r\n  const resetFields = () => {\r\n    setFields([]);\r\n    addNonSignedFields();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // This ensures that when the document loads, the state of this component is\r\n    // updated accordingly\r\n    core.addEventListener('documentLoaded', onDocumentLoaded);\r\n    core.addEventListener('documentUnloaded', onDocumentUnloaded);\r\n    core.addEventListener('annotationChanged', onAnnotationChanged);\r\n    core.addEventListener('formFieldCreationModeStarted', resetFields);\r\n    core.addEventListener('formFieldCreationModeEnded', resetFields);\r\n    return () => {\r\n      core.removeEventListener('documentLoaded', onDocumentLoaded);\r\n      core.removeEventListener('documentUnloaded', onDocumentUnloaded);\r\n      core.removeEventListener('annotationChanged', onAnnotationChanged);\r\n      core.removeEventListener('formFieldCreationModeStarted', resetFields);\r\n      core.removeEventListener('formFieldCreationModeEnded', resetFields);\r\n    };\r\n  }, [onDocumentUnloaded]);\r\n\r\n  useEffect(() => {\r\n    // Need certificates for PDFNet to verify against, and for the document\r\n    // to be loaded in order to iterate through the signature fields in the\r\n    // document\r\n    if (document) {\r\n      // We need to wait for the annotationsLoaded event, otherwise the\r\n      // Field will not exist in the document\r\n      core.getAnnotationsLoadedPromise().then(() => {\r\n        setShowSpinner(true);\r\n        setVerificationResult(document, certificate, trustLists, currentLanguage, revocationChecking, revocationProxyPrefix, dispatch)\r\n          .then(async (verificationResult) => {\r\n            const fieldManager = core.getAnnotationManager().getFieldManager();\r\n            setFields(Object.keys(verificationResult).map((fieldName) => fieldManager.getField(fieldName)));\r\n            setCertificateErrorMessage('');\r\n          })\r\n          .catch((e) => {\r\n            if (e && e.message) {\r\n              setCertificateErrorMessage(e.message);\r\n            } else {\r\n              console.error(e);\r\n            }\r\n          })\r\n          .then(() => {\r\n            addNonSignedFields();\r\n          })\r\n          .finally(() => {\r\n            setShowSpinner(false);\r\n          });\r\n      });\r\n    } else {\r\n      setShowSpinner(true);\r\n    }\r\n  }, [certificate, document, dispatch, currentLanguage]);\r\n\r\n  if (isDisabled) {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Returns a JSX element if document loading is not complete, or an error\r\n   * occurs, otherwise nothing is returned, indicating that information about\r\n   * one or more signature will be returned from this component\r\n   */\r\n  const renderLoadingOrErrors = () => {\r\n    let result;\r\n    if (showSpinner) {\r\n      result = <Spinner />;\r\n    } else if (certificateErrorMessage === 'Error reading the local certificate') {\r\n      result = translate('digitalSignatureVerification.panelMessages.localCertificateError');\r\n    } else if (certificateErrorMessage === 'Download Failed') {\r\n      result = translate('digitalSignatureVerification.panelMessages.certificateDownloadError');\r\n    } else if (!fields.length) {\r\n      result = translate('digitalSignatureVerification.panelMessages.noSignatureFields');\r\n    } else {\r\n      /**\r\n       * If document has completed loading, there are no errors, and there are\r\n       * signature fields, this function does not need to return anything\r\n       */\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"empty-panel-container\">\r\n        <Icon className=\"empty-icon\" glyph={panelData[panelNames.SIGNATURE].icon}/>\r\n        <div className=\"empty-message\">{result}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"Panel SignaturePanel\"\r\n      data-element=\"signaturePanel\"\r\n    >\r\n      {renderLoadingOrErrors()}\r\n      {\r\n        !showSpinner && fields.length > 0 && (\r\n          fields.map((field, index) => {\r\n            return (\r\n              <WidgetInfo\r\n                key={index}\r\n                name={field.name}\r\n                collapsible\r\n                field={field}\r\n              />\r\n            );\r\n          })\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignaturePanel;\r\n","import SignaturePanel from './SignaturePanel';\r\nimport Spinner from './Spinner';\r\nimport { renderPermissionStatus } from './WidgetInfo';\r\n\r\nexport default SignaturePanel;\r\n\r\nexport {\r\n  renderPermissionStatus,\r\n  SignaturePanel,\r\n  Spinner\r\n};\r\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".signature-icon .badge{color:#fff}.signature-icon .medium{width:18px;height:18px}.signature-icon .small{width:16px;height:16px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.SignaturePanel{z-index:65;transition:transform .3s ease,visibility 0s ease .3s}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignaturePanel{top:0;width:100%;height:100%}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignaturePanel{top:0;width:100%;height:100%}}.open.SignaturePanel{transform:none;visibility:visible;transition:transform .3s ease,visibility 0s ease 0s}.SignaturePanel .empty-panel-container{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%;width:100%;padding:36px;grid-gap:8px;gap:8px}.SignaturePanel .empty-panel-container .empty-icon{width:60px;height:60px;color:var(--gray-6);fill:var(--gray-6)}.SignaturePanel .empty-panel-container .empty-icon svg{width:60px;height:60px}.SignaturePanel .empty-panel-container .empty-message{text-align:center;max-width:131px;font-size:14px}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignaturePanel .empty-panel-container .empty-message{line-height:15px}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignaturePanel .empty-panel-container .empty-message{line-height:15px}}.SignaturePanel{margin:0 8px 8px;display:flex;flex-direction:column}.SignaturePanel .center{flex-grow:1;display:flex;justify-content:center;align-items:center}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".SignaturePanel .spinner{margin:10px;border:5px solid #ddd;border-top-color:#aaa;border-radius:50%;width:40px;height:40px;animation:spin 1.2s ease infinite}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".signature-widget-info{--widget-header-indent:49px;--widget-body-indent:22px;--arrow-width:22px;display:flex;flex-direction:column;font-size:13px;margin-bottom:10px;margin-left:5px}.signature-widget-info p+p{margin:1em 0 0}.signature-widget-info p.result-for-header{margin-top:0}.signature-widget-info p.bold{font-weight:700;margin-bottom:4px}.signature-widget-info p.underline{text-decoration:underline}.signature-widget-info .link{cursor:pointer;outline:none}.signature-widget-info .dropdown{outline:none}.signature-widget-info .dropdown:hover{cursor:pointer;background:var(--outline-hover);--border-radius-amount:4px;-moz-border-radius-topleft:var(--border-radius-amount);-moz-border-radius-topright:var(--border-radius-amount);-moz-border-radius-bottomright:var(--border-radius-amount);-moz-border-radius-bottomleft:var(--border-radius-amount);border-radius:var(--border-radius-amount)}.signature-widget-info .title{font-weight:700;display:flex;align-items:center;min-height:32px;margin-top:-5px;margin-bottom:-5px;overflow:hidden}.signature-widget-info .title div+*{margin-left:2px}.signature-widget-info .title .arrow{transition:transform .1s ease}.signature-widget-info .title .arrow.expanded{transform:rotate(90deg)}.signature-widget-info .title .arrow .Icon{width:var(--arrow-width);height:22px}.signature-widget-info .title .signature-icon{margin-right:5px}.signature-widget-info .header{margin-left:var(--widget-header-indent)}.signature-widget-info .header .body{margin-left:var(--widget-body-indent)}.signature-widget-info .header .body>div:first-child>p:first-child,.signature-widget-info .header .body>p:first-child{margin-top:.5em}.signature-widget-info .header .body>div:last-child{margin-bottom:.5em}.signature-widget-info .header-with-arrow{margin-left:calc(var(--widget-header-indent) - var(--arrow-width))}.signature-widget-info .header-with-arrow .body{margin-left:calc(var(--widget-body-indent) + var(--arrow-width))}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./SignatureIcon.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./SignaturePanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./Spinner.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./WidgetInfo.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["propTypes","badge","PropTypes","size","SignatureIcon","_ref","_ref$size","React","className","Icon","glyph","concat","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_callee","doc","certificates","trustLists","currentLanguage","revocationChecking","revocationProxyPrefix","dispatch","verificationResult","_context","getVerificationResult","actions","setVerificationResult","_x","_x2","_x3","_x4","_x5","_x6","_x7","_ref2","_callee5","PDFNet","VerificationResult","TrustStatus","DigestStatus","ModificationPermissionsStatus","DocumentStatus","verificationResults","_context6","window","Core","runWithCleanup","_callee4","opts","_iterator","_step","_loop","_iterator2","_step2","trustList","trustListDataStructure","supportedDataStructures","fdfDocBuffer","fdf","fieldIterator","field","digitalSigField","result","id","signer","signTime","documentPermission","isCertification","contactInfo","location","reason","validAtTimeOfSigning","signerName","issuerField","subjectField","signed","subFilter","signerCert","retrievedSubjectField","processedSubjectField","verificationStatus","documentStatus","digestStatus","trustStatus","permissionStatus","digestAlgorithm","disallowedChanges","validSignerIdentity","trustVerificationResultString","trustVerificationResultBoolean","timeOfTrustVerificationEnum","trustVerificationTime","trustVerificationResult","epochTrustVerificationTime","certPath","firstX509Cert","retrievedIssuerField","processedIssuerField","_retrievedSubjectField","_processedSubjectField","lastX509Cert","notBeforeEpochTime","notAfterEpochTime","badgeIcon","fieldName","_context5","getPDFDoc","VerificationOptions","SecurityLevel","e_compatibility_and_archiving","enableOnlineCRLRevocationChecking","setRevocationProxyPrefix","_createForOfIteratorHelper","certificate","fileReader","arrayBufferPromise","_context4","addTrustedCertificateFromURL","t0","console","File","toString","FileReader","addEventListener","_ref5","_callee3","_context3","Uint8Array","target","_x15","readAsArrayBuffer","t1","t2","addTrustedCertificate","t3","ArrayBuffer","Int8Array","Uint8ClampedArray","t4","arrayBuffer","includes","join","FDFDoc","createFromMemoryBuffer","loadTrustList","getFieldIteratorBegin","hasNext","current","isValid","getType","t5","t6","Field","Type","e_signature","DigitalSignatureField","createFromField","verify","getSDFObj","getObjNum","hasCryptographicSignature","getSubFilter","SubFilterType","e_adbe_pkcs7_detached","getSignerCertFromCMS","getSubjectField","processX501DistinguishedName","t7","e_ETSI_RFC3161","getSignatureName","t8","getContactInfo","getSigningTime","formatPDFNetDate","getLocation","getReason","getDocumentPermissions","getVerificationStatus","getDocumentStatus","getDigestStatus","getTrustStatus","getPermissionsStatus","getDigestAlgorithm","t9","getDisallowedChanges","t10","map","_ref4","_callee2","change","_context2","getTypeAsString","objnum","_x14","all","e_trust_verified","hasTrustVerificationResult","getTrustVerificationResult","wasSuccessful","getResultString","getTimeOfTrustVerificationEnum","getTimeOfTrustVerification","formatDate","getCertPath","getIssuerField","assign","getNotBeforeEpochTime","getNotAfterEpochTime","t11","warn","e_no_error","e_digest_verified","e_digest_verification_disabled","e_no_trust_status","e_unmodified","e_has_allowed_changes","e_permissions_verification_disabled","e_commonName","getName","t12","_x8","_x9","_x10","_x11","_x12","_x13","date","year","month","day","hour","minute","second","Date","UTC","toLocaleDateString","replace","weekday","timeZoneName","epochTime","setUTCSeconds","_ref6","_callee6","x501DistinguishedNameObject","processedObject","allAttributeAndValues","_iterator3","_step3","x501AttributeTypeAndValue","objectIdentifier","_context7","getAllAttributesAndValues","getAttributeTypeOID","getRawValue","getStringValue","translateObjectIdentifierBotanOID","_x16","objectIdentifierOIDenum","JSON","stringify","rect","_useState2","useState","show","setShow","useEffect","scrollViewContainer","core","getScrollViewElement","handleScroll","removeEventListener","setTimeout","ReactDOM","style","position","top","y1","left","x1","width","x2","height","y2","border","zIndex","getRootNode","querySelector","renderPermissionStatus","content","translate","e_invalidated_by_disallowed_changes","e_no_permissions_status","isRequired","collapsible","onClick","Annotations","Forms","WidgetInfo","verificationType","useSelector","state","selectors","_slicedToArray","isExpanded","setIsExpanded","_useState4","locatorRect","setLocatorRect","_useState6","signatureDetailsExpanded","setSignatureDetailsExpanded","_window$Core$PDFNet","TimeMode","useTranslation","useDispatch","jumpToWidget","widgets","widget","jumpToAnnotation","_core$getScrollViewEl","scrollLeft","scrollTop","getRect","windowTopLeft","getDisplayModeObject","pageToWindow","x","PageNumber","windowBottomRight","titleInteraction","event","stopPropagation","openSignatureModal","setSignatureValidationModalWidgetName","openElement","onKeyPress","role","tabIndex","classNames","arrow","expanded","_ref3","verificationTimeMessage","e_current","e_signing","e_timestamp","renderTrustVerification","WidgetLocator","arr","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","from","test","len","arr2","fields","setFields","showSpinner","setShowSpinner","certificateErrorMessage","setCertificateErrorMessage","_useState8","getDocument","document","setDocument","_useSelector2","isElementDisabled","getCertificates","getTrustLists","getCurrentLanguage","getIsRevocationCheckingEnabled","getRevocationProxyPrefix","isDisabled","onDocumentLoaded","onDocumentUnloaded","useCallback","onAnnotationChanged","annotations","action","isInFormCreationMode","getAnnotationManager","getFormFieldCreationManager","isInFormFieldCreationMode","addSignatureWidgetAnnotations","getAnnotationsList","removeAnnotations","addNonSignedFields","currentAnnotations","currentFields","annotation","SignatureWidgetAnnotation","getField","newSet","Set","removeMatchingWidget","annot","widgetFieldName","getCustomData","RectangleAnnotation","annotationManager","widgetToDelete","filter","Id","deleteAnnotations","resetFields","getAnnotationsLoadedPromise","fieldManager","getFieldManager","message","Spinner","panelData","panelNames","SIGNATURE","icon","renderLoadingOrErrors","index","exports","___CSS_LOADER_API_IMPORT___","module","locals","api","__esModule","default","options","styleTag","isApryseWebViewerWebComponent","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","tagName","root","elements","querySelectorAll","el","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode"],"sourceRoot":""}
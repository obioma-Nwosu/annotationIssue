{"version":3,"file":"chunks/8420.chunk.js","mappings":"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","sources":["webpack://webviewer-ui/./src/components/PageManipulationOverlay/PageRotationControls/PageRotationControls.js","webpack://webviewer-ui/./src/components/PageManipulationOverlay/PageRotationControls/PageRotationControlsContainer.js","webpack://webviewer-ui/./src/components/PageManipulationOverlay/PageRotationControls/index.js","webpack://webviewer-ui/./src/components/PageManipulationOverlay/CustomPageManipulationOperations/CustomPageManipulationOperations.js","webpack://webviewer-ui/./src/components/PageManipulationOverlay/CustomPageManipulationOperations/index.js","webpack://webviewer-ui/./src/components/PageManipulationOverlay/PageManipulationOverlay.js","webpack://webviewer-ui/./src/components/PageManipulationOverlay/PageManipulationOverlayContainer.js","webpack://webviewer-ui/./src/components/PageManipulationOverlay/index.js"],"sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\nimport Button from 'components/Button';\r\n\r\n\r\nfunction PageRotationControls(props) {\r\n  const { t } = useTranslation();\r\n  const { rotateClockwise, rotateCounterClockwise } = props;\r\n\r\n\r\n  return (\r\n    <>\r\n      <DataElementWrapper\r\n        dataElement=\"pageRotationHeader\"\r\n        className=\"type\"\r\n      >\r\n        {t('action.rotate')}\r\n      </DataElementWrapper>\r\n      <DataElementWrapper\r\n        dataElement=\"rotatePageClockwise\"\r\n        className=\"row\"\r\n        onClick={rotateClockwise}\r\n      >\r\n        <Button\r\n          title=\"option.thumbnailPanel.rotatePageClockwise\"\r\n          img=\"icon-header-page-manipulation-page-rotation-clockwise-line\"\r\n          role=\"option\"\r\n        />\r\n        <div className=\"title\">{t('option.thumbnailPanel.rotateClockwise')}</div>\r\n      </DataElementWrapper>\r\n      <DataElementWrapper\r\n        dataElement=\"rotatePageCounterClockwise\"\r\n        className=\"row\"\r\n        onClick={rotateCounterClockwise}\r\n      >\r\n        <Button\r\n          title=\"option.thumbnailPanel.rotatePageCounterClockwise\"\r\n          img=\"icon-header-page-manipulation-page-rotation-counterclockwise-line\"\r\n          role=\"option\"\r\n        />\r\n        <div className=\"title\">{t('option.thumbnailPanel.rotateCounterClockwise')}</div>\r\n      </DataElementWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PageRotationControls;","import React from 'react';\r\nimport PageRotationControls from './PageRotationControls';\r\nimport { noPagesSelectedWarning, rotateClockwise, rotateCounterClockwise } from 'helpers/pageManipulationFunctions';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport actions from 'actions';\r\nimport { isMobile } from 'helpers/device';\r\nimport DataElements from 'constants/dataElement';\r\n\r\nconst propTypes = {\r\n  pageNumbers: PropTypes.arrayOf(PropTypes.number),\r\n  warn: PropTypes.bool,\r\n};\r\n\r\nfunction PageRotationControlsContainer(props) {\r\n  const dispatch = useDispatch();\r\n  const { pageNumbers, warn } = props;\r\n\r\n  const onRotateCounterClockwise = () => {\r\n    if (warn) {\r\n      !noPagesSelectedWarning(pageNumbers, dispatch) && rotateCounterClockwise(pageNumbers);\r\n    } else {\r\n      rotateCounterClockwise(pageNumbers);\r\n    }\r\n    isMobile() && dispatch(actions.closeElement(DataElements.PAGE_MANIPULATION_OVERLAY));\r\n  };\r\n  const onRotateClockwise = () => {\r\n    if (warn) {\r\n      !noPagesSelectedWarning(pageNumbers, dispatch) && rotateClockwise(pageNumbers);\r\n    } else {\r\n      rotateClockwise(pageNumbers);\r\n    }\r\n    isMobile() && dispatch(actions.closeElement(DataElements.PAGE_MANIPULATION_OVERLAY));\r\n  };\r\n  return (\r\n    <PageRotationControls\r\n      rotateCounterClockwise={onRotateCounterClockwise}\r\n      rotateClockwise={onRotateClockwise}\r\n    />\r\n  );\r\n}\r\n\r\nPageRotationControlsContainer.propTypes = propTypes;\r\n\r\nexport default PageRotationControlsContainer;","import PageRotationControlsContainer from './PageRotationControlsContainer';\r\n\r\nexport default PageRotationControlsContainer;","import React from 'react';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\nimport Button from 'components/Button';\r\n\r\nfunction CustomPageManipulationOperations(props) {\r\n  const { dataElement, pageNumbers, header, operations } = props;\r\n\r\n  function renderIcon(operation) {\r\n    if (operation.img) {\r\n      return (\r\n        <Button\r\n          title={operation.title}\r\n          img={operation.img}\r\n          role=\"option\"\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DataElementWrapper\r\n        dataElement={dataElement}\r\n        className=\"type\"\r\n      >\r\n        {header}\r\n      </DataElementWrapper>\r\n      {operations.map((operation) => {\r\n        return (\r\n          <DataElementWrapper\r\n            key={operation.dataElement}\r\n            className=\"row\"\r\n            dataElement={operation.dataElement}\r\n            onClick={() => operation.onClick(pageNumbers)}\r\n          >\r\n            {renderIcon(operation)}\r\n            <div className=\"title\">{operation.title}</div>\r\n          </DataElementWrapper>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomPageManipulationOperations;","import CustomPageManipulationOperations from './CustomPageManipulationOperations';\r\n\r\nexport default CustomPageManipulationOperations;","import actions from 'actions';\r\nimport React, { useEffect, useCallback } from 'react';\r\nimport PageRotationControls from './PageRotationControls';\r\nimport PageManipulationControls from './PageManipulationControls';\r\nimport PageAdditionalControls from 'components/PageManipulationOverlay/PageAdditionalControls';\r\nimport CustomPageManipulationOperations from './CustomPageManipulationOperations';\r\nimport { workerTypes } from 'constants/types';\r\nimport core from 'core';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport DataElements from 'src/constants/dataElement';\r\n\r\nfunction InitialPageManipulationOverlay({ children, pageNumbers, pageManipulationOverlayItems }) {\r\n  const childrenArray = React.Children.toArray(children);\r\n\r\n  return pageManipulationOverlayItems.map((item, index) => {\r\n    const { dataElement, type } = item;\r\n    let component = childrenArray.find((child) => child.props.dataElement === dataElement);\r\n    const key = dataElement || `${type}-${index}`;\r\n\r\n    if (!component) {\r\n      if (type === 'divider') {\r\n        component = <div className=\"divider\" />;\r\n      }\r\n\r\n      if (type === 'customPageOperation') {\r\n        component = <CustomPageManipulationOperations key={dataElement} pageNumbers={pageNumbers} {...item} />;\r\n      }\r\n    }\r\n\r\n    return component\r\n      ? React.cloneElement(component, {\r\n        key,\r\n      })\r\n      : null;\r\n  });\r\n}\r\n\r\n\r\nfunction PageManipulationOverlay(props) {\r\n  const { pageNumbers, pageManipulationOverlayItems } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const closeOverlay = useCallback(() => {\r\n    dispatch(actions.setPageManipulationOverlayAlternativePosition(null));\r\n    dispatch(actions.closeElements([DataElements.PAGE_MANIPULATION_OVERLAY]));\r\n  }, [dispatch]);\r\n\r\n  const document = core.getDocument();\r\n  const documentType = document?.type;\r\n  const isXod = documentType === workerTypes.XOD;\r\n  const isOffice = documentType === workerTypes.OFFICE || documentType === workerTypes.LEGACY_OFFICE;\r\n  let filteredPageManipulationOverlayItems = pageManipulationOverlayItems;\r\n  if (isXod || isOffice) {\r\n    const removedIndices = filteredPageManipulationOverlayItems.reduce((acc, { dataElement }, index) => {\r\n      if (dataElement === 'pageAdditionalControls') {\r\n        acc.push(index);\r\n        if (filteredPageManipulationOverlayItems[index + 1]?.type === 'divider') {\r\n          acc.push(index + 1);\r\n        }\r\n      }\r\n      if (dataElement === 'pageManipulationControls') {\r\n        acc.push(index);\r\n        if (filteredPageManipulationOverlayItems[index - 1]?.type === 'divider') {\r\n          acc.push(index - 1);\r\n        }\r\n      }\r\n      return acc;\r\n    }, []);\r\n    filteredPageManipulationOverlayItems = filteredPageManipulationOverlayItems.filter((_, index) => !removedIndices.includes(index));\r\n  }\r\n\r\n  useEffect(() => {\r\n    core.addEventListener('documentLoaded', closeOverlay);\r\n    return () => {\r\n      core.removeEventListener('documentLoaded', closeOverlay);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <InitialPageManipulationOverlay pageNumbers={pageNumbers} pageManipulationOverlayItems={filteredPageManipulationOverlayItems}>\r\n      { !isXod && !isOffice && <PageAdditionalControls pageNumbers={pageNumbers} dataElement=\"pageAdditionalControls\" /> }\r\n      <PageRotationControls pageNumbers={pageNumbers} dataElement=\"pageRotationControls\" />\r\n      { !isXod && !isOffice && <PageManipulationControls pageNumbers={pageNumbers} dataElement=\"pageManipulationControls\" /> }\r\n    </InitialPageManipulationOverlay>\r\n  );\r\n}\r\n\r\nexport default PageManipulationOverlay;","import React from 'react';\r\nimport { shallowEqual, useSelector } from 'react-redux';\r\nimport PageManipulationOverlay from './PageManipulationOverlay';\r\nimport FlyoutMenu from '../FlyoutMenu/FlyoutMenu';\r\nimport selectors from 'selectors';\r\nimport DataElements from 'constants/dataElement';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction PageManipulationOverlayContainer() {\r\n  const [\r\n    selectedPageIndexes,\r\n    currentPage,\r\n    pageManipulationOverlayItems,\r\n  ] = useSelector((state) => [\r\n    selectors.getSelectedThumbnailPageIndexes(state),\r\n    selectors.getCurrentPage(state),\r\n    selectors.getPageManipulationOverlayItems(state),\r\n  ], shallowEqual);\r\n\r\n  // If we start drilling this prop, maybe create a context\r\n  const pageNumbers = selectedPageIndexes.length > 0 ? selectedPageIndexes.map((i) => i + 1) : [currentPage];\r\n\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <FlyoutMenu\r\n      menu={DataElements.PAGE_MANIPULATION_OVERLAY}\r\n      trigger={DataElements.PAGE_MANIPULATION_OVERLAY_BUTTON}\r\n      ariaLabel={t('option.thumbnailPanel.moreOptionsMenu')}\r\n    >\r\n      <span className=\"visually-hidden\">\r\n        <p aria-live=\"assertive\" role=\"alert\"> {t('option.thumbnailPanel.moreOptionsMenu')}</p>\r\n      </span>\r\n      <PageManipulationOverlay\r\n        pageNumbers={pageNumbers}\r\n        pageManipulationOverlayItems={pageManipulationOverlayItems}\r\n      />\r\n    </ FlyoutMenu>\r\n  );\r\n}\r\n\r\nexport default PageManipulationOverlayContainer;","import PageManipulationOverlay from './PageManipulationOverlayContainer';\r\n\r\nexport default PageManipulationOverlay;"],"names":["props","t","useTranslation","rotateClockwise","rotateCounterClockwise","React","DataElementWrapper","dataElement","className","onClick","Button","title","img","role","propTypes","pageNumbers","PropTypes","warn","PageRotationControlsContainer","dispatch","useDispatch","PageRotationControls","noPagesSelectedWarning","isMobile","actions","closeElement","DataElements","PAGE_MANIPULATION_OVERLAY","header","operations","map","operation","key","renderIcon","InitialPageManipulationOverlay","_ref","children","pageManipulationOverlayItems","childrenArray","toArray","item","index","type","component","find","child","concat","CustomPageManipulationOperations","_extends","closeOverlay","useCallback","setPageManipulationOverlayAlternativePosition","closeElements","document","core","getDocument","documentType","isXod","workerTypes","XOD","isOffice","OFFICE","LEGACY_OFFICE","filteredPageManipulationOverlayItems","removedIndices","reduce","acc","_ref2","_filteredPageManipula","_filteredPageManipula2","push","filter","_","includes","useEffect","addEventListener","removeEventListener","PageAdditionalControls","PageManipulationControls","_useSelector2","_slicedToArray","useSelector","state","selectors","getSelectedThumbnailPageIndexes","getCurrentPage","getPageManipulationOverlayItems","shallowEqual","selectedPageIndexes","currentPage","length","i","FlyoutMenu","menu","trigger","PAGE_MANIPULATION_OVERLAY_BUTTON","ariaLabel","PageManipulationOverlay"],"sourceRoot":""}
{"version":3,"file":"chunks/1035.chunk.js","mappings":"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","sources":["webpack://webviewer-ui/./src/components/ScaleModal/ScaleCustom.js","webpack://webviewer-ui/./src/components/ScaleModal/ScaleModal.js","webpack://webviewer-ui/./src/components/ScaleModal/index.js","webpack://webviewer-ui/./src/components/ScaleModal/ScaleModal.scss","webpack://webviewer-ui/./src/components/ScaleModal/ScaleModal.scss?77d3"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport selectors from 'selectors';\r\nimport Tooltip from '../Tooltip';\r\nimport Dropdown from '../Dropdown';\r\nimport {\r\n  ifFractionalPrecision,\r\n  hintValues,\r\n  convertUnit,\r\n  fractionalUnits,\r\n  floatRegex,\r\n  inFractionalRegex,\r\n  ftInFractionalRegex,\r\n  ftInDecimalRegex,\r\n  parseFtInDecimal,\r\n  parseInFractional,\r\n  parseFtInFractional\r\n} from 'constants/measurementScale';\r\nimport classNames from 'classnames';\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nconst ScaleCustomProps = {\r\n  scale: PropTypes.array,\r\n  onScaleChange: PropTypes.func,\r\n  precision: PropTypes.number\r\n};\r\n\r\nfunction ScaleCustom({ scale, onScaleChange, precision }) {\r\n  const [measurementUnits] = useSelector((state) => [selectors.getMeasurementUnits(state)], shallowEqual);\r\n  const [pageValueDisplay, setPageValueDisplay] = useState('');\r\n  const [worldValueDisplay, setWorldValueDisplay] = useState('');\r\n  const [isFractionalPrecision, setIsFractionalPrecision] = useState(false);\r\n  const [pageWarningMessage, setPageWarningMessage] = useState('');\r\n  const [worldWarningMessage, setWorldWarningMessage] = useState('');\r\n  const [scaleValueBlurFlag, setScaleValueBlurFlag] = useState(false);\r\n\r\n  const pageValueInput = useRef(null);\r\n  const worldValueInput = useRef(null);\r\n\r\n  const [t] = useTranslation();\r\n\r\n  const filterFractionalUnits = (units) => units.filter((unit) => fractionalUnits.includes(unit));\r\n  const unitFromOptions = isFractionalPrecision ? filterFractionalUnits(measurementUnits.from) : measurementUnits.from;\r\n  const unitToOptions = isFractionalPrecision ? filterFractionalUnits(measurementUnits.to) : measurementUnits.to;\r\n\r\n  // If our scale has a unit that is not in the current 'from' measurement units, change it\r\n  // to the first unit in the list.\r\n  useEffect(() => {\r\n    if (!unitFromOptions.includes(scale[0][1])) {\r\n      onScaleUnitChange(unitFromOptions[0], true);\r\n    }\r\n  }, [scale[0][1]]);\r\n\r\n  // If our scale has a unit that is not in the current 'to' measurement units, change it\r\n  // to the first unit in the list. We want to wait until the 'from' unit is valid before\r\n  // setting the 'to' unit. Otherwise, we will reset the 'from' unit.\r\n  useEffect(() => {\r\n    if (unitFromOptions.includes(scale[0][1]) && !unitToOptions.includes(scale[1][1])) {\r\n      onScaleUnitChange(unitToOptions[0], false);\r\n    }\r\n  }, [scale[0][1], scale[1][1]]);\r\n\r\n  useEffect(() => {\r\n    const formatDecimal = (value) => {\r\n      return value?.toFixed((1 / precision).toString().length - 1);\r\n    };\r\n\r\n    if (scale[0][0] && pageValueInput?.current !== document.activeElement) {\r\n      if (!isFractionalPrecision) {\r\n        setPageValueDisplay(formatDecimal(scale[0][0]) || '');\r\n      } else {\r\n        setPageValueDisplay(Scale.getFormattedValue(scale[0][0], scale[0][1], precision, false, true) || '');\r\n      }\r\n    }\r\n    if (scale[1][0] && !(worldValueInput && worldValueInput.current === document.activeElement)) {\r\n      if (!isFractionalPrecision && scale[1][1] !== 'ft-in') {\r\n        setWorldValueDisplay(formatDecimal(scale[1][0]) || '');\r\n      } else {\r\n        setWorldValueDisplay(Scale.getFormattedValue(scale[1][0], scale[1][1], precision, false, true) || '');\r\n      }\r\n    }\r\n  }, [scale, precision, worldValueInput, pageValueInput, isFractionalPrecision, scaleValueBlurFlag]);\r\n\r\n  useEffect(() => {\r\n    setIsFractionalPrecision(ifFractionalPrecision(precision));\r\n  }, [precision]);\r\n\r\n  useEffect(() => {\r\n    if (isFractionalPrecision) {\r\n      setPageWarningMessage(hintValues[scale[0][1]]);\r\n      setWorldWarningMessage(hintValues[scale[1][1]]);\r\n    } else if (scale[1][1] === 'ft-in') {\r\n      setPageWarningMessage('');\r\n      setWorldWarningMessage(hintValues['ft-in decimal']);\r\n    } else {\r\n      setPageWarningMessage('');\r\n      setWorldWarningMessage('');\r\n    }\r\n  }, [scale, isFractionalPrecision]);\r\n\r\n  // Re-validate invalid world value input when world unit changes\r\n  useEffect(() => {\r\n    !isWorldValueValid && onInputValueChange(worldValueInput.current.value, false);\r\n  }, [scale[1][1]]);\r\n\r\n  // Re-validate invalid scale value input when isFractionalPrecision value changes\r\n  useEffect(() => {\r\n    if (!isPageValueValid && !isWorldValueValid) {\r\n      let pageScale = {\r\n        value: scale[0][0],\r\n        unit: scale[0][1]\r\n      };\r\n      onInputValueChange(pageValueInput.current.value, true, (newScale) => {\r\n        pageScale = newScale.pageScale;\r\n      });\r\n      let worldScale = {\r\n        value: scale[1][0],\r\n        unit: scale[1][1]\r\n      };\r\n      onInputValueChange(worldValueInput.current.value, false, (newScale) => {\r\n        worldScale = newScale.worldScale;\r\n      });\r\n\r\n      _onScaleChange(new Scale({ pageScale, worldScale }));\r\n    } else {\r\n      !isPageValueValid && onInputValueChange(pageValueInput.current.value, true);\r\n      !isWorldValueValid && onInputValueChange(worldValueInput.current.value, false);\r\n    }\r\n  }, [isFractionalPrecision]);\r\n\r\n  const isPageValueValid = !!scale[0][0];\r\n  const isWorldValueValid = !!scale[1][0];\r\n\r\n  const pageValueClass = classNames('scale-input', {\r\n    'invalid-value': !isPageValueValid\r\n  });\r\n  const worldValueClass = classNames('scale-input', {\r\n    'invalid-value': !isWorldValueValid\r\n  });\r\n\r\n  // If scale value is smaller than the current precision, replace it with precision value to prevent 0 value.\r\n  const _onScaleChange = (newScale) => {\r\n    const getPrecision = (unit) => (unit === 'ft-in' ? precision / 12 : precision);\r\n\r\n    if (newScale.pageScale.value && newScale.pageScale.value < precision) {\r\n      newScale.pageScale.value = getPrecision(newScale.pageScale.unit);\r\n    }\r\n    if (newScale.worldScale.value && newScale.worldScale.value < precision) {\r\n      newScale.worldScale.value = getPrecision(newScale.worldScale.unit);\r\n    }\r\n    onScaleChange(newScale);\r\n  };\r\n\r\n  const onInputValueChange = (value, isPageValue, getNewScale) => {\r\n    const updateScaleValue = (scaleValue) => {\r\n      if ((isPageValue && scaleValue !== scale[0][0]) || (!isPageValue && scaleValue !== scale[1][0])) {\r\n        const newScale = new Scale({\r\n          pageScale: { value: isPageValue ? scaleValue : scale[0][0], unit: scale[0][1] },\r\n          worldScale: { value: !isPageValue ? scaleValue : scale[1][0], unit: scale[1][1] }\r\n        });\r\n        if (getNewScale) {\r\n          getNewScale(newScale);\r\n        } else {\r\n          _onScaleChange(newScale);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (isPageValue) {\r\n      setPageValueDisplay(value);\r\n    } else {\r\n      setWorldValueDisplay(value);\r\n    }\r\n    const inputValue = value.trim();\r\n    if (!isFractionalPrecision) {\r\n      if (!isPageValue && scale[1][1] === 'ft-in') {\r\n        if (ftInDecimalRegex.test(inputValue)) {\r\n          const result = parseFtInDecimal(inputValue);\r\n          if (result > 0) {\r\n            updateScaleValue(result);\r\n            return;\r\n          }\r\n        }\r\n      } else if (floatRegex.test(inputValue)) {\r\n        const scaleValue = parseFloat(inputValue) || 0;\r\n        updateScaleValue(scaleValue);\r\n        return;\r\n      }\r\n    } else {\r\n      const scaleUnit = isPageValue ? scale[0][1] : scale[1][1];\r\n      if (scaleUnit === 'in') {\r\n        if (inFractionalRegex.test(inputValue)) {\r\n          const result = parseInFractional(inputValue);\r\n          if (result > 0) {\r\n            updateScaleValue(result);\r\n            return;\r\n          }\r\n        }\r\n      } else if (scaleUnit === 'ft-in') {\r\n        if (ftInFractionalRegex.test(inputValue)) {\r\n          const result = parseFtInFractional(inputValue);\r\n          if (result > 0) {\r\n            updateScaleValue(result);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    updateScaleValue(undefined);\r\n  };\r\n\r\n  const onScaleUnitChange = (newUnit, isPageUnit) => {\r\n    let newPageScale;\r\n    if (isPageUnit && newUnit !== scale[0][1]) {\r\n      newPageScale = {\r\n        value: scale[0][0] ? convertUnit(scale[0][0], scale[0][1], newUnit) : scale[0][0],\r\n        unit: newUnit\r\n      };\r\n    } else {\r\n      newPageScale = { value: scale[0][0], unit: scale[0][1] };\r\n    }\r\n    let newWorldScale;\r\n    if (!isPageUnit && newUnit !== scale[1][1]) {\r\n      newWorldScale = {\r\n        value: scale[1][0] ? convertUnit(scale[1][0], scale[1][1], newUnit) : scale[1][0],\r\n        unit: newUnit\r\n      };\r\n    } else {\r\n      newWorldScale = { value: scale[1][0], unit: scale[1][1] };\r\n    }\r\n\r\n    _onScaleChange(new Scale({ pageScale: newPageScale, worldScale: newWorldScale }));\r\n  };\r\n\r\n  const getInputPlaceholder = (isPageValue) => {\r\n    const unit = isPageValue ? scale[0][1] : scale[1][1];\r\n    return isFractionalPrecision ? hintValues[unit] : (unit === 'ft-in' ? hintValues['ft-in decimal'] : '');\r\n  };\r\n\r\n  const onInputBlur = () => {\r\n    setScaleValueBlurFlag((flag) => !flag);\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-scale-container\">\r\n      <div className=\"scale-ratio-input-container\">\r\n        <div className=\"scale-ratio-display\">\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              type={isFractionalPrecision ? 'text' : 'number'}\r\n              min=\"0\"\r\n              className={pageValueClass}\r\n              value={pageValueDisplay}\r\n              data-element=\"customPageScaleValue\"\r\n              onChange={(e) => onInputValueChange(e.target.value, true)}\r\n              placeholder={getInputPlaceholder(true)}\r\n              ref={pageValueInput}\r\n              onBlur={onInputBlur}\r\n            />\r\n            <Tooltip content={'option.measurement.scaleModal.paperUnits'}>\r\n              <div className=\"unit-input\">\r\n                <Dropdown\r\n                  dataElement=\"customPageScaleUnit\"\r\n                  items={unitFromOptions}\r\n                  onClickItem={(value) => onScaleUnitChange(value, true)}\r\n                  currentSelectionKey={scale[0][1]}\r\n                />\r\n              </div>\r\n            </Tooltip>\r\n          </div>\r\n          {' = '}\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              type={(isFractionalPrecision || scale[1][1] === 'ft-in') ? 'text' : 'number'}\r\n              min='0'\r\n              className={worldValueClass}\r\n              value={worldValueDisplay}\r\n              data-element=\"customDisplayScaleValue\"\r\n              onChange={(e) => onInputValueChange(e.target.value, false)}\r\n              placeholder={getInputPlaceholder(false)}\r\n              ref={worldValueInput}\r\n              onBlur={onInputBlur}\r\n            />\r\n            <Tooltip content={'option.measurement.scaleModal.displayUnits'}>\r\n              <div className=\"unit-input\">\r\n                <Dropdown\r\n                  items={unitToOptions}\r\n                  dataElement=\"customDisplayScaleUnit\"\r\n                  onClickItem={(value) => onScaleUnitChange(value, false)}\r\n                  currentSelectionKey={scale[1][1]}\r\n                />\r\n              </div>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"warning-messages\">\r\n        {!isPageValueValid && (\r\n          <div>\r\n            {`${t('option.measurement.scaleModal.incorrectSyntax')} ${pageWarningMessage}`}\r\n          </div>\r\n        )}\r\n        {!isWorldValueValid && (\r\n          <div className=\"world-value-warning\">\r\n            {`${t('option.measurement.scaleModal.incorrectSyntax')} ${worldWarningMessage}`}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nScaleCustom.propTypes = ScaleCustomProps;\r\n\r\nexport default ScaleCustom;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Swipeable } from 'react-swipeable';\r\nimport { Choice, FocusTrap } from '@pdftron/webviewer-react-toolkit';\r\nimport classNames from 'classnames';\r\nimport {\r\n  precisionOptions,\r\n  PrecisionType,\r\n  scalePresetPrecision,\r\n  PresetMeasurementSystems,\r\n  fractionalUnits,\r\n  ifFractionalPrecision,\r\n  initialScale\r\n} from 'constants/measurementScale';\r\nimport core from 'core';\r\nimport actions from 'actions';\r\nimport selectors from 'selectors';\r\nimport ScaleCustom from './ScaleCustom';\r\nimport DataElements from 'constants/dataElement';\r\nimport useDidUpdate from 'hooks/useDidUpdate';\r\nimport Button from 'components/Button';\r\nimport Dropdown from 'components/Dropdown';\r\nimport Tooltip from 'components/Tooltip';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\n\r\nimport './ScaleModal.scss';\r\nimport '../Choice/Choice.scss';\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nexport const scaleOptions = {\r\n  CUSTOM: 'custom',\r\n  PRESET: 'preset'\r\n};\r\n\r\nconst ScaleModal = ({ annotations, selectedTool }) => {\r\n  const dispatch = useDispatch();\r\n  const [t] = useTranslation();\r\n\r\n  const [\r\n    isDisabled,\r\n    isOpen,\r\n    isHidden,\r\n    currentToolbarGroup,\r\n    selectedScale,\r\n    activeToolName,\r\n    isAddingNewScale,\r\n    measurementScalePreset,\r\n    { tempScale, isFractionalUnit },\r\n    isMultipleScalesMode\r\n  ] = useSelector((state) => [\r\n    selectors.isElementDisabled(state, DataElements.SCALE_MODAL),\r\n    selectors.isElementOpen(state, DataElements.SCALE_MODAL),\r\n    selectors.isElementHidden(state, DataElements.SCALE_MODAL),\r\n    selectors.getCurrentToolbarGroup(state),\r\n    selectors.getSelectedScale(state),\r\n    selectors.getActiveToolName(state),\r\n    selectors.getIsAddingNewScale(state),\r\n    selectors.getMeasurementScalePreset(state),\r\n    selectors.getCalibrationInfo(state),\r\n    selectors.getIsMultipleScalesMode(state)\r\n  ]);\r\n\r\n  const [isFractionalPrecision, setIsFractionalPrecision] = useState(false);\r\n  const [precisionOption, setPrecisionOption] = useState(precisionOptions[PrecisionType.DECIMAL][0]);\r\n  const [scaleOption, setScaleOption] = useState(scaleOptions.CUSTOM);\r\n  const [presetScale, setPresetScale] = useState(measurementScalePreset[PresetMeasurementSystems.METRIC][0]);\r\n  const [customScale, setCustomScale] = useState(new Scale(''));\r\n  const [hasScaleChanged, setHasScaleChanged] = useState(false);\r\n\r\n  const totalScalesCount = Object.keys(core.getScales()).length;\r\n\r\n  useEffect(() => {\r\n    if (!precisionOptions[precisionType].includes(precisionOption)) {\r\n      setPrecisionOption(precisionOptions[precisionType][0]);\r\n    }\r\n    setPresetScale(measurementScalePreset[presetMeasurementSystem][0]);\r\n  }, [isFractionalPrecision]);\r\n\r\n  useEffect(() => {\r\n    setScaleOption(scaleOptions.CUSTOM);\r\n    setCustomScale(new Scale(selectedScale.getScaleRatioAsArray()));\r\n\r\n    const precision = core.getScalePrecision(selectedScale);\r\n    if (!precision) {\r\n      return;\r\n    }\r\n    const isFractional = ifFractionalPrecision(precision);\r\n    setIsFractionalPrecision(isFractional);\r\n\r\n    const precisionItems = precisionOptions[getPrecisionType(isFractional)];\r\n    const precisionItem = precisionItems.find((item) => item[1] === precision);\r\n    setPrecisionOption(precisionItem);\r\n\r\n    // Update/Create button should be disabled until the user makes a change\r\n    setTimeout(() => {\r\n      setHasScaleChanged(false);\r\n    });\r\n  }, [selectedScale]);\r\n\r\n  useDidUpdate(() => {\r\n    if (scaleOption === scaleOptions.CUSTOM) {\r\n      setCustomScale(presetScale[1]);\r\n    } else {\r\n      const presetPrecisionOption = scalePresetPrecision[presetScale[0]];\r\n      if (presetPrecisionOption && presetPrecisionOption !== precisionOption) {\r\n        setPrecisionOption(presetPrecisionOption);\r\n      }\r\n    }\r\n  }, [scaleOption]);\r\n\r\n  useDidUpdate(() => {\r\n    if (currentToolbarGroup === 'toolbarGroup-Measure') {\r\n      closeModal();\r\n    }\r\n  }, [currentToolbarGroup]);\r\n\r\n  useEffect(() => {\r\n    const newPrecisionOption = scalePresetPrecision[presetScale[0]];\r\n    if (newPrecisionOption && scaleOption === scaleOptions.PRESET) {\r\n      setPrecisionOption(newPrecisionOption);\r\n    }\r\n  }, [presetScale]);\r\n\r\n  useEffect(() => {\r\n    if (!isHidden && tempScale) {\r\n      // Triggered when calibration is applied\r\n      setCustomScale(new Scale(tempScale));\r\n      dispatch(actions.updateCalibrationInfo({ isCalibration: false }));\r\n      setIsFractionalPrecision(isFractionalUnit);\r\n    }\r\n  }, [isHidden]);\r\n\r\n  useEffect(() => {\r\n    setHasScaleChanged(true);\r\n  }, [precisionOption, customScale, presetScale, scaleOption]);\r\n\r\n  useEffect(() => {\r\n    // Reset component state when adding new scale\r\n    if (isOpen && isAddingNewScale && !tempScale) {\r\n      setScaleOption(scaleOptions.CUSTOM);\r\n      setCustomScale(initialScale);\r\n      setIsFractionalPrecision(false);\r\n      setPrecisionOption(precisionOptions[PrecisionType.DECIMAL][0]);\r\n    }\r\n  }, [isOpen, isAddingNewScale]);\r\n\r\n  const closeModal = () => {\r\n    dispatch(actions.closeElement(DataElements.SCALE_MODAL));\r\n  };\r\n\r\n  const createAndApplyScale = (scale, applyTo) => {\r\n    core.createAndApplyScale(scale, applyTo);\r\n    closeModal();\r\n  };\r\n\r\n  const replaceScales = (originalScales, scale) => {\r\n    core.replaceScales(originalScales, scale);\r\n    closeModal();\r\n  };\r\n\r\n  const toggleFractionalPrecision = () => {\r\n    setIsFractionalPrecision((isFractionalPrecision) => !isFractionalPrecision);\r\n  };\r\n\r\n  const openCalibrationTool = () => {\r\n    core.setToolMode('AnnotationCreateCalibrationMeasurement');\r\n    const unit = isCustomOption ? (customScale.worldScale?.unit || '') : presetScale[1].worldScale.unit;\r\n    dispatch(actions.updateCalibrationInfo({ isCalibration: true, previousToolName: activeToolName, defaultUnit: unit }));\r\n    dispatch(actions.setIsElementHidden(DataElements.SCALE_MODAL, true));\r\n  };\r\n\r\n  const getCurrentScale = () => {\r\n    const getPrecisionsValue = (value, unit) => {\r\n      let temp = value;\r\n      let precisionValue = precisionOption[1];\r\n\r\n      if (!isFractionalPrecision) {\r\n        if (unit !== 'ft-in') {\r\n          temp = temp.toFixed((1 / precisionValue).toString().length - 1);\r\n        }\r\n      } else {\r\n        if (unit === 'ft-in') {\r\n          precisionValue /= 12;\r\n        }\r\n        temp = Math.round(temp / precisionValue) * precisionValue;\r\n      }\r\n\r\n      return temp * 1;\r\n    };\r\n\r\n    if (isCustomOption) {\r\n      const scale = customScale.getScaleRatioAsArray();\r\n      scale[0][0] = getPrecisionsValue(scale[0][0], scale[0][1]);\r\n      scale[1][0] = getPrecisionsValue(scale[1][0], scale[1][1]);\r\n      return scale;\r\n    }\r\n    return presetScale[1].toString();\r\n  };\r\n\r\n  const onUpdate = () => {\r\n    replaceScales(\r\n      [selectedScale],\r\n      new Scale(getCurrentScale(), precisionOption[1])\r\n    );\r\n  };\r\n\r\n  const onCreate = () => {\r\n    createAndApplyScale(\r\n      new Scale(getCurrentScale(), precisionOption[1]),\r\n      [...annotations, selectedTool]\r\n    );\r\n  };\r\n\r\n  const modalClass = classNames('Modal', 'ScaleModal', {\r\n    open: !isHidden,\r\n    closed: isHidden\r\n  });\r\n  const isCustomOption = scaleOption === scaleOptions.CUSTOM;\r\n  const presetMeasurementSystem = isFractionalPrecision ? PresetMeasurementSystems.IMPERIAL : PresetMeasurementSystems.METRIC;\r\n  const getPrecisionType = (isFractional) => (isFractional ? PrecisionType.FRACTIONAL : PrecisionType.DECIMAL);\r\n  const precisionType = getPrecisionType(isFractionalPrecision);\r\n  const isCurrentScaleValid = !isCustomOption || customScale.isValid();\r\n  const isFractionalUnitsToggleDisabled = isCustomOption && !(fractionalUnits.includes(customScale.pageScale?.unit) && fractionalUnits.includes(customScale.worldScale?.unit));\r\n\r\n  return !isDisabled && (\r\n    <Swipeable onSwipedUp={closeModal} onSwipedDown={closeModal} preventDefaultTouchmoveEvent>\r\n      <FocusTrap locked={!isHidden}>\r\n        <div className={modalClass} data-element={DataElements.SCALE_MODAL}>\r\n          <div className=\"container\">\r\n            <div className=\"header-container\">\r\n              <div className=\"header\">\r\n                <p>{t('option.measurementOption.scale')}</p>\r\n                <Button\r\n                  className=\"scaleModalCloseButton\"\r\n                  title=\"action.close\"\r\n                  img=\"ic_close_black_24px\"\r\n                  onClick={closeModal}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"content-container\">\r\n              <div className=\"scaleSetting\">\r\n                <div className=\"custom-option-wrapper\">\r\n                  <div className=\"custom-scale-option\">\r\n                    <Choice\r\n                      data-element=\"customScaleOption\"\r\n                      radio\r\n                      name=\"setting\"\r\n                      onChange={() => setScaleOption(scaleOptions.CUSTOM)}\r\n                      checked={isCustomOption}\r\n                      label={`${t('option.measurement.scaleModal.custom')}:`}\r\n                      center\r\n                    />\r\n                  </div>\r\n                  {isCustomOption && (\r\n                    <button data-element=\"calibrate\" className=\"calibrate-btn\" onMouseDown={openCalibrationTool}>\r\n                      {t('option.measurement.scaleModal.calibrate')}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                {isCustomOption ? (\r\n                  <ScaleCustom\r\n                    scale={customScale.getScaleRatioAsArray()}\r\n                    onScaleChange={setCustomScale}\r\n                    precision={precisionOption[1]}\r\n                  />\r\n                ) : (\r\n                  <div className=\"block\" />\r\n                )}\r\n                <Choice\r\n                  data-element=\"presetScaleOption\"\r\n                  radio\r\n                  onChange={() => setScaleOption(scaleOptions.PRESET)}\r\n                  name=\"setting\"\r\n                  checked={!isCustomOption}\r\n                  label={`${t('option.measurement.scaleModal.preset')}:`}\r\n                  center\r\n                />\r\n                {!isCustomOption && (\r\n                  <div className=\"scaleModal__preset-container\">\r\n                    <div className=\"selector\">\r\n                      <Dropdown\r\n                        dataElement=\"presetScales\"\r\n                        items={measurementScalePreset[presetMeasurementSystem].map((item) => item[0])}\r\n                        currentSelectionKey={presetScale[0]}\r\n                        onClickItem={(_item, i) => setPresetScale(measurementScalePreset[presetMeasurementSystem][i])}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"precision-container\">\r\n                <div className=\"precision-selector\">\r\n                  <div className=\"precision-title\">{t('option.shared.precision')}:</div>\r\n                  <div className=\"selector\">\r\n                    <Dropdown\r\n                      dataElement=\"scalePrecisions\"\r\n                      items={precisionOptions[precisionType].map((item) => item[0])}\r\n                      currentSelectionKey={precisionOption[0]}\r\n                      onClickItem={(_item, i) => setPrecisionOption(precisionOptions[precisionType][i])}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Tooltip content={t('option.measurement.scaleModal.fractionUnitsTooltip')}>\r\n                  <div>\r\n                    <Choice\r\n                      isSwitch\r\n                      leftLabel\r\n                      id=\"scale-modal-fractional-units\"\r\n                      label={t('option.measurement.scaleModal.fractionalUnits')}\r\n                      checked={isFractionalPrecision}\r\n                      onChange={toggleFractionalPrecision}\r\n                      disabled={isFractionalUnitsToggleDisabled}\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer\">\r\n              <DataElementWrapper\r\n                type={'button'}\r\n                onClick={onUpdate}\r\n                className=\"scale-update\"\r\n                dataElement=\"updateScale\"\r\n                disabled={isAddingNewScale || !isCurrentScaleValid || !hasScaleChanged}\r\n              >\r\n                {t('action.update')}\r\n              </DataElementWrapper>\r\n              <button\r\n                onClick={onCreate}\r\n                className=\"scale-create\"\r\n                data-element=\"createScale\"\r\n                disabled={!isCurrentScaleValid || (!isMultipleScalesMode && totalScalesCount) || (!isAddingNewScale && !hasScaleChanged)}\r\n              >\r\n                {t('action.create')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </FocusTrap>\r\n    </Swipeable>\r\n  );\r\n};\r\n\r\nexport default ScaleModal;\r\n","import ScaleModal from './ScaleModal';\r\n\r\nexport default ScaleModal;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".open.ScaleModal{visibility:visible}.closed.ScaleModal{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.ScaleModal{position:fixed;left:0;bottom:0;z-index:100;width:100%;height:100%;display:flex;justify-content:center;align-items:center;background:var(--modal-negative-space)}.ScaleModal .modal-container .wrapper .modal-content{padding:10px}.ScaleModal .footer{display:flex;flex-direction:row;justify-content:flex-end;width:100%;margin-top:13px}.ScaleModal .footer.modal-footer{padding:16px;margin:0;border-top:1px solid var(--divider)}.ScaleModal .footer .modal-button{display:flex;justify-content:center;align-items:center;padding:6px 18px;margin:8px 0 0;width:auto;width:-moz-fit-content;width:fit-content;border-radius:4px;height:30px;cursor:pointer}.ScaleModal .footer .modal-button.cancel{color:var(--secondary-button-text);border:1px solid var(--secondary-button-text)}.ScaleModal .footer .modal-button.cancel:hover{background-color:var(--document-background-color);color:var(--secondary-button-hover);border:1px solid var(--secondary-button-hover)}.ScaleModal .footer .modal-button.confirm{margin-left:4px;color:var(--primary-button-text);font-weight:600;background:var(--primary-button)}.ScaleModal .footer .modal-button.confirm:hover{background:var(--primary-button-hover)}.ScaleModal .footer .modal-button.confirm.disabled{background:var(--primary-button)!important;opacity:.5}.ScaleModal .footer .modal-button.secondary-btn-custom{border-radius:4px;border:1px solid var(--primary-button);color:var(--primary-button);padding:2px 20px 4px;cursor:pointer;background-color:#fff}.ScaleModal .footer .modal-button.secondary-btn-custom:hover{color:var(--secondary-button-hover)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .footer .modal-button{padding:23px 8px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .footer .modal-button{padding:23px 8px}}.ScaleModal .swipe-indicator{background:var(--divider);border-radius:2px;height:4px;width:38px;position:absolute;top:12px;margin-left:auto;margin-right:auto;left:0;right:0}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .swipe-indicator{display:none}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .swipe-indicator{display:none}}.ScaleModal .container{box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background);overflow-y:auto;max-height:100%}@media(max-height:500px){.App:not(.is-web-component) .ScaleModal .container,.ScaleModal .App:not(.is-web-component) .container{overflow:auto;max-height:100%}}@container (max-height: 500px){.App.is-web-component .ScaleModal .container,.ScaleModal .App.is-web-component .container{overflow:auto;max-height:100%}}.ScaleModal .container{display:flex;flex-direction:column;width:480px;padding:0;border-radius:4px;box-shadow:0 0 3px var(--document-box-shadow);overflow:visible}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container{width:100%;position:fixed;border-radius:0;left:0;bottom:0}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container{width:100%;position:fixed;border-radius:0;left:0;bottom:0}}.ScaleModal .container .header-container{box-shadow:inset 0 -1px 0 var(--modal-stroke-and-border);padding:20px 16px 16px}.ScaleModal .container .header{margin:0;display:flex;align-items:center;width:100%;height:24px}.ScaleModal .container .header p{font-size:16px;font-weight:700;width:89.286%;margin:0 16px 0 0}.ScaleModal .container .header .scaleModalCloseButton{position:static;height:32px;width:32px}.ScaleModal .container .header .scaleModalCloseButton:hover{background:var(--view-header-button-hover);border-radius:4px}.ScaleModal .container .header .scaleModalCloseButton.selected{background:var(--view-header-button-active);cursor:default}.ScaleModal .container .content-container{padding:24px 16px 16px}.ScaleModal .container .content-container .ui__choice__label{font-weight:700;font-size:13px;line-height:16px;display:flex;align-items:center}.ScaleModal .container .content-container .scaleSetting .custom-option-wrapper{display:flex;align-items:center;justify-content:space-between}.ScaleModal .container .content-container .scaleSetting .custom-option-wrapper .calibrate-btn{font-weight:400;line-height:16px;display:flex;align-items:center;text-align:center;color:var(--blue-5);background-color:transparent;border:none;cursor:pointer}.ScaleModal .container .content-container .scaleSetting .selector{margin-top:16px;width:100%;height:32px;margin-bottom:18px}.ScaleModal .container .content-container .scaleSetting .selector .Dropdown__wrapper{width:100%;height:100%}.ScaleModal .container .content-container .scaleSetting .selector .Dropdown__wrapper .Dropdown{height:100%;width:100%!important;text-align:left}.ScaleModal .container .content-container .scaleSetting .selector .Dropdown__wrapper .Dropdown .arrow{flex:0 1 auto}.ScaleModal .container .content-container .scaleSetting .selector .Dropdown__wrapper .Dropdown__items{width:100%}.ScaleModal .container .content-container .scaleSetting .block{height:36px}.ScaleModal .container .content-container .scaleSetting .custom-scale-container{margin-top:16px;margin-bottom:16px}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .scale-ratio-display{display:flex;flex-direction:row;align-items:center;justify-content:space-between}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper{display:flex;flex-direction:row}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .scale-input{border-radius:4px;border:1px solid var(--border);width:94px;height:32px;margin-right:8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .scale-input{width:79px;height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .scale-input{width:79px;height:32px}}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .scale-input.invalid-value{border-color:red}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input{width:100px;height:32px}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input .Dropdown__wrapper{width:100%;height:100%}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input .Dropdown__wrapper .Dropdown{height:100%;text-align:left}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input .Dropdown__wrapper .Dropdown__items{width:100%}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input{width:4rem;height:2rem}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container .content-container .scaleSetting .custom-scale-container .input-wrapper .unit-input{width:4rem;height:2rem}}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .warning-messages{height:16px;font-weight:400;color:red;margin-top:4px;position:relative;display:flex}.ScaleModal .container .content-container .scaleSetting .custom-scale-container .warning-messages .world-value-warning{position:absolute;left:246px}.ScaleModal .container .content-container .precision-container{display:flex;font-size:13px;font-weight:400;margin-top:16px;align-items:center;justify-content:space-between}.ScaleModal .container .content-container .precision-container .precision-selector{display:flex;justify-content:space-between;align-items:center;width:288px;height:32px}.ScaleModal .container .content-container .precision-container .precision-selector .precision-title{height:1rem;font-weight:400;font-size:13px;line-height:16px}.ScaleModal .container .content-container .precision-container .precision-selector .selector{width:223px;height:32px;z-index:0}.ScaleModal .container .content-container .precision-container .precision-selector .selector .Dropdown__wrapper{width:100%;height:100%}.ScaleModal .container .content-container .precision-container .precision-selector .selector .Dropdown__wrapper .Dropdown{height:100%;width:100%!important;text-align:left}.ScaleModal .container .content-container .precision-container .precision-selector .selector .Dropdown__wrapper .Dropdown .arrow{flex:0 1 auto}.ScaleModal .container .content-container .precision-container .precision-selector .selector .Dropdown__wrapper .Dropdown__items{width:100%}.ScaleModal .container .content-container .precision-container .ui__choice__label{font-weight:400}.ScaleModal .container .content-container .precision-container .ui__choice--disabled .ui__choice__label{color:var(--gray-5)}.ScaleModal .container .footer{display:flex;padding:16px;align-items:center;justify-content:flex-end;width:100%;box-shadow:inset 0 1px 0 var(--modal-stroke-and-border);margin:0}.ScaleModal .container .footer .scale-update{height:32px;min-width:72px;display:flex;align-items:center;justify-content:center;color:var(--blue-5);background-color:transparent;border:1px solid var(--blue-5);box-sizing:border-box;border-radius:4px;cursor:pointer;margin-right:8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container .footer .scale-update{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container .footer .scale-update{font-size:13px}}.ScaleModal .container .footer .scale-update:enabled:hover{background:var(--outline-hover)}.ScaleModal .container .footer .scale-update:disabled{opacity:.5;cursor:not-allowed}.ScaleModal .container .footer .scale-create{border:none;background-color:transparent;background:var(--primary-button);border-radius:4px;padding:0 8px;height:32px;min-width:72px;display:flex;align-items:center;justify-content:center;position:relative;color:var(--primary-button-text);cursor:pointer}:host(:not([data-tabbing=true])) .ScaleModal .container .footer .scale-create,html:not([data-tabbing=true]) .ScaleModal .container .footer .scale-create{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleModal .container .footer .scale-create{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleModal .container .footer .scale-create{font-size:13px}}.ScaleModal .container .footer .scale-create:enabled:hover{background:var(--primary-button-hover)}.ScaleModal .container .footer .scale-create:disabled{opacity:.5;cursor:not-allowed}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ScaleModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["Scale","window","Core","ScaleCustomProps","scale","PropTypes","onScaleChange","precision","ScaleCustom","_ref","measurementUnits","_slicedToArray","useSelector","state","selectors","getMeasurementUnits","shallowEqual","_useState2","useState","pageValueDisplay","setPageValueDisplay","_useState4","worldValueDisplay","setWorldValueDisplay","_useState6","isFractionalPrecision","setIsFractionalPrecision","_useState8","pageWarningMessage","setPageWarningMessage","_useState10","worldWarningMessage","setWorldWarningMessage","_useState12","scaleValueBlurFlag","setScaleValueBlurFlag","pageValueInput","useRef","worldValueInput","t","useTranslation","filterFractionalUnits","units","filter","unit","fractionalUnits","includes","unitFromOptions","from","unitToOptions","to","useEffect","onScaleUnitChange","formatDecimal","value","toFixed","toString","length","current","document","activeElement","getFormattedValue","ifFractionalPrecision","hintValues","isWorldValueValid","onInputValueChange","isPageValueValid","pageScale","newScale","worldScale","_onScaleChange","pageValueClass","classNames","worldValueClass","getPrecision","isPageValue","getNewScale","updateScaleValue","scaleValue","inputValue","trim","scaleUnit","inFractionalRegex","test","result","parseInFractional","ftInFractionalRegex","parseFtInFractional","floatRegex","parseFloat","ftInDecimalRegex","parseFtInDecimal","undefined","newUnit","isPageUnit","newPageScale","newWorldScale","convertUnit","getInputPlaceholder","onInputBlur","flag","React","className","type","min","onChange","e","target","placeholder","ref","onBlur","Tooltip","content","Dropdown","dataElement","items","onClickItem","currentSelectionKey","concat","propTypes","scaleOptions","_customScale$pageScal","_customScale$worldSca2","annotations","selectedTool","dispatch","useDispatch","_useSelector2","isElementDisabled","DataElements","SCALE_MODAL","isElementOpen","isElementHidden","getCurrentToolbarGroup","getSelectedScale","getActiveToolName","getIsAddingNewScale","getMeasurementScalePreset","getCalibrationInfo","getIsMultipleScalesMode","isDisabled","isOpen","isHidden","currentToolbarGroup","selectedScale","activeToolName","isAddingNewScale","measurementScalePreset","_useSelector2$","tempScale","isFractionalUnit","isMultipleScalesMode","precisionOptions","PrecisionType","DECIMAL","precisionOption","setPrecisionOption","scaleOption","setScaleOption","PresetMeasurementSystems","METRIC","presetScale","setPresetScale","customScale","setCustomScale","hasScaleChanged","setHasScaleChanged","totalScalesCount","Object","keys","core","getScales","precisionType","presetMeasurementSystem","getScaleRatioAsArray","getScalePrecision","isFractional","precisionItem","getPrecisionType","find","item","setTimeout","useDidUpdate","presetPrecisionOption","scalePresetPrecision","closeModal","newPrecisionOption","actions","updateCalibrationInfo","isCalibration","initialScale","closeElement","getCurrentScale","getPrecisionsValue","temp","precisionValue","Math","round","isCustomOption","modalClass","open","closed","IMPERIAL","FRACTIONAL","isCurrentScaleValid","isValid","isFractionalUnitsToggleDisabled","Swipeable","onSwipedUp","onSwipedDown","preventDefaultTouchmoveEvent","FocusTrap","locked","Button","title","img","onClick","Choice","radio","name","checked","label","center","onMouseDown","_customScale$worldSca","setToolMode","previousToolName","defaultUnit","setIsElementHidden","map","_item","i","isSwitch","leftLabel","id","disabled","DataElementWrapper","originalScales","replaceScales","applyTo","createAndApplyScale","exports","___CSS_LOADER_API_IMPORT___","push","module","locals","api","__esModule","default","options","styleTag","isApryseWebViewerWebComponent","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode"],"sourceRoot":""}
{"version":3,"file":"chunks/5706.chunk.js","mappings":"21CAiDA,QAzC6B,SAAHA,GAIpB,IAHJC,EAAUD,EAAVC,WACAC,EAAcF,EAAdE,eACAC,EAAYH,EAAZG,aAE4CC,EAAAC,GAAtBC,EAAAA,EAAAA,UAASH,GAAa,GAArCI,EAAGH,EAAA,GAAEI,EAAMJ,EAAA,GACXK,EAAqBJ,GAAhBK,EAAAA,EAAAA,KAAgB,GAApB,GAEFC,EAAa,WACjBT,EAAeK,GACfN,GACF,EAEA,OACEW,EAAAA,cAACC,EAAAA,EAAkB,CACjBC,UAAU,kBACV,eAAcC,EAAAA,EAAaC,wBAC3BC,YAAahB,GAEbW,EAAAA,cAAA,OAAKE,UAAU,YAAYG,YAAa,SAACC,GAAC,OAAKA,EAAEC,iBAAiB,GAChEP,EAAAA,cAAA,QAAMQ,SAAUT,GACdC,EAAAA,cAAA,WAAMH,EAAE,kBACRG,EAAAA,cAAA,OAAKE,UAAU,aACbF,EAAAA,cAAA,SACEE,UAAU,WACVO,MAAOd,EACPe,WAAS,EACTC,SAAU,SAACL,GAAC,OAAKV,EAAOU,EAAEM,OAAOH,MAAM,IAEzCT,EAAAA,cAACa,EAAAA,EAAM,CACLC,YAAY,mBACZC,MAAOlB,EAAE,eACTmB,QAASjB,OAOvB,E,+ICPA,MCtCA,EDKsC,WACpC,I,IAMEkB,G,GAHEC,EAAAA,EAAAA,KAAY,SAACC,GAAK,MAAK,CACzBC,EAAAA,EAAUC,cAAcF,EAAOhB,EAAAA,EAAaC,yBAC5CgB,EAAAA,EAAUE,oBAAoBH,GAC/B,I,EAAC,E,k5BALAI,EAAMN,EAAA,GACNO,EAAgBP,EAAA,GAMZQ,GAAWC,EAAAA,EAAAA,MAEbC,EAAkB,GAClBH,IACFG,EAAkBH,EAAiBI,WAGrC,IAAMvC,GAAawC,EAAAA,EAAAA,cAAY,WAC7BJ,EAASK,EAAAA,EAAQC,aAAa5B,EAAAA,EAAaC,0BACvCoB,GACFA,EAAiBQ,MAErB,GAAG,CAACR,IAEES,GAAUJ,EAAAA,EAAAA,cAAY,SAAClC,GACvB6B,IACFA,EAAiBU,gBAAgBvC,GACjC6B,EAAiBQ,OAErB,GAAG,CAACR,IAEJ,OAAOD,EAAUvB,EAAAA,cAACmC,EAAoB,CAAC9C,WAAYA,EAAYC,eAAgB2C,EAAS1C,aAAcoC,IAAuB,IAC/H,C","sources":["webpack://webviewer-ui/./src/components/ContentEditLinkModal/ContentEditLinkModal.js","webpack://webviewer-ui/./src/components/ContentEditLinkModal/ContentEditLinkModalContainer.js","webpack://webviewer-ui/./src/components/ContentEditLinkModal/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Button from 'components/Button';\r\nimport DataElements from 'constants/dataElement';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\n\r\nimport '../LinkModal/LinkModal.scss';\r\n\r\nconst ContentEditLinkModal = ({\r\n  closeModal,\r\n  addLinkHandler,\r\n  existingLink,\r\n}) => {\r\n  const [url, setURL] = useState(existingLink);\r\n  const [t] = useTranslation();\r\n\r\n  const addURLLink = () => {\r\n    addLinkHandler(url);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <DataElementWrapper\r\n      className=\"Modal LinkModal\"\r\n      data-element={DataElements.CONTENT_EDIT_LINK_MODAL}\r\n      onMouseDown={closeModal}\r\n    >\r\n      <div className=\"container\" onMouseDown={(e) => e.stopPropagation()}>\r\n        <form onSubmit={addURLLink}>\r\n          <div>{t('link.enterurl')}</div>\r\n          <div className=\"linkInput\">\r\n            <input\r\n              className=\"urlInput\"\r\n              value={url}\r\n              autoFocus\r\n              onChange={(e) => setURL(e.target.value)}\r\n            />\r\n            <Button\r\n              dataElement=\"linkSubmitButton\"\r\n              label={t('action.link')}\r\n              onClick={addURLLink}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </DataElementWrapper>\r\n  );\r\n};\r\n\r\nexport default ContentEditLinkModal;","import React, { useCallback } from 'react';\r\nimport ContentEditLinkModal from './ContentEditLinkModal';\r\nimport selectors from 'selectors';\r\nimport DataElements from 'constants/dataElement';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from 'src/redux/actions';\r\n\r\nconst ContentEditLinkModalContainer = () => {\r\n  const [\r\n    isOpen,\r\n    contentBoxEditor,\r\n  ] = useSelector((state) => [\r\n    selectors.isElementOpen(state, DataElements.CONTENT_EDIT_LINK_MODAL),\r\n    selectors.getContentBoxEditor(state),\r\n  ]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  let existingLinkUrl = '';\r\n  if (contentBoxEditor) {\r\n    existingLinkUrl = contentBoxEditor.hyperlink;\r\n  }\r\n\r\n  const closeModal = useCallback(() => {\r\n    dispatch(actions.closeElement(DataElements.CONTENT_EDIT_LINK_MODAL));\r\n    if (contentBoxEditor) {\r\n      contentBoxEditor.blur();\r\n    }\r\n  }, [contentBoxEditor]);\r\n\r\n  const addLink = useCallback((url) => {\r\n    if (contentBoxEditor) {\r\n      contentBoxEditor.insertHyperlink(url);\r\n      contentBoxEditor.blur();\r\n    }\r\n  }, [contentBoxEditor]);\r\n\r\n  return isOpen ? (<ContentEditLinkModal closeModal={closeModal} addLinkHandler={addLink} existingLink={existingLinkUrl} />) : null;\r\n};\r\n\r\nexport default ContentEditLinkModalContainer;","import ContentEditLinkModal from './ContentEditLinkModalContainer';\r\n\r\nexport default ContentEditLinkModal;"],"names":["_ref","closeModal","addLinkHandler","existingLink","_useState2","_slicedToArray","useState","url","setURL","t","useTranslation","addURLLink","React","DataElementWrapper","className","DataElements","CONTENT_EDIT_LINK_MODAL","onMouseDown","e","stopPropagation","onSubmit","value","autoFocus","onChange","target","Button","dataElement","label","onClick","_useSelector2","useSelector","state","selectors","isElementOpen","getContentBoxEditor","isOpen","contentBoxEditor","dispatch","useDispatch","existingLinkUrl","hyperlink","useCallback","actions","closeElement","blur","addLink","insertHyperlink","ContentEditLinkModal"],"sourceRoot":""}
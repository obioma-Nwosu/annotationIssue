{"version":3,"file":"chunks/7440.chunk.js","mappings":"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","sources":["webpack://webviewer-ui/./src/components/NoteTextPreview/NoteTextPreview.js","webpack://webviewer-ui/./src/components/NoteTextPreview/NoteTextPreview.scss","webpack://webviewer-ui/./src/components/NoteTextPreview/NoteTextPreview.scss?6fd1"],"sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\n\r\nimport './NoteTextPreview.scss';\r\n\r\nfunction NoteTextPreview(props) {\r\n  /* This replace is to remove the break line that the React Quill component add into the text */\r\n  const text = props.children.replace(/\\n$/, '');\r\n  const {\r\n    panelWidth,\r\n    linesToBreak,\r\n    renderRichText,\r\n    richTextStyle,\r\n    resize,\r\n    style,\r\n    /* If text being previewed is a comment it gets a darker font color */\r\n    comment = false,\r\n    beforeContent = () => {},\r\n  } = props;\r\n  const [expanded, setExpand] = useState(false);\r\n  const [previewElementWidth, setPreviewWidth] = useState(null);\r\n  const [charsPerLine, setCharsperLine] = useState(null);\r\n  const [showPrompt, setShowPrompt] = useState(false);\r\n  const ref = React.useRef(null);// Must import this way in order to mock it properly\r\n  const { t } = useTranslation();\r\n\r\n  const onClickHandler = (event) => {\r\n    event.stopPropagation();\r\n    setExpand(!expanded);\r\n    resize && resize();\r\n  };\r\n\r\n  const textToDisplay = expanded ? text : text.substring(0, charsPerLine * linesToBreak);\r\n  const prompt = expanded ? t('action.showLess') : t('action.showMore');\r\n  const noteTextPreviewClass = classNames('note-text-preview', { 'preview-comment': comment });\r\n\r\n  useEffect(() => {\r\n    const textNodeWidth = ref.current.clientWidth;\r\n    setPreviewWidth(textNodeWidth);\r\n  }, [panelWidth]);\r\n\r\n  // useLayoutEffect to avoid a flicker before we get the final text prop\r\n  useLayoutEffect(() => {\r\n    function getTextWidth(text) {\r\n      const canvas = document.createElement('canvas');\r\n      const context = canvas.getContext('2d');\r\n      context.font = '13px sans-serif';\r\n\r\n      return context.measureText(text).width;\r\n    }\r\n\r\n    const textWidth = getTextWidth(text);\r\n    const averageCharWidth = textWidth / text.length;\r\n    const charsPerLine = Math.floor(previewElementWidth / averageCharWidth);\r\n    setCharsperLine(charsPerLine);\r\n\r\n    const totalLines = textWidth / previewElementWidth;\r\n    setShowPrompt(totalLines > linesToBreak);\r\n  }, [text, previewElementWidth]);\r\n\r\n  return (\r\n    <div className={noteTextPreviewClass} ref={ref} style={style}>\r\n      {beforeContent()}\r\n      {renderRichText && richTextStyle ? renderRichText(textToDisplay, richTextStyle, 0) : textToDisplay} {showPrompt && <a className=\"note-text-preview-prompt\" onClick={onClickHandler}>{prompt}</a>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteTextPreview;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".note-text-preview{font-size:13px;color:var(--gray-7);padding-right:12px;-webkit-user-select:text!important;-moz-user-select:text!important;user-select:text!important;cursor:text;height:-moz-fit-content;height:fit-content;width:calc(100% - 12px);overflow:hidden}.preview-comment{color:var(--text-color)}.note-text-preview-prompt{cursor:pointer;color:var(--primary-button)}.note-text-preview-prompt:hover{color:var(--primary-button-hover)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./NoteTextPreview.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["props","text","children","replace","panelWidth","linesToBreak","renderRichText","richTextStyle","resize","style","_props$comment","comment","_props$beforeContent","beforeContent","_useState2","_slicedToArray","useState","expanded","setExpand","_useState4","previewElementWidth","setPreviewWidth","_useState6","charsPerLine","setCharsperLine","_useState8","showPrompt","setShowPrompt","ref","React","t","useTranslation","textToDisplay","substring","prompt","noteTextPreviewClass","classNames","useEffect","textNodeWidth","current","clientWidth","useLayoutEffect","textWidth","context","document","createElement","getContext","font","measureText","width","getTextWidth","averageCharWidth","length","Math","floor","className","onClick","event","stopPropagation","exports","___CSS_LOADER_API_IMPORT___","push","module","id","api","content","__esModule","default","options","styleTag","window","isApryseWebViewerWebComponent","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","shadowRoot","clonedStyleTags","i","webComponent","onload","styleNode","innerHTML","cloneNode","locals"],"sourceRoot":""}
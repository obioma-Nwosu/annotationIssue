{"version":3,"file":"chunks/473.chunk.js","mappings":"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","sources":["webpack://webviewer-ui/./src/components/Bookmark/Bookmark.js","webpack://webviewer-ui/./src/components/Bookmark/index.js","webpack://webviewer-ui/./src/components/BookmarksPanel/BookmarksPanel.js","webpack://webviewer-ui/./src/components/BookmarksPanel/index.js","webpack://webviewer-ui/./src/components/BookmarksPanel/BookmarksPanel.scss","webpack://webviewer-ui/./src/components/BookmarksPanel/BookmarksPanel.scss?1e34"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport core from 'core';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '../Button';\r\nimport DataElementWrapper from '../DataElementWrapper';\r\nimport MoreOptionsContextMenuPopup from '../MoreOptionsContextMenuPopup';\r\nimport Choice from 'components/Choice';\r\nimport '../../constants/bookmarksOutlinesShared.scss';\r\n\r\nconst propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  defaultLabel: PropTypes.string,\r\n  pageIndex: PropTypes.number.isRequired,\r\n  isAdding: PropTypes.bool,\r\n  isMultiSelectionMode: PropTypes.bool,\r\n  setSelected: PropTypes.func,\r\n  onSave: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func,\r\n  onCancel: PropTypes.func,\r\n  panelSelector: PropTypes.string,\r\n};\r\n\r\nconst Bookmark = ({\r\n  text,\r\n  label,\r\n  defaultLabel,\r\n  pageIndex,\r\n  isAdding,\r\n  isMultiSelectionMode,\r\n  setSelected,\r\n  onSave,\r\n  onRemove,\r\n  onCancel,\r\n  panelSelector,\r\n}) => {\r\n  const [t] = useTranslation();\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isDefault, setIsDefault] = useState(false);\r\n  const [bookmarkText, setBookmarkText] = useState(text);\r\n  const [isContextMenuOpen, setContextMenuOpen] = useState(false);\r\n  const [clearSingleClick, setClearSingleClick] = useState(undefined);\r\n  const inputRef = useRef();\r\n\r\n  const isRenameButtonDisabled = () => {\r\n    return !bookmarkText || text === bookmarkText;\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.stopPropagation();\r\n      if (isAdding || (isEditing && !isRenameButtonDisabled())) {\r\n        onSaveBookmark();\r\n      }\r\n    }\r\n    if (e.key === 'Escape') {\r\n      onCancelBookmark();\r\n    }\r\n  };\r\n\r\n  const onSaveBookmark = () => {\r\n    setIsEditing(false);\r\n    onSave(bookmarkText.trim() === '' ? t('message.untitled') : bookmarkText);\r\n  };\r\n\r\n  const onCancelBookmark = () => {\r\n    setIsEditing(false);\r\n    // on cancel reset local bookmark text\r\n    isEditing && setBookmarkText(text);\r\n    isAdding && onCancel();\r\n  };\r\n\r\n  const setCurrentPage = (pageIndex) => {\r\n    core.setCurrentPage(pageIndex + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (bookmarkText !== text) {\r\n      setBookmarkText(text);\r\n    }\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    if (isAdding || isEditing) {\r\n      inputRef.current.focus();\r\n      inputRef.current.select();\r\n    }\r\n\r\n    if (!isAdding && !isEditing) {\r\n      setIsDefault(true);\r\n    } else {\r\n      setIsDefault(false);\r\n    }\r\n  }, [isEditing]);\r\n\r\n  return (\r\n    <DataElementWrapper\r\n      className={classNames({\r\n        'bookmark-outline-single-container': true,\r\n        'editing': isAdding || isEditing,\r\n        'default': isDefault,\r\n        'hover': isContextMenuOpen,\r\n      })}\r\n      tabIndex={0}\r\n      onKeyDown={(e) => {\r\n        if (e.key === 'Enter') {\r\n          setCurrentPage(pageIndex);\r\n        }\r\n      }}\r\n      onClick={(e) => {\r\n        if (isDefault && e.detail === 1) {\r\n          setClearSingleClick(setTimeout(() => {\r\n            setCurrentPage(pageIndex);\r\n          }, 300));\r\n        }\r\n      }}\r\n      onDoubleClick={() => {\r\n        if (isDefault) {\r\n          clearTimeout(clearSingleClick);\r\n        }\r\n      }}\r\n    >\r\n      {isMultiSelectionMode &&\r\n        <Choice\r\n          type=\"checkbox\"\r\n          className=\"bookmark-outline-checkbox\"\r\n          id={`bookmark-checkbox-${pageIndex + 1}`}\r\n          onClick={(e) => e.stopPropagation()}\r\n          onChange={(e) => setSelected(pageIndex, e.target.checked)}\r\n        />\r\n      }\r\n\r\n      <div className=\"bookmark-outline-label-row\">\r\n        <div className=\"bookmark-outline-label\">{(isAdding || isEditing) ? label : defaultLabel}</div>\r\n\r\n        {isDefault &&\r\n          <>\r\n            {isMultiSelectionMode &&\r\n              <Button\r\n                className=\"bookmark-outline-more-button\"\r\n                dataElement={`bookmark-more-button-${pageIndex}`}\r\n                img=\"icon-pencil-line\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  setIsEditing(true);\r\n                }}\r\n                tabIndex={-1}\r\n              />\r\n            }\r\n            {!isMultiSelectionMode &&\r\n              <Button\r\n                className=\"bookmark-outline-more-button\"\r\n                dataElement={`bookmark-more-button-${panelSelector}-${pageIndex}`}\r\n                img=\"icon-tool-more\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  setContextMenuOpen(true);\r\n                }}\r\n                tabIndex={-1}\r\n              />\r\n            }\r\n            {isContextMenuOpen && (\r\n              <MoreOptionsContextMenuPopup\r\n                type={'bookmark'}\r\n                anchorButton={`bookmark-more-button-${panelSelector}-${pageIndex}`}\r\n                shouldDisplayDeleteButton={true}\r\n                onClosePopup={() => setContextMenuOpen(false)}\r\n                onRenameClick={() => {\r\n                  setContextMenuOpen(false);\r\n                  setIsEditing(true);\r\n                }}\r\n                onDeleteClick={() => {\r\n                  setContextMenuOpen(false);\r\n                  onRemove(pageIndex);\r\n                }}\r\n              />\r\n            )}\r\n\r\n            <div\r\n              className=\"bookmark-outline-text bookmark-text-input\"\r\n              onDoubleClick={() => setIsEditing(true)}\r\n            >\r\n              {text}\r\n            </div>\r\n          </>\r\n        }\r\n\r\n        {(isAdding || isEditing) &&\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              name=\"bookmark\"\r\n              ref={inputRef}\r\n              className=\"bookmark-outline-input bookmark-text-input\"\r\n              placeholder={t('component.bookmarkTitle')}\r\n              aria-label={t('action.name')}\r\n              value={bookmarkText}\r\n              onKeyDown={handleKeyDown}\r\n              onChange={(e) => setBookmarkText(e.target.value)}\r\n            />\r\n\r\n            <div className=\"bookmark-outline-editing-controls\">\r\n              <Button\r\n                className=\"bookmark-outline-cancel-button\"\r\n                label={t('action.cancel')}\r\n                onClick={onCancelBookmark}\r\n              />\r\n              {isAdding &&\r\n                <Button\r\n                  className=\"bookmark-outline-save-button\"\r\n                  label={t('action.add')}\r\n                  isSubmitType\r\n                  onClick={onSaveBookmark}\r\n                />\r\n              }\r\n              {isEditing &&\r\n                <Button\r\n                  className=\"bookmark-outline-save-button\"\r\n                  label={t('action.save')}\r\n                  isSubmitType\r\n                  disabled={isRenameButtonDisabled()}\r\n                  onClick={onSaveBookmark}\r\n                />\r\n              }\r\n            </div>\r\n          </>\r\n        }\r\n      </div>\r\n    </DataElementWrapper>\r\n  );\r\n};\r\n\r\nBookmark.propTypes = propTypes;\r\n\r\nexport default Bookmark;\r\n","import Bookmark from './Bookmark';\r\n\r\nexport default Bookmark;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Bookmark from 'components/Bookmark';\r\nimport Button from 'components/Button';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\nimport DataElements from 'constants/dataElement';\r\nimport Choice from 'components/Choice';\r\n\r\nimport core from 'core';\r\nimport actions from 'actions';\r\nimport selectors from 'selectors';\r\n\r\nimport '../../constants/bookmarksOutlinesShared.scss';\r\nimport './BookmarksPanel.scss';\r\nimport classNames from 'classnames';\r\n\r\nconst BookmarksPanel = ({ panelSelector }) => {\r\n  const [\r\n    isDisabled,\r\n    bookmarks,\r\n    currentPageIndex,\r\n    pageLabels,\r\n    isBookmarkIconShortcutVisible,\r\n    featureFlags,\r\n  ] = useSelector(\r\n    (state) => [\r\n      selectors.isElementDisabled(state, DataElements.BOOKMARK_PANEL),\r\n      selectors.getBookmarks(state),\r\n      selectors.getCurrentPage(state) - 1,\r\n      selectors.getPageLabels(state),\r\n      selectors.isBookmarkIconShortcutVisible(state),\r\n      selectors.getFeatureFlags(state),\r\n    ],\r\n    shallowEqual,\r\n  );\r\n\r\n  const [isAddingNewBookmark, setAddingNewBookmark] = useState(false);\r\n  const [isMultiSelectionMode, setMultiSelectionMode] = useState(false);\r\n  const [selectingBookmarks, setSelectingBookmarks] = useState([]);\r\n  const customizableUI = featureFlags.customizableUI;\r\n\r\n  const [t] = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isBookmarkIconShortcutVisible && !isDisabled) {\r\n      core.setBookmarkIconShortcutVisibility(true);\r\n    } else {\r\n      core.setBookmarkIconShortcutVisibility(false);\r\n    }\r\n  }, [isDisabled, isBookmarkIconShortcutVisible]);\r\n\r\n  const pageIndexes = Object.keys(bookmarks).map((pageIndex) => parseInt(pageIndex, 10));\r\n\r\n  useEffect(() => {\r\n    // if bookmark is deleted from the shortcut, should also remove from selectingBookmarks\r\n    selectingBookmarks.forEach((index) => {\r\n      if (!pageIndexes.includes(index)) {\r\n        setSelectingBookmarks(selectingBookmarks.filter((bm) => bm !== index));\r\n      }\r\n    });\r\n\r\n    const shouldResetMultiSelectMode = pageIndexes.length === 0;\r\n    if (shouldResetMultiSelectMode) {\r\n      setMultiSelectionMode(false);\r\n    }\r\n  }, [bookmarks]);\r\n\r\n  const onRemoveBookmarks = (pageIndexes) => {\r\n    const title = t('warning.deleteBookmark.title');\r\n    const message = t('warning.deleteBookmark.message');\r\n    const confirmationWarning = {\r\n      message,\r\n      title,\r\n      onConfirm: () => {\r\n        pageIndexes.forEach((pageIndex) => dispatch(actions.removeBookmark(pageIndex)));\r\n        setSelectingBookmarks([]);\r\n      },\r\n      confirmBtnText: t('action.delete'),\r\n    };\r\n    dispatch(actions.showWarningMessage(confirmationWarning));\r\n  };\r\n\r\n  if (isDisabled) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        'Panel': true,\r\n        'BookmarksPanel': true,\r\n        'bookmark-outline-panel': true,\r\n        [panelSelector]: true,\r\n        'custom-panel': customizableUI,\r\n      })}\r\n      data-element={DataElements.BOOKMARK_PANEL}\r\n    >\r\n      <div className=\"bookmark-outline-panel-header\">\r\n        <div className=\"header-title\">\r\n          {t('component.bookmarksPanel')}\r\n        </div>\r\n        {!isMultiSelectionMode &&\r\n          <Button\r\n            className=\"bookmark-outline-control-button\"\r\n            dataElement={DataElements.BOOKMARK_MULTI_SELECT}\r\n            label={t('action.edit')}\r\n            disabled={isAddingNewBookmark || pageIndexes.length === 0}\r\n            onClick={() => setMultiSelectionMode(true)}\r\n          />\r\n        }\r\n        {isMultiSelectionMode &&\r\n          <Button\r\n            className=\"bookmark-outline-control-button\"\r\n            dataElement={DataElements.BOOKMARK_MULTI_SELECT}\r\n            label={t('option.bookmarkOutlineControls.done')}\r\n            disabled={isAddingNewBookmark}\r\n            onClick={() => {\r\n              setMultiSelectionMode(false);\r\n              setSelectingBookmarks([]);\r\n            }}\r\n          />\r\n        }\r\n      </div>\r\n\r\n      <Choice\r\n        dataElement={DataElements.BOOKMARK_SHORTCUT_OPTION}\r\n        type=\"checkbox\"\r\n        isSwitch\r\n        id=\"bookmark-view-option\"\r\n        className=\"bookmark-switch\"\r\n        label={t('message.viewBookmark')}\r\n        checked={isBookmarkIconShortcutVisible}\r\n        onChange={(e) => dispatch(actions.setBookmarkIconShortcutVisibility(e.target.checked))}\r\n      />\r\n\r\n      {!isAddingNewBookmark && pageIndexes.length === 0 && (\r\n        <div className=\"msg msg-no-bookmark-outline\">{t('message.noBookmarks')}</div>\r\n      )}\r\n\r\n      <div className=\"bookmark-outline-row\">\r\n        {isAddingNewBookmark &&\r\n          <Bookmark\r\n            isAdding\r\n            label={`${t('component.bookmarkPage')} ${pageLabels[currentPageIndex]} - ${t('component.bookmarkTitle')}`}\r\n            text={bookmarks[currentPageIndex] ?? ''}\r\n            pageIndex={currentPageIndex}\r\n            onSave={(newText) => {\r\n              dispatch(actions.addBookmark(currentPageIndex, newText));\r\n              setAddingNewBookmark(false);\r\n            }}\r\n            onCancel={() => setAddingNewBookmark(false)}\r\n            panelSelector={panelSelector}\r\n          />\r\n        }\r\n\r\n        {pageIndexes.map((pageIndex) => (\r\n          <Bookmark\r\n            key={pageIndex}\r\n            panelSelector={panelSelector}\r\n            isMultiSelectionMode={isMultiSelectionMode}\r\n            label={`${t('component.bookmarkPage')} ${pageLabels[pageIndex]} - ${t('component.bookmarkTitle')}`}\r\n            defaultLabel={`${t('component.bookmarkPage')} ${pageLabels[pageIndex]}`}\r\n            text={bookmarks[pageIndex]}\r\n            pageIndex={pageIndex}\r\n            onSave={(newText) => dispatch(actions.editBookmark(pageIndex, newText))}\r\n            onRemove={(index) => onRemoveBookmarks([index])}\r\n            setSelected={(index, val) => {\r\n              if (selectingBookmarks.find((bm) => bm === index)) {\r\n                if (!val) {\r\n                  setSelectingBookmarks(selectingBookmarks.filter((bm) => bm !== index));\r\n                }\r\n              } else {\r\n                if (val) {\r\n                  setSelectingBookmarks([...selectingBookmarks, index]);\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <DataElementWrapper\r\n        className=\"bookmark-outline-footer\"\r\n        dataElement={DataElements.BOOKMARK_ADD_NEW_BUTTON_CONTAINER}\r\n      >\r\n        {isMultiSelectionMode ?\r\n          <>\r\n            <Button\r\n              className=\"multi-selection-button\"\r\n              img=\"icon-menu-add\"\r\n              disabled={selectingBookmarks.length > 0 || !!bookmarks[currentPageIndex] || isAddingNewBookmark}\r\n              onClick={() => setAddingNewBookmark(true)}\r\n            />\r\n            <Button\r\n              className=\"multi-selection-button\"\r\n              img=\"icon-delete-line\"\r\n              disabled={selectingBookmarks.length === 0}\r\n              onClick={() => onRemoveBookmarks(selectingBookmarks)}\r\n            />\r\n          </>\r\n          :\r\n          <Button\r\n            className=\"bookmark-outline-control-button add-new-button\"\r\n            img=\"icon-menu-add\"\r\n            dataElement={DataElements.BOOKMARK_ADD_NEW_BUTTON}\r\n            label={`${t('action.add')} ${t('component.bookmarkPanel')}`}\r\n            disabled={isAddingNewBookmark || !!bookmarks[currentPageIndex]}\r\n            onClick={() => setAddingNewBookmark(true)}\r\n          />\r\n        }\r\n      </DataElementWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookmarksPanel;\r\n","import BookmarksPanel from './BookmarksPanel';\r\n\r\nexport default BookmarksPanel;\r\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.BookmarksPanel{display:flex;flex-direction:column;flex:1;font-size:var(--font-size-default)}.BookmarksPanel .bookmark-switch{-webkit-font-smoothing:antialiased;margin-top:var(--padding-medium);padding-left:4px}.BookmarksPanel .bookmark-outline-single-container{margin-top:var(--padding-medium)}.BookmarksPanel .msg-no-bookmark-outline{margin-top:var(--padding)}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./BookmarksPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["propTypes","text","PropTypes","isRequired","label","defaultLabel","pageIndex","isAdding","isMultiSelectionMode","setSelected","onSave","onRemove","onCancel","panelSelector","Bookmark","_ref","t","_slicedToArray","useTranslation","_useState2","useState","isEditing","setIsEditing","_useState4","isDefault","setIsDefault","_useState6","bookmarkText","setBookmarkText","_useState8","isContextMenuOpen","setContextMenuOpen","_useState10","undefined","clearSingleClick","setClearSingleClick","inputRef","useRef","isRenameButtonDisabled","onSaveBookmark","trim","onCancelBookmark","setCurrentPage","core","useEffect","current","focus","select","React","DataElementWrapper","className","classNames","tabIndex","onKeyDown","e","key","onClick","detail","setTimeout","onDoubleClick","clearTimeout","Choice","type","id","concat","stopPropagation","onChange","target","checked","Button","dataElement","img","MoreOptionsContextMenuPopup","anchorButton","shouldDisplayDeleteButton","onClosePopup","onRenameClick","onDeleteClick","name","ref","placeholder","value","isSubmitType","disabled","_bookmarks$currentPag","_useSelector2","useSelector","state","selectors","isElementDisabled","DataElements","BOOKMARK_PANEL","getBookmarks","getCurrentPage","getPageLabels","isBookmarkIconShortcutVisible","getFeatureFlags","shallowEqual","isDisabled","bookmarks","currentPageIndex","pageLabels","featureFlags","isAddingNewBookmark","setAddingNewBookmark","setMultiSelectionMode","selectingBookmarks","setSelectingBookmarks","customizableUI","dispatch","useDispatch","setBookmarkIconShortcutVisibility","pageIndexes","Object","keys","map","parseInt","forEach","index","includes","filter","bm","length","onRemoveBookmarks","title","confirmationWarning","message","onConfirm","actions","removeBookmark","confirmBtnText","showWarningMessage","_defineProperty","BOOKMARK_MULTI_SELECT","BOOKMARK_SHORTCUT_OPTION","isSwitch","newText","addBookmark","editBookmark","val","find","BOOKMARK_ADD_NEW_BUTTON_CONTAINER","BOOKMARK_ADD_NEW_BUTTON","exports","___CSS_LOADER_API_IMPORT___","push","module","locals","api","content","__esModule","default","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","tagName","root","elements","querySelectorAll","el","shadowRoot","clonedStyleTags","i","webComponent","onload","styleNode","innerHTML","cloneNode"],"sourceRoot":""}
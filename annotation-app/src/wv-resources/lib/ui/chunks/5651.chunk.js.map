{"version":3,"file":"chunks/5651.chunk.js","mappings":"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","sources":["webpack://webviewer-ui/./src/helpers/pageManipulationFunctions.js"],"sourcesContent":["import extractPagesWithAnnotations from 'helpers/extractPagesWithAnnotations';\r\nimport core from 'core';\r\nimport { saveAs } from 'file-saver';\r\nimport actions from 'actions';\r\nimport i18next from 'i18next';\r\nimport { workerTypes } from 'constants/types';\r\nimport { redactionTypeMap } from 'constants/redactionTypes';\r\nimport DataElements from 'constants/dataElement';\r\nimport { createAnnouncement } from './accessibility';\r\n\r\nconst getNewRotation = (curr, counterClockwise = false) => {\r\n  const { E_0, E_90, E_180, E_270 } = window.Core.PageRotation;\r\n  switch (curr) {\r\n    case E_270:\r\n      return counterClockwise ? E_180 : E_0;\r\n    case E_180:\r\n      return counterClockwise ? E_90 : E_270;\r\n    case E_90:\r\n      return counterClockwise ? E_0 : E_180;\r\n    default:\r\n      return counterClockwise ? E_270 : E_90;\r\n  }\r\n};\r\n\r\nconst canRotateLoadedDocument = () => {\r\n  const doc = core.getDocument();\r\n  const docType = doc?.type;\r\n\r\n  return (\r\n    workerTypes.PDF === docType ||\r\n    workerTypes.IMAGE === docType ||\r\n    (docType === workerTypes.WEBVIEWER_SERVER && !doc.isWebViewerServerDocument())\r\n  );\r\n};\r\n\r\nconst rotatePages = (pageNumbers, counterClockwise) => {\r\n  if (canRotateLoadedDocument()) {\r\n    const rotation = counterClockwise ? window.Core.PageRotation.E_270 : window.Core.PageRotation.E_90;\r\n    pageNumbers.forEach((index) => {\r\n      core.rotatePages([index], rotation);\r\n    });\r\n  } else {\r\n    const docViewer = core.getDocumentViewer();\r\n    const currentRotations = docViewer.getPageRotations();\r\n    for (const page of pageNumbers) {\r\n      docViewer.setRotation(getNewRotation(currentRotations[page], counterClockwise), page);\r\n    }\r\n  }\r\n};\r\n\r\nconst rotateClockwise = (pageNumbers) => {\r\n  rotatePages(pageNumbers, false);\r\n  createAnnouncement(`${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.rotatedClockwise')} ${i18next.t('action.rotationIs')} ${(core.getDocument().getPageRotation(core.getCurrentPage()) + 90) % 360} degrees`);\r\n};\r\n\r\nconst rotateCounterClockwise = (pageNumbers) => {\r\n  rotatePages(pageNumbers, true);\r\n  createAnnouncement(`${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.rotatedCounterClockwise')} ${i18next.t('action.rotationIs')} ${(core.getDocument().getPageRotation(core.getCurrentPage()) + 270) % 360} degrees`);\r\n};\r\n\r\nconst insertAbove = (pageNumbers, width, height) => {\r\n  core.insertBlankPages(pageNumbers, width, height);\r\n};\r\n\r\nconst insertBelow = (pageNumbers, width, height) => {\r\n  core.insertBlankPages(pageNumbers.map((i) => i + 1), width, height);\r\n};\r\n\r\nconst replace = (dispatch) => {\r\n  dispatch(actions.closeElement(DataElements.PAGE_MANIPULATION_OVERLAY));\r\n  dispatch(actions.openElement('pageReplacementModal'));\r\n};\r\n\r\nconst extractPages = (pageNumbers, dispatch) => {\r\n  const message = i18next.t('warning.extractPage.message');\r\n  const title = i18next.t('warning.extractPage.title');\r\n  const confirmBtnText = i18next.t('warning.extractPage.confirmBtn');\r\n  const secondaryBtnText = i18next.t('warning.extractPage.secondaryBtn');\r\n  const extractAnnouncement = `${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.extracted')}`;\r\n  const deleteAnnouncement = `${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.deleted')}`;\r\n\r\n  const warning = {\r\n    message,\r\n    title,\r\n    confirmBtnText,\r\n    onConfirm: () => extractPagesWithAnnotations(pageNumbers).then((file) => {\r\n      saveAs(file, 'extractedDocument.pdf');\r\n      createAnnouncement(extractAnnouncement + deleteAnnouncement);\r\n    }),\r\n    secondaryBtnText,\r\n    onSecondary: () => {\r\n      extractPagesWithAnnotations(pageNumbers).then((file) => {\r\n        saveAs(file, 'extractedDocument.pdf');\r\n        core.removePages(pageNumbers).then(() => {\r\n          dispatch(actions.setSelectedPageThumbnails([]));\r\n        });\r\n        createAnnouncement(extractAnnouncement);\r\n      });\r\n    },\r\n  };\r\n\r\n  dispatch(actions.showWarningMessage(warning));\r\n};\r\n\r\nconst deletePages = (pageNumbers, dispatch, isModalEnabled = true) => {\r\n  const deleteAnnouncement = `${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.deleted')}`;\r\n  if (isModalEnabled) {\r\n    let message = i18next.t('warning.deletePage.deleteMessage');\r\n    const title = i18next.t('warning.deletePage.deleteTitle');\r\n    const confirmBtnText = i18next.t('action.ok');\r\n\r\n    let warning = {\r\n      message,\r\n      title,\r\n      confirmBtnText,\r\n      onConfirm: () => core.removePages(pageNumbers).then(() => {\r\n        dispatch(actions.setSelectedPageThumbnails([]));\r\n        dispatch(actions.setShiftKeyThumbnailsPivotIndex());\r\n        createAnnouncement(deleteAnnouncement);\r\n      }),\r\n    };\r\n\r\n    if (core.getDocumentViewer().getPageCount() === pageNumbers.length) {\r\n      message = i18next.t('warning.deletePage.deleteLastPageMessage');\r\n\r\n      warning = {\r\n        message,\r\n        title,\r\n        confirmBtnText,\r\n        onConfirm: () => Promise.resolve(),\r\n      };\r\n    }\r\n\r\n    dispatch(actions.showWarningMessage(warning));\r\n  } else {\r\n    core.removePages(pageNumbers).then(() => {\r\n      dispatch(actions.setSelectedPageThumbnails([]));\r\n      dispatch(actions.setShiftKeyThumbnailsPivotIndex());\r\n      createAnnouncement(deleteAnnouncement);\r\n    });\r\n  }\r\n};\r\n\r\nconst movePagesToBottom = (pageNumbers) => {\r\n  core.movePages(pageNumbers, core.getTotalPages() + 1);\r\n  createAnnouncement(`${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.movedToBottomOfDocument')}`);\r\n};\r\n\r\nconst movePagesToTop = (pageNumbers) => {\r\n  core.movePages(pageNumbers, 0);\r\n  createAnnouncement(`${i18next.t('action.page')} ${pageNumbers} ${i18next.t('action.movedToTopofDocument')}`);\r\n};\r\n\r\nconst noPagesSelectedWarning = (pageNumbers, dispatch) => {\r\n  if (pageNumbers.length === 0) {\r\n    const title = i18next.t('warning.selectPage.selectTitle');\r\n    const message = i18next.t('warning.selectPage.selectMessage');\r\n    const confirmBtnText = i18next.t('action.ok');\r\n\r\n    const warning = {\r\n      message,\r\n      title,\r\n      confirmBtnText,\r\n      onConfirm: () => Promise.resolve(),\r\n      keepOpen: ['leftPanel'],\r\n    };\r\n\r\n    dispatch(actions.showWarningMessage(warning));\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst exitPageInsertionWarning = (closeModal, dispatch) => {\r\n  const title = i18next.t('insertPageModal.warning.title');\r\n  const message = i18next.t('insertPageModal.warning.message');\r\n  const confirmBtnText = i18next.t('action.ok');\r\n\r\n  const warning = {\r\n    message,\r\n    title,\r\n    confirmBtnText,\r\n    onConfirm: closeModal,\r\n    keepOpen: ['leftPanel'],\r\n  };\r\n\r\n  dispatch(actions.showWarningMessage(warning));\r\n};\r\n\r\nconst exitPageReplacementWarning = (closeModal, dispatch) => {\r\n  const title = i18next.t('option.pageReplacementModal.warning.title');\r\n  const message = i18next.t('option.pageReplacementModal.warning.message');\r\n  const confirmBtnText = i18next.t('action.ok');\r\n\r\n  const warning = {\r\n    message,\r\n    title,\r\n    confirmBtnText,\r\n    onConfirm: closeModal,\r\n    keepOpen: ['leftPanel'],\r\n  };\r\n\r\n  dispatch(actions.showWarningMessage(warning));\r\n};\r\n\r\nconst redactPages = (pageNumbers, redactionStyles) => {\r\n  core.applyRedactions(createPageRedactions(pageNumbers, redactionStyles));\r\n};\r\n\r\nconst createPageRedactions = (pageNumbers, redactionStyles) => {\r\n  const annots = [];\r\n  const document = core.getDocument();\r\n  for (const page of pageNumbers) {\r\n    const pageInfo = document.getPageInfo(page);\r\n    const pageRotation = document.getPageRotation(page);\r\n    if (pageInfo) {\r\n      let width;\r\n      let height;\r\n      if (pageRotation === 90 || pageRotation === 270) {\r\n        width = pageInfo.height;\r\n        height = pageInfo.width;\r\n      } else {\r\n        width = pageInfo.width;\r\n        height = pageInfo.height;\r\n      }\r\n      const redaction = new window.Core.Annotations.RedactionAnnotation({\r\n        PageNumber: page,\r\n        Rect: new window.Core.Annotations.Rect(0, 0, width, height),\r\n        ...redactionStyles\r\n      });\r\n      redaction.type = redactionTypeMap['FULL_PAGE'];\r\n      redaction.setCustomData('trn-redaction-type', redactionTypeMap['FULL_PAGE']);\r\n      redaction.Author = core.getCurrentUser();\r\n      annots.push(redaction);\r\n    }\r\n  }\r\n  core.getAnnotationManager().addAnnotations(annots);\r\n  core.getAnnotationManager().drawAnnotationsFromList(annots);\r\n  return annots;\r\n};\r\n\r\nconst replacePages = async (sourceDocument, pagesToRemove, pagesToReplaceIntoDocument) => {\r\n  const documentLoadedInViewer = core.getDocument();\r\n  const pageCountOfLoadedDocument = documentLoadedInViewer.getPageCount();\r\n  const pagesToRemoveFromOriginal = pagesToRemove.sort((a, b) => a - b);\r\n\r\n  // If document to replace into has only one page, or we are replacing all pages\r\n  // then we can insert pages at the end, and then remove the pages to avoid an error of removing all pages\r\n  if (pageCountOfLoadedDocument === 1 || pagesToRemoveFromOriginal.length === pageCountOfLoadedDocument) {\r\n    await documentLoadedInViewer.insertPages(sourceDocument, pagesToReplaceIntoDocument);\r\n    await documentLoadedInViewer.removePages(pagesToRemoveFromOriginal);\r\n  } else {\r\n    // If document to replace into has > 1 page we need insert the new pages at the spot of the first removed page\r\n    // pagesToRemoveFromOriginal is sorted in ascending order. Interleaving pages would be complex.\r\n    await documentLoadedInViewer.removePages(pagesToRemoveFromOriginal);\r\n    await documentLoadedInViewer.insertPages(sourceDocument, pagesToReplaceIntoDocument, pagesToRemoveFromOriginal[0]);\r\n  }\r\n};\r\n\r\nconst insertPages = async (sourceDocument, pagesToInsert, insertBeforeThisPage = null) => {\r\n  const documentLoadedInViewer = core.getDocument();\r\n  await documentLoadedInViewer.insertPages(sourceDocument, pagesToInsert, insertBeforeThisPage);\r\n};\r\n\r\nexport {\r\n  rotateClockwise,\r\n  rotateCounterClockwise,\r\n  insertAbove,\r\n  insertBelow,\r\n  replace,\r\n  extractPages,\r\n  deletePages,\r\n  movePagesToBottom,\r\n  movePagesToTop,\r\n  noPagesSelectedWarning,\r\n  redactPages,\r\n  createPageRedactions,\r\n  replacePages,\r\n  insertPages,\r\n  exitPageInsertionWarning,\r\n  exitPageReplacementWarning\r\n};"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","obj","toPrimitive","String","_toPrimitive","getOwnPropertyDescriptors","defineProperties","_createForOfIteratorHelper","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","step","_e2","arr","len","arr2","getNewRotation","curr","counterClockwise","_window$Core$PageRota","window","Core","PageRotation","E_0","E_90","E_180","E_270","rotatePages","pageNumbers","docType","doc","core","getDocument","workerTypes","PDF","IMAGE","WEBVIEWER_SERVER","isWebViewerServerDocument","rotation","index","_step","docViewer","getDocumentViewer","currentRotations","getPageRotations","_iterator","page","setRotation","rotateClockwise","createAnnouncement","concat","i18next","getPageRotation","getCurrentPage","rotateCounterClockwise","insertAbove","width","height","insertBlankPages","insertBelow","map","replace","dispatch","actions","closeElement","DataElements","PAGE_MANIPULATION_OVERLAY","openElement","extractPages","message","title","confirmBtnText","secondaryBtnText","extractAnnouncement","deleteAnnouncement","warning","onConfirm","extractPagesWithAnnotations","file","saveAs","onSecondary","removePages","setSelectedPageThumbnails","showWarningMessage","deletePages","isModalEnabled","setShiftKeyThumbnailsPivotIndex","getPageCount","movePagesToBottom","movePages","getTotalPages","movePagesToTop","noPagesSelectedWarning","keepOpen","exitPageInsertionWarning","closeModal","exitPageReplacementWarning","redactPages","redactionStyles","applyRedactions","createPageRedactions","_step2","annots","document","_iterator2","pageInfo","getPageInfo","pageRotation","redaction","Annotations","RedactionAnnotation","PageNumber","Rect","redactionTypeMap","setCustomData","Author","getCurrentUser","getAnnotationManager","addAnnotations","drawAnnotationsFromList","replacePages","_ref","_callee","sourceDocument","pagesToRemove","pagesToReplaceIntoDocument","documentLoadedInViewer","pageCountOfLoadedDocument","pagesToRemoveFromOriginal","_context","sort","b","insertPages","_x","_x2","_x3","_ref2","_callee2","pagesToInsert","insertBeforeThisPage","_args2","_context2","_x4","_x5"],"sourceRoot":""}
{"version":3,"file":"chunks/3242.chunk.js","mappings":"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","sources":["webpack://webviewer-ui/./src/components/ScaleOverlay/ScaleSelector.js","webpack://webviewer-ui/./src/components/ScaleOverlay/ScaleHeader.js","webpack://webviewer-ui/./src/constants/measurementTypes.js","webpack://webviewer-ui/./src/helpers/getNumberOfDecimalPlaces.js","webpack://webviewer-ui/./src/helpers/getAngleInRadians.js","webpack://webviewer-ui/./src/components/MeasurementOverlay/LineMeasurementInput.js","webpack://webviewer-ui/./src/helpers/getFormattedUnit.js","webpack://webviewer-ui/./src/components/MeasurementOverlay/EllipseMeasurementOverlay.js","webpack://webviewer-ui/./src/components/ScaleOverlay/MeasurementDetail.js","webpack://webviewer-ui/./src/components/ScaleOverlay/CalibrationOverlay.js","webpack://webviewer-ui/./src/components/ScaleOverlay/ScaleOverlay.js","webpack://webviewer-ui/./src/components/ScaleOverlay/ScaleOverlayContainer.js","webpack://webviewer-ui/./src/components/ScaleOverlay/ScaleOverlay.scss","webpack://webviewer-ui/./src/components/ScaleOverlay/ScaleOverlay.scss?b627"],"sourcesContent":["import classNames from 'classnames';\r\nimport Icon from 'components/Icon';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport actions from 'actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport selectors from 'selectors';\r\nimport core from 'core';\r\nimport useOnClickOutside from 'hooks/useOnClickOutside';\r\n\r\nconst propTypes = {\r\n  scales: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectedScales: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onScaleSelected: PropTypes.func.isRequired,\r\n  onAddingNewScale: PropTypes.func.isRequired\r\n};\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nconst ScaleSelector = ({ scales = [], selectedScales = [], onScaleSelected, onAddingNewScale }) => {\r\n  const [t] = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  const isMultipleScalesMode = useSelector((state) => selectors.getIsMultipleScalesMode(state));\r\n\r\n  const isMultipleScales = selectedScales.length > 1;\r\n\r\n  const getScaleInfo = (deleteScale) => {\r\n    const scales = core.getScales();\r\n    const measurements = [];\r\n    const relatedPages = new Set();\r\n    scales[deleteScale.toString()].forEach((measurementItem) => {\r\n      if (measurementItem instanceof window.Core.Annotations.Annotation) {\r\n        relatedPages.add(measurementItem['PageNumber']);\r\n        measurements.push(measurementItem);\r\n      }\r\n    });\r\n    return {\r\n      measurementsNum: measurements.length,\r\n      pages: [...relatedPages]\r\n    };\r\n  };\r\n\r\n  const openScaleDeletionModal = (scale) => {\r\n    if (!scale) {\r\n      return;\r\n    }\r\n    const deleteScale = new Scale(scale);\r\n    const scaleInfo = getScaleInfo(deleteScale);\r\n    const hasAssociatedMeasurements = !!scaleInfo.pages.length;\r\n    const message = hasAssociatedMeasurements ? (\r\n      <div>\r\n        <p>\r\n          <span>\r\n            {t('option.measurement.deleteScaleModal.scaleIsOn-delete-info')}\r\n            <b>{` ${t('option.measurement.deleteScaleModal.page-delete-info')} ${scaleInfo.pages.join(', ')} `}</b>\r\n            {t('option.measurement.deleteScaleModal.appliedTo-delete-info')}\r\n            <b>{` ${scaleInfo.measurementsNum} ${scaleInfo.measurementsNum > 1 ? t('option.measurement.deleteScaleModal.measurements') : t('option.measurement.deleteScaleModal.measurement')}.`}</b>\r\n          </span>\r\n          <span> </span>\r\n          <span>\r\n            {t('option.measurement.deleteScaleModal.deletionIs')}\r\n            <b>{` ${t('option.measurement.deleteScaleModal.irreversible')} `}</b>\r\n            {t('option.measurement.deleteScaleModal.willDeleteMeasurement')}\r\n          </span>\r\n        </p>\r\n        <p>\r\n          {t('option.measurement.deleteScaleModal.confirmDelete')}\r\n        </p>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <p>\r\n          <span>\r\n            {t('option.measurement.deleteScaleModal.deletionIs')}\r\n            <b>{` ${t('option.measurement.deleteScaleModal.irreversible')}. `}</b>\r\n            {t('option.measurement.deleteScaleModal.confirmDelete')}\r\n          </span>\r\n        </p>\r\n      </div>\r\n    );\r\n    const title = `${t('option.measurement.deleteScaleModal.deleteScale')} ${deleteScale.toString()}`;\r\n    const confirmBtnText = t('action.confirm');\r\n\r\n    const warning = {\r\n      message,\r\n      title,\r\n      confirmBtnText,\r\n      onConfirm: () => core.deleteScale(deleteScale)\r\n    };\r\n    dispatch(actions.showWarningMessage(warning));\r\n  };\r\n\r\n  const renderScale = (scale) => {\r\n    const precision = core.getScalePrecision(scale);\r\n    const pageScaleStr = Scale.getFormattedValue(scale.pageScale.value, scale.pageScale.unit, precision, false);\r\n    const worldScaleStr = Scale.getFormattedValue(scale.worldScale.value, scale.worldScale.unit, precision, false);\r\n    const scaleDisplay = `${pageScaleStr} = ${worldScaleStr}`;\r\n\r\n    return <div><span>{scaleDisplay}</span></div>;\r\n  };\r\n\r\n  let title = t('option.measurement.scaleOverlay.multipleScales');\r\n\r\n  if (selectedScales.length && !isMultipleScales) {\r\n    const selectedScale = new Scale(selectedScales[0]);\r\n    title = renderScale(selectedScale);\r\n  }\r\n\r\n  // TODO: This is a bandaid solution to fix a Safari bug. This dropdown should be refactored to use a react-select component\r\n  // instead of hiding and displaying based on focus pseudoclasses,\r\n  // otherwise it is hard to debug as the open/close logic is in a CSS stylesheet and not super evident\r\n  const [isDropDownOpen, setOpenDropDown] = useState(false);\r\n  const toggleDropdown = () => {\r\n    setOpenDropDown((prevValue) => !prevValue);\r\n  };\r\n\r\n  const selectorRef = useRef(null);\r\n\r\n  useOnClickOutside(selectorRef, () => {\r\n    setOpenDropDown(false);\r\n  });\r\n\r\n  return (\r\n    <DataElementWrapper\r\n      className=\"scale-overlay-selector\"\r\n      dataElement=\"scaleSelector\"\r\n      tabIndex={0}\r\n      onClick={toggleDropdown}\r\n      ref={selectorRef}\r\n    >\r\n      <button className=\"scale-overlay-selection\">\r\n        {title}\r\n        <Icon className=\"scale-overlay-arrow\" glyph=\"icon-chevron-down\" />\r\n      </button>\r\n      {isDropDownOpen && (\r\n        <ul className={classNames('scale-overlay-list')} >\r\n          <li>\r\n            <div>{title}</div>\r\n            <Icon className=\"scale-overlay-arrow\" glyph=\"icon-chevron-up\" />\r\n          </li>\r\n          {scales.map((value) => (\r\n            <li key={value.toString()}>\r\n              <button\r\n                className=\"delete\"\r\n                onMouseDown={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  openScaleDeletionModal(value.toString());\r\n                }}\r\n                disabled={scales.length <= 1}\r\n              >\r\n                <Icon glyph=\"icon-delete-line\" />\r\n              </button>\r\n              <button\r\n                className={classNames({\r\n                  options: true,\r\n                  'option-selected': selectedScales.includes(value.toString()),\r\n                })}\r\n                onMouseDown={() => onScaleSelected(selectedScales, value.toString())}\r\n              >\r\n                {renderScale(value)}\r\n              </button>\r\n            </li>\r\n          ))}\r\n          {isMultipleScalesMode && (\r\n            <li>\r\n              <button onMouseDown={onAddingNewScale} className=\"add-new-scale\">\r\n                {t('option.measurement.scaleOverlay.addNewScale')}\r\n              </button>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      )}\r\n    </DataElementWrapper>\r\n  );\r\n};\r\n\r\nScaleSelector.propTypes = propTypes;\r\n\r\nexport default ScaleSelector;\r\n","import React from 'react';\r\nimport Icon from 'components/Icon';\r\nimport ScaleSelector from './ScaleSelector';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst propTypes = {\r\n  scales: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectedScales: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onScaleSelected: PropTypes.func.isRequired,\r\n  onAddingNewScale: PropTypes.func.isRequired,\r\n};\r\n\r\nconst ScaleHeader = ({ scales, selectedScales, onScaleSelected, onAddingNewScale }) => {\r\n  const [t] = useTranslation();\r\n\r\n  return (\r\n    <div className=\"scale-overlay-header\">\r\n      <Icon glyph=\"ic-calibrate\" className=\"scale-overlay-icon\" />\r\n      <div className=\"scale-overlay-title\">{t('option.measurementOption.scale')}</div>\r\n      {scales.length ? (\r\n        <ScaleSelector\r\n          scales={scales}\r\n          selectedScales={selectedScales}\r\n          onScaleSelected={onScaleSelected}\r\n          onAddingNewScale={onAddingNewScale}\r\n        />\r\n      ) : (\r\n        <button className=\"add-new-scale\" onClick={onAddingNewScale} data-element=\"addNewScale\">{t('option.measurement.scaleOverlay.addNewScale')}</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nScaleHeader.propTypes = propTypes;\r\nexport default ScaleHeader;\r\n","export const measurementTypeTranslationMap = {\r\n  distanceMeasurement: 'option.measurementOverlay.distanceMeasurement',\r\n  perimeterMeasurement: 'option.measurementOverlay.perimeterMeasurement',\r\n  areaMeasurement: 'option.measurementOverlay.areaMeasurement',\r\n  rectangularAreaMeasurement: 'option.measurementOverlay.areaMeasurement',\r\n  cloudyRectangularAreaMeasurement: 'option.measurementOverlay.areaMeasurement',\r\n  ellipseMeasurement: 'option.measurementOverlay.areaMeasurement',\r\n  arcMeasurement: 'option.measurementOverlay.arcMeasurement',\r\n};","export default (precision) => (precision === 1 ? 0 : precision?.toString().split('.')[1].length);\r\n","export default (pt1, pt2, pt3) => {\r\n  let angle;\r\n\r\n  if (pt1 && pt2) {\r\n    if (pt3) {\r\n      // calculate the angle using Law of cosines\r\n      const AB = Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n      const BC = Math.sqrt(Math.pow(pt2.x - pt3.x, 2) + Math.pow(pt2.y - pt3.y, 2));\r\n      const AC = Math.sqrt(Math.pow(pt3.x - pt1.x, 2) + Math.pow(pt3.y - pt1.y, 2));\r\n      angle = Math.acos((BC * BC + AB * AB - AC * AC) / (2 * BC * AB));\r\n    } else {\r\n      // if there are only two points returns the angle in the plane (in radians) between the positive x-axis and the ray from (0,0) to the point (x,y)\r\n      angle = Math.atan2(pt2.y - pt1.y, pt2.x - pt1.x);\r\n      // keep the angle range between 0 and Math.PI / 2\r\n      angle = Math.abs(angle);\r\n      angle = angle > Math.PI / 2 ? Math.PI - angle : angle;\r\n    }\r\n  }\r\n\r\n  return angle;\r\n};\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\nimport core from 'core';\r\nimport { isMobileDevice } from 'helpers/device';\r\nimport selectors from 'selectors';\r\nimport getAngleInRadians from 'helpers/getAngleInRadians';\r\n\r\nconst unitMap = {\r\n  'in\\\"': 'in',\r\n  'ft\\'': 'ft'\r\n};\r\n\r\nLineMeasurementInput.propTypes = {\r\n  annotation: PropTypes.object,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  selectedTool: PropTypes.object,\r\n};\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nfunction LineMeasurementInput({ annotation, isOpen, selectedTool }) {\r\n  const [t] = useTranslation();\r\n  const isReadOnly = useSelector((state) => selectors.isDocumentReadOnly(state));\r\n  const factor = annotation?.Measure.axis[0].factor;\r\n  const unit = annotation?.DisplayUnits[0] || selectedTool?.Measure?.unit;\r\n  const [length, setLength] = useState((annotation?.getLineLength() * factor || 0).toFixed(2));\r\n  const [toggleDistanceInput, setDistanceInputToggle] = useState(false);\r\n  const [toggleAngleInput, setAngleToggle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!annotation) {\r\n      setAngle(computeAngle());\r\n      return;\r\n    }\r\n    const onAnnotationChanged = () => {\r\n      setLength((annotation.getLineLength() * factor).toFixed(2));\r\n      setAngle(computeAngle());\r\n    };\r\n    core.addEventListener('mouseMove', onAnnotationChanged);\r\n\r\n    return () => {\r\n      core.removeEventListener('mouseMove', onAnnotationChanged);\r\n    };\r\n  }, [annotation, computeAngle, factor, selectedTool]);\r\n\r\n  const onInputChanged = (event) => {\r\n    setLength(event.target.value);\r\n    validateLineLength(event);\r\n    finishAnnotation();\r\n  };\r\n\r\n  const finishAnnotation = () => {\r\n    const tool = core.getTool('AnnotationCreateDistanceMeasurement');\r\n    tool.finish();\r\n  };\r\n\r\n  const selectAnnotation = () => {\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.selectAnnotation(annotation);\r\n  };\r\n\r\n  const deselectAnnotation = () => {\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.deselectAnnotation(annotation);\r\n  };\r\n\r\n  const validateLineLength = (event) => {\r\n    if (!annotation) {\r\n      return;\r\n    }\r\n    let length = Math.abs(event.target.value);\r\n    if (length < annotation.Precision) {\r\n      length = annotation.Precision;\r\n      setLength(length);\r\n    }\r\n    const factor = annotation.Measure.axis[0].factor;\r\n    const lengthInPts = length / factor;\r\n    ensureLineIsWithinBounds(lengthInPts);\r\n  };\r\n\r\n  const isApproximatelyEqual = (value1, value2) => {\r\n    return Math.abs(value1 - value2) < 0.1;\r\n  };\r\n\r\n  const ensureLineIsWithinBounds = useCallback(\r\n    (lengthInPts) => {\r\n      if (!isApproximatelyEqual(annotation.getLineLength(), lengthInPts)) {\r\n        const maxLengthInPts = getMaxLineLengthInPts();\r\n        annotation.setLineLength(Math.min(maxLengthInPts, lengthInPts));\r\n        forceLineRedraw();\r\n      }\r\n    },\r\n    [annotation, forceLineRedraw, getMaxLineLengthInPts],\r\n  );\r\n\r\n  const getAnnotationUnit = (annotation) => {\r\n    let annotUnit;\r\n    if (annotation?.DisplayUnits?.length) {\r\n      if (annotation.DisplayUnits.length === 2 && annotation.DisplayUnits[0] === \"ft'\" && annotation.DisplayUnits[1] === 'in\"') {\r\n        annotUnit = 'in';\r\n      } else {\r\n        annotUnit = annotation.DisplayUnits[0];\r\n      }\r\n    }\r\n    return unitMap[annotUnit] || annotUnit || unitMap[unit] || unit;\r\n  };\r\n\r\n  const renderDeltas = () => {\r\n    const angle = (annotation && getAngleInRadians(annotation.Start, annotation.End)) || 0;\r\n    const unit = getAnnotationUnit(annotation);\r\n    const deltaX = Scale.getFormattedValue(annotation && Math.abs(length * Math.cos(angle)), unit, annotation?.Precision);\r\n    const deltaY = Scale.getFormattedValue(annotation && Math.abs(length * Math.sin(angle)), unit, annotation?.Precision);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"measurement__detail-item\">\r\n          <div className=\"measurement_list\">X:</div>\r\n          <div>\r\n            {deltaX}\r\n          </div>\r\n        </div>\r\n        <div className=\"measurement__detail-item\">\r\n          <div className=\"measurement_list\">Y:</div>\r\n          <div>\r\n            {deltaY}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const forceLineRedraw = useCallback(() => {\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.drawAnnotations(annotation.PageNumber);\r\n    annotationManager.trigger('annotationChanged', [[annotation], 'modify', {}]);\r\n  }, [annotation]);\r\n\r\n  const getMaxLineLengthInPts = useCallback(() => {\r\n    const currentPageNumber = core.getCurrentPage();\r\n    const documentWidth = core.getPageWidth(currentPageNumber);\r\n    const documentHeight = core.getPageHeight(currentPageNumber);\r\n    const angleInDegrees = annotation.getAngle() * (180 / Math.PI).toFixed(2);\r\n    const startPoint = annotation.getStartPoint();\r\n    const startX = startPoint.x;\r\n    const startY = startPoint.y;\r\n\r\n    let maxX;\r\n    let maxY;\r\n    if (Math.abs(angleInDegrees) < 90) {\r\n      maxX = documentWidth;\r\n    } else {\r\n      maxX = 0;\r\n    }\r\n\r\n    if (angleInDegrees > 0) {\r\n      maxY = documentHeight;\r\n    } else {\r\n      maxY = 0;\r\n    }\r\n\r\n    const maxLenX = Math.abs((maxX - startX) / Math.cos(annotation.getAngle()));\r\n    const maxLenY = Math.abs((maxY - startY) / Math.sin(annotation.getAngle()));\r\n\r\n    return Math.min(maxLenX, maxLenY);\r\n  }, [annotation]);\r\n\r\n  const setLineAngle = (event) => {\r\n    const angle = event.target.value;\r\n    const angleInRadians = angle * (Math.PI / 180) * -1;\r\n    const lengthInPts = annotation.getLineLength();\r\n    const start = annotation.Start;\r\n    const endX = Math.cos(angleInRadians) * lengthInPts + start.x;\r\n    const endY = Math.sin(angleInRadians) * lengthInPts + start.y;\r\n    annotation.setEndPoint(endX, endY);\r\n    annotation.adjustRect();\r\n    forceLineRedraw();\r\n  };\r\n\r\n  const onAngleChange = (event) => {\r\n    setAngle(event.target.value);\r\n    setLineAngle(event);\r\n    finishAnnotation();\r\n  };\r\n\r\n  const computeAngle = useCallback(() => {\r\n    if (!annotation) {\r\n      return 0;\r\n    }\r\n    let angleInRadians = annotation.getAngle();\r\n    // Multiply by -1 to achieve 0-360 degrees counterclockwise\r\n    angleInRadians *= -1;\r\n    angleInRadians = angleInRadians < 0 ? angleInRadians + 2 * Math.PI : angleInRadians;\r\n    return ((angleInRadians / Math.PI) * 180).toFixed(2);\r\n  }, [annotation]);\r\n\r\n  const [angle, setAngle] = useState(computeAngle());\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      ensureLineIsWithinBounds(annotation.getLineLength());\r\n    }\r\n  }, [annotation, ensureLineIsWithinBounds, isOpen]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">\r\n          {t('option.measurementOverlay.distance')}:\r\n        </div>\r\n        {(!annotation || !toggleDistanceInput) ? (\r\n          <div onClick={() => setDistanceInputToggle(true)} className=\"distance-show\">\r\n            {annotation?.getMeasurementTextWithScaleAndUnits?.() || 0}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <input\r\n              className=\"scale-input\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              disabled={isReadOnly}\r\n              value={length}\r\n              autoFocus={!isMobileDevice}\r\n              onChange={(event) => {\r\n                onInputChanged(event);\r\n                selectAnnotation();\r\n              }}\r\n              onBlur={(event) => {\r\n                validateLineLength(event);\r\n                setDistanceInputToggle(false);\r\n              }}\r\n              onKeyDown={(event) => {\r\n                if (event.key === 'Enter') {\r\n                  onInputChanged(event);\r\n                  deselectAnnotation();\r\n                }\r\n              }}\r\n            />\r\n            {unit}\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{t('option.measurementOverlay.angle')}:</div>\r\n        {(!annotation || !toggleAngleInput) ? (\r\n          <div onClick={() => setAngleToggle(true)} className=\"distance-show\">\r\n            {angle}&deg;\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <input\r\n              className=\"scale-input\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"360\"\r\n              disabled={isReadOnly}\r\n              value={angle}\r\n              autoFocus={!isMobileDevice}\r\n              onChange={(event) => {\r\n                onAngleChange(event);\r\n                selectAnnotation();\r\n              }}\r\n              onBlur={() => setAngleToggle(false)}\r\n              onKeyDown={(event) => {\r\n                if (event.key === 'Enter') {\r\n                  onAngleChange(event);\r\n                  deselectAnnotation();\r\n                }\r\n              }}\r\n            />\r\n            &deg;\r\n          </>\r\n        )}\r\n      </div>\r\n      {renderDeltas()}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LineMeasurementInput;\r\n","export default (unit) => {\r\n  switch (unit) {\r\n    case 'ft\\'':\r\n      return 'ft';\r\n    case 'in\"':\r\n      return 'in';\r\n    case 'ft-in':\r\n      return 'ft';\r\n    default:\r\n      return unit;\r\n  }\r\n};\r\n","import core from 'core';\r\nimport getNumberOfDecimalPlaces from 'helpers/getNumberOfDecimalPlaces';\r\nimport { isMobileDevice } from 'src/helpers/device';\r\nimport { precisionFractions } from 'constants/measurementScale';\r\nimport PropTypes from 'prop-types';\r\nimport selectors from 'selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport getFormattedUnit from 'src/helpers/getFormattedUnit';\r\n\r\nconst propTypes = {\r\n  annotation: (props, propName, componentName) => {\r\n    if (!props.annotation && !props.selectedTool) {\r\n      return new Error(`One of props 'annotation' or 'selectedTool' was not specified in '${componentName}'.`);\r\n    }\r\n    if (props.annotation) {\r\n      PropTypes.checkPropTypes(\r\n        {\r\n          annotation: PropTypes.shape({\r\n            Precision: PropTypes.number,\r\n            DisplayUnits: PropTypes.arrayOf(PropTypes.string),\r\n            getContents: PropTypes.func,\r\n          }),\r\n        },\r\n        { annotation: props.annotation },\r\n        'prop',\r\n        'EllipseMeasurementOverlay',\r\n      );\r\n    }\r\n    return null;\r\n  },\r\n  selectedTool: (props, propName, componentName) => {\r\n    if (!props.annotation && !props.selectedTool) {\r\n      return new Error(`One of props 'annotation' or 'selectedTool' was not specified in '${componentName}'.`);\r\n    }\r\n    if (props.selectedTool) {\r\n      PropTypes.checkPropTypes(\r\n        {\r\n          selectedTool: PropTypes.shape({\r\n            defaults: PropTypes.shape({\r\n              Precision: PropTypes.number,\r\n            }),\r\n            Measure: PropTypes.shape({\r\n              unit: PropTypes.string,\r\n            }),\r\n          }),\r\n        },\r\n        { selectedTool: props.selectedTool },\r\n        'prop',\r\n        'EllipseMeasurementOverlay',\r\n      );\r\n    }\r\n    return null;\r\n  },\r\n  isOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nfunction EllipseMeasurementOverlay({ annotation, isOpen, selectedTool }) {\r\n  const { t } = useTranslation();\r\n\r\n  const isReadOnly = useSelector((state) => selectors.isDocumentReadOnly(state));\r\n  const area = annotation?.getMeasurementTextWithScaleAndUnits?.() || 0;\r\n  const data = {\r\n    precision: !annotation ? selectedTool?.defaults?.Precision : annotation.Precision,\r\n    unit: getFormattedUnit((annotation?.Scale || selectedTool?.defaults?.Scale)[1][1]),\r\n    area,\r\n  };\r\n\r\n  const refreshRadius = () => {\r\n    setRadius(computeRadius());\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshRadius();\r\n    core.addEventListener('mouseMove', refreshRadius);\r\n\r\n    return () => {\r\n      core.removeEventListener('mouseMove', refreshRadius);\r\n    };\r\n  }, [annotation]);\r\n\r\n  useEffect(() => {\r\n    const onAnnotationDeselected = (annotations, action) => {\r\n      if (action === 'deselected') {\r\n        const annotation = annotations[0];\r\n        ensureDiameterIsWithinBounds(annotation.getWidth(), annotation);\r\n      }\r\n    };\r\n\r\n    core.addEventListener('annotationSelected', onAnnotationDeselected);\r\n\r\n    return () => {\r\n      core.removeEventListener('annotationSelected', onAnnotationDeselected);\r\n    };\r\n  }, []);\r\n\r\n  const computeRadius = () => {\r\n    if (!annotation) {\r\n      return 0;\r\n    }\r\n    const decimalPlaces = annotation && getNumberOfDecimalPlaces(annotation.Precision) || 0;\r\n    const factor = annotation.Measure.axis[0].factor;\r\n    const radiusInPts = (annotation.Width / 2).toFixed(decimalPlaces);\r\n    return (radiusInPts * factor).toFixed(decimalPlaces);\r\n  };\r\n\r\n  const finishAnnotation = () => {\r\n    const tool = core.getTool('AnnotationCreateEllipseMeasurement');\r\n    tool.finish();\r\n  };\r\n\r\n  const selectAnnotation = () => {\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.selectAnnotation(annotation);\r\n  };\r\n\r\n  const deselectAnnot = () => {\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.deselectAnnotation(annotation);\r\n  };\r\n\r\n  const onChangeRadiusLength = (event) => {\r\n    const eventValue = event.target.value || 0;\r\n    const radius = eventValue > 0 ? eventValue : 0.0001;\r\n    const factor = annotation.Measure.axis[0].factor;\r\n    const radiusInPts = radius / factor;\r\n    const diameterInPts = radiusInPts * 2;\r\n    const rect = annotation.getRect();\r\n    let { X1, X2, Y1, Y2 } = 0;\r\n    X1 = rect['x1'];\r\n    Y1 = rect['y1'];\r\n    X2 = rect['x1'] + diameterInPts;\r\n    Y2 = rect['y1'] + diameterInPts;\r\n    const newRect = { x1: X1, y1: Y1, x2: X2, y2: Y2 };\r\n\r\n    annotation.setHeight(diameterInPts);\r\n    annotation.setWidth(diameterInPts);\r\n    annotation.resize(newRect);\r\n    setRadius(radius);\r\n    forceEllipseRedraw(annotation);\r\n    finishAnnotation();\r\n  };\r\n\r\n  const forceEllipseRedraw = (annotation) => {\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.redrawAnnotation(annotation);\r\n    annotationManager.trigger('annotationChanged', [[annotation], 'modify', []]);\r\n  };\r\n\r\n  const getMaxDiameterInPts = useCallback((annotation) => {\r\n    const currentPageNumber = core.getCurrentPage();\r\n    const documentWidth = core.getPageWidth(currentPageNumber);\r\n    const documentHeight = core.getPageHeight(currentPageNumber);\r\n    const startX = annotation['X'];\r\n    const startY = annotation['Y'];\r\n\r\n    const maxX = documentWidth - startX;\r\n    const maxY = documentHeight - startY;\r\n\r\n    return Math.min(maxX, maxY);\r\n  });\r\n\r\n  const validateDiameter = (event) => {\r\n    const radius = Math.abs(event.target.value);\r\n    const factor = annotation.Measure.axis[0].factor;\r\n    const radiusInPts = radius / factor;\r\n    const diameterInPts = radiusInPts * 2;\r\n    ensureDiameterIsWithinBounds(diameterInPts, annotation);\r\n    refreshRadius();\r\n  };\r\n\r\n  const ensureDiameterIsWithinBounds = useCallback((diameterInPts, annotation) => {\r\n    const maxDiameterInPts = getMaxDiameterInPts(annotation);\r\n\r\n    if (diameterInPts > maxDiameterInPts) {\r\n      const boundingRect = annotation.getRect();\r\n      const { x1, x2, y1, y2 } = boundingRect;\r\n      let width = annotation.Width;\r\n      let height = annotation.Height;\r\n      const currentPageNumber = core.getCurrentPage();\r\n      const documentWidth = core.getPageWidth(currentPageNumber);\r\n      const documentHeight = core.getPageHeight(currentPageNumber);\r\n\r\n      if (x2 > documentWidth) {\r\n        boundingRect['x2'] = documentWidth;\r\n        width = documentWidth - x1;\r\n      }\r\n      if (y2 > documentHeight) {\r\n        boundingRect['y2'] = documentHeight;\r\n        height = documentHeight - y1;\r\n      }\r\n\r\n      if (width < documentWidth) {\r\n        annotation.setWidth(width);\r\n      } else {\r\n        annotation.setWidth(documentWidth);\r\n      }\r\n      if (height < documentHeight) {\r\n        annotation.setHeight(height);\r\n      } else {\r\n        annotation.setHeight(documentHeight);\r\n      }\r\n      annotation.resize(boundingRect);\r\n      forceEllipseRedraw(annotation);\r\n    }\r\n  }, [getMaxDiameterInPts]);\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      ensureDiameterIsWithinBounds(annotation.getWidth(), annotation);\r\n    }\r\n  }, [annotation, ensureDiameterIsWithinBounds, isOpen]);\r\n\r\n  const [radius, setRadius] = useState(computeRadius());\r\n\r\n  return (\r\n    <div className=\"measurement__detail-container\">\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{t('option.shared.precision')}:</div>\r\n        {precisionFractions[data.precision] || data.precision}\r\n      </div>\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{t('option.measurementOverlay.area')}:</div>\r\n        <div className=\"distance-show\">{data.area}</div>\r\n      </div>\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{t('option.measurementOverlay.radius')}:</div>\r\n        {annotation ? (\r\n          <>\r\n            <input\r\n              autoFocus={!isMobileDevice}\r\n              className=\"scale-input\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              disabled={isReadOnly}\r\n              value={radius}\r\n              onChange={(event) => {\r\n                onChangeRadiusLength(event);\r\n                selectAnnotation();\r\n              }}\r\n              onBlur={(event) => validateDiameter(event)}\r\n              onKeyDown={(event) => {\r\n                if (event.key === 'Enter') {\r\n                  onChangeRadiusLength(event);\r\n                  deselectAnnot();\r\n                }\r\n              }}\r\n            />\r\n            {data.unit}\r\n          </>\r\n        ) : (\r\n          <div>0</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nEllipseMeasurementOverlay.propTypes = propTypes;\r\n\r\nexport default EllipseMeasurementOverlay;\r\n","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { mapAnnotationToKey, mapToolNameToKey, getDataWithKey } from 'constants/map';\r\nimport { measurementTypeTranslationMap } from 'constants/measurementTypes';\r\nimport { precisionFractions } from 'constants/measurementScale';\r\nimport getNumberOfDecimalPlaces from 'helpers/getNumberOfDecimalPlaces';\r\nimport Icon from 'components/Icon';\r\nimport LineMeasurementInput from 'components/MeasurementOverlay/LineMeasurementInput';\r\nimport EllipseMeasurementOverlay from 'components/MeasurementOverlay/EllipseMeasurementOverlay';\r\nimport getAngleInRadians from 'helpers/getAngleInRadians';\r\n\r\nimport './ScaleOverlay.scss';\r\n\r\nconst propTypes = {\r\n  annotation: PropTypes.object,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  selectedTool: PropTypes.object,\r\n};\r\n\r\nconst MeasurementDetail = ({ annotation, isOpen, selectedTool }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const data = useMemo(() => {\r\n    const key = annotation ? mapAnnotationToKey(annotation) : mapToolNameToKey(selectedTool.name);\r\n\r\n    return {\r\n      key,\r\n      icon: getDataWithKey(key).icon,\r\n      color: annotation ? annotation.Color.toHexString() : selectedTool?.defaults?.StrokeColor?.toHexString(),\r\n      contents: annotation ? annotation.getMeasurementTextWithScaleAndUnits?.() : 0,\r\n      precision: !annotation ? selectedTool?.defaults?.Precision : annotation.Precision,\r\n    };\r\n  });\r\n\r\n  const renderTitle = () => {\r\n    const { key, icon, color } = data;\r\n    const translationKey = measurementTypeTranslationMap[key];\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <Icon glyph={icon} color={color} className=\"icon\" />\r\n        <div>{t(translationKey)}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderValue = () => {\r\n    const { key, contents } = data;\r\n\r\n    const keyDisplayNameMap = {\r\n      distanceMeasurement: t('option.measurementOverlay.distance'),\r\n      perimeterMeasurement: t('option.measurementOverlay.perimeter'),\r\n      areaMeasurement: t('option.measurementOverlay.area'),\r\n      rectangularAreaMeasurement: t('option.measurementOverlay.area'),\r\n      cloudyRectangularAreaMeasurement: t('option.measurementOverlay.area'),\r\n    };\r\n\r\n    return (\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{keyDisplayNameMap[key]}:</div>\r\n        {contents}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderAngle = () => {\r\n    if (!annotation) {\r\n      return (\r\n        <div className=\"measurement__detail-item\">\r\n          <div className=\"measurement_list\">{t('option.measurementOverlay.angle')}:</div> 0&deg;\r\n        </div>\r\n      );\r\n    }\r\n    const { key } = data;\r\n    const getIPathAnnotationPts = (annotation) => {\r\n      const path = annotation.getPath();\r\n      const length = path.length;\r\n      return [path[length - 3], path[length - 2], path[length - 1]];\r\n    };\r\n    const keyPtMap = {\r\n      distanceMeasurement: ({ Start, End }) => [Start, End],\r\n      perimeterMeasurement: getIPathAnnotationPts,\r\n      areaMeasurement: getIPathAnnotationPts,\r\n      rectangularAreaMeasurement: getIPathAnnotationPts,\r\n      cloudyRectangularAreaMeasurement: getIPathAnnotationPts,\r\n      arcMeasurement: getIPathAnnotationPts,\r\n    };\r\n    const pts = keyPtMap[key](annotation).filter((pt) => !!pt);\r\n\r\n    let angle = getAngleInRadians(...pts);\r\n    if (angle) {\r\n      const decimalPlaces = getNumberOfDecimalPlaces(annotation.Precision);\r\n      angle = ((angle / Math.PI) * 180).toFixed(decimalPlaces);\r\n    }\r\n\r\n    if (key === 'arcMeasurement') {\r\n      angle = annotation.Angle.toFixed(2);\r\n    }\r\n\r\n    return (\r\n      angle !== undefined && (\r\n        <div className=\"measurement__detail-item\">\r\n          <div className=\"measurement_list\">{t('option.measurementOverlay.angle')}:</div>\r\n          {angle}&deg;\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  const renderLength = () => {\r\n    const length = annotation?.Length || 0;\r\n    return (\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{t('option.measurementOverlay.length')}</div> {length}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderRadius = () => {\r\n    const radius = annotation?.Radius || 0;\r\n    return (\r\n      <div className=\"measurement__detail-item\">\r\n        <div className=\"measurement_list\">{t('option.measurementOverlay.radius')}</div> {radius}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDetails = () => {\r\n    const { key, precision } = data;\r\n    if (key === 'ellipseMeasurement') {\r\n      return <EllipseMeasurementOverlay annotation={annotation} selectedTool={selectedTool} isOpen={isOpen} />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"measurement__detail-container\">\r\n        <div className=\"measurement__detail-item\">\r\n          <div className=\"measurement_list\">{t('option.shared.precision')}:</div>\r\n          {precisionFractions[precision] || precision}\r\n        </div>\r\n        {key === 'distanceMeasurement' && (\r\n          <LineMeasurementInput annotation={annotation} isOpen={isOpen} selectedTool={selectedTool} />\r\n        )}\r\n        {[\r\n          'rectangularAreaMeasurement',\r\n          'cloudyRectangularAreaMeasurement',\r\n          'perimeterMeasurement',\r\n          'areaMeasurement',\r\n        ].includes(key) && renderValue()}\r\n        {key === 'arcMeasurement' && renderLength()}\r\n        {key === 'arcMeasurement' && renderRadius()}\r\n        {!['rectangularAreaMeasurement', 'distanceMeasurement', 'cloudyRectangularAreaMeasurement'].includes(key) &&\r\n          renderAngle()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"MeasurementDetail\">\r\n      {renderTitle()}\r\n      {renderDetails()}\r\n    </div>\r\n  );\r\n};\r\n\r\nMeasurementDetail.propTypes = propTypes;\r\n\r\nexport default MeasurementDetail;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport selectors from 'selectors';\r\nimport Icon from 'components/Icon';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nconst CalibrationOverlayPropTypes = {\r\n  tempScale: PropTypes.string,\r\n  onCancelCalibrationMode: PropTypes.func,\r\n  onApplyCalibration: PropTypes.func\r\n};\r\n\r\nconst CalibrationOverlay = ({ tempScale, onCancelCalibrationMode, onApplyCalibration }) => {\r\n  const [t] = useTranslation();\r\n\r\n  const isCalibrationPopupOpen = useSelector((state) => selectors.isElementOpen(state, 'annotationPopup'));\r\n\r\n  const canApplyCalibration = isCalibrationPopupOpen && tempScale;\r\n\r\n  return (\r\n    <div className=\"scale-overlay-calibrate\">\r\n      <div className=\"scale-overlay-header\">\r\n        <Icon glyph=\"ic-calibrate\" className=\"scale-overlay-icon\" />\r\n        <div className=\"scale-overlay-title\">{t('option.measurement.scaleModal.calibrate')}</div>\r\n      </div>\r\n      <div className=\"scale-overlay-content\">\r\n        {!canApplyCalibration\r\n          ? t('option.measurement.scaleOverlay.selectTwoPoints')\r\n          : t('option.measurement.scaleOverlay.inputKnowDimension')}\r\n      </div>\r\n      <div className=\"divider\" />\r\n      <div className=\"scale-overlay-footer\">\r\n        <button\r\n          className=\"calibration-cancel\"\r\n          onMouseDown={onCancelCalibrationMode}\r\n        >\r\n          {t('action.cancel')}\r\n        </button>\r\n        <button\r\n          className=\"calibration-apply\"\r\n          disabled={!(isCalibrationPopupOpen && tempScale && (new Scale(tempScale).worldScale?.value > 0))}\r\n          data-element=\"calibrationApply\"\r\n          onMouseDown={onApplyCalibration}\r\n          onTouchStart={onApplyCalibration}\r\n        >\r\n          {t('action.apply')}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCalibrationOverlay.propTypes = CalibrationOverlayPropTypes;\r\n\r\nexport default CalibrationOverlay;","import ScaleHeader from './ScaleHeader';\r\nimport core from 'core';\r\nimport MeasurementDetail from './MeasurementDetail';\r\nimport PropTypes from 'prop-types';\r\nimport selectors from 'selectors';\r\nimport React, { useEffect, useState, useMemo, memo } from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport CalibrationOverlay from './CalibrationOverlay';\r\n\r\nimport './ScaleOverlay.scss';\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nconst propTypes = {\r\n  annotations: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectedTool: PropTypes.object,\r\n  updateIsCalibration: PropTypes.func.isRequired,\r\n  enableOrDisableToolElements: PropTypes.func.isRequired,\r\n  onScaleSelected: PropTypes.func.isRequired,\r\n  onCancelCalibrationMode: PropTypes.func.isRequired,\r\n  onApplyCalibration: PropTypes.func.isRequired,\r\n  onAddingNewScale: PropTypes.func.isRequired\r\n};\r\n\r\nconst ScaleOverlay = ({\r\n  annotations,\r\n  selectedTool,\r\n  updateIsCalibration,\r\n  enableOrDisableToolElements,\r\n  onScaleSelected,\r\n  onCancelCalibrationMode,\r\n  onApplyCalibration,\r\n  onAddingNewScale,\r\n  forceUpdate,\r\n}) => {\r\n  const [\r\n    { isCalibration, tempScale, previousToolName = 'AnnotationCreateDistanceMeasurement', isFractionalUnit },\r\n    activeToolName\r\n  ] = useSelector((state) => [\r\n    selectors.getCalibrationInfo(state),\r\n    selectors.getActiveToolName(state)\r\n  ], shallowEqual);\r\n  const [scales, setScales] = useState(core.getScales());\r\n  const shouldShowMeasurementDetail = !!Object.keys(scales).length && !(!selectedTool && (!annotations.length || annotations.length > 1));\r\n\r\n  useEffect(() => {\r\n    forceUpdate();\r\n  }, [scales]);\r\n\r\n  useEffect(() => {\r\n    const onScaleUpdated = (newScales) => {\r\n      setScales(newScales);\r\n    };\r\n    const updateScales = () => {\r\n      setScales(core.getScales());\r\n    };\r\n\r\n    const onCreateAnnotationWithNoScale = () => {\r\n      onAddingNewScale();\r\n    };\r\n    core.addEventListener('scaleUpdated', onScaleUpdated);\r\n    core.addEventListener('createAnnotationWithNoScale', onCreateAnnotationWithNoScale);\r\n    core.addEventListener('annotationsLoaded', updateScales);\r\n    core.addEventListener('annotationChanged', updateScales);\r\n\r\n    return () => {\r\n      core.removeEventListener('scaleUpdated', onScaleUpdated);\r\n      core.removeEventListener('createAnnotationWithNoScale', onCreateAnnotationWithNoScale);\r\n      core.removeEventListener('annotationsLoaded', updateScales);\r\n      core.removeEventListener('annotationChanged', updateScales);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeToolName === 'AnnotationCreateCalibrationMeasurement') {\r\n      !isCalibration && updateIsCalibration(true);\r\n      enableOrDisableToolElements(true);\r\n    } else {\r\n      updateIsCalibration(false);\r\n      enableOrDisableToolElements(false);\r\n    }\r\n  }, [activeToolName, updateIsCalibration, enableOrDisableToolElements]);\r\n\r\n  const selectedScales = useMemo(() => {\r\n    const scales = new Set();\r\n    [...annotations, selectedTool].forEach((measurementItem) => {\r\n      const scale = measurementItem?.Measure?.scale;\r\n      if (scale && !scales.has(scale)) {\r\n        scales.add(scale);\r\n      }\r\n    });\r\n    return [...scales];\r\n  }, [annotations, selectedTool, scales]);\r\n\r\n  const totalScales = Object.keys(scales).map((scale) => new Scale(scale));\r\n\r\n  return isCalibration ? (\r\n    <CalibrationOverlay\r\n      tempScale={tempScale}\r\n      onCancelCalibrationMode={() => onCancelCalibrationMode(previousToolName)}\r\n      onApplyCalibration={() => onApplyCalibration(previousToolName, tempScale, isFractionalUnit)}\r\n      previousToolName={previousToolName}\r\n    />\r\n  ) : (\r\n    <>\r\n      <ScaleHeader\r\n        scales={totalScales}\r\n        selectedScales={selectedScales}\r\n        onScaleSelected={onScaleSelected}\r\n        onAddingNewScale={onAddingNewScale}\r\n      />\r\n      {shouldShowMeasurementDetail && (\r\n        <MeasurementDetail\r\n          annotation={annotations.length > 1 ? null : annotations[0] || null}\r\n          selectedTool={selectedTool}\r\n          isOpen\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nScaleOverlay.propTypes = propTypes;\r\n\r\nexport default memo(ScaleOverlay);\r\n","import actions from 'actions';\r\nimport ScaleOverlay from './ScaleOverlay';\r\nimport classNames from 'classnames';\r\nimport core from 'core';\r\nimport Draggable from 'react-draggable';\r\nimport selectors from 'selectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport React, { useState, useRef, useCallback, useReducer, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport DataElements from 'constants/dataElement';\r\n\r\nimport './ScaleOverlay.scss';\r\n\r\nconst Scale = window.Core.Scale;\r\n\r\nconst measurementDataElements = [\r\n  'distanceToolGroupButton',\r\n  'arcMeasurementToolGroupButton',\r\n  'perimeterToolGroupButton',\r\n  'areaToolGroupButton',\r\n  'rectangleAreaToolGroupButton',\r\n  'ellipseAreaToolGroupButton',\r\n  'countToolGroupButton',\r\n  'cloudyRectangleAreaToolGroupButton',\r\n  'arcToolGroupButton'\r\n];\r\n\r\nconst DEFAULT_CONTAINER_TOP_OFFSET = 85;\r\nconst DEFAULT_CONTAINER_RIGHT_OFFSET = 35;\r\nconst DEFAULT_WIDTH_RATIO = 0.666;\r\nconst DEFAULT_DISTANCE = 10;\r\n\r\nconst ScaleOverlayContainer = ({ annotations, selectedTool }) => {\r\n  const dispatch = useDispatch();\r\n  const [t] = useTranslation();\r\n  const [\r\n    isDisabled,\r\n    isOpen,\r\n    initialPosition,\r\n  ] = useSelector(\r\n    (state) => [\r\n      selectors.isElementDisabled(state, DataElements.SCALE_OVERLAY_CONTAINER),\r\n      selectors.isElementOpen(state, DataElements.SCALE_OVERLAY_CONTAINER),\r\n      selectors.getScaleOverlayPosition(state),\r\n    ],\r\n  );\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [, forceUpdate] = useReducer((x) => x + 1, 0, () => 0);\r\n\r\n  const [\r\n    documentContainerWidth,\r\n    documentContainerHeight\r\n  ] = useSelector((state) => [\r\n    selectors.getDocumentContainerWidth(state),\r\n    selectors.getDocumentContainerHeight(state)\r\n  ]);\r\n\r\n  const containerRef = useRef(null);\r\n\r\n  const documentElement = core.getViewerElement();\r\n  const documentContainerElement = core.getScrollViewElement();\r\n\r\n  const calculateStyle = () => {\r\n    const initialPositionParts = initialPosition.split('-');\r\n    const offset = { left: 0, top: 0, };\r\n    if (initialPositionParts[0] === 'top') {\r\n      offset.top = documentElement?.offsetTop + DEFAULT_DISTANCE || DEFAULT_CONTAINER_TOP_OFFSET;\r\n    } else {\r\n      let containerHeight = 400;\r\n      if (containerRef?.current) {\r\n        containerHeight = containerRef.current.getBoundingClientRect().height;\r\n      }\r\n      offset.top = documentContainerHeight + documentContainerElement?.offsetTop - DEFAULT_DISTANCE - containerHeight || DEFAULT_CONTAINER_TOP_OFFSET;\r\n    }\r\n\r\n    if (initialPositionParts[1] === 'right') {\r\n      offset.left = documentContainerWidth * DEFAULT_WIDTH_RATIO;\r\n      if (documentElement && containerRef?.current) {\r\n        offset.left = Math.min(\r\n          documentElement?.offsetLeft + documentElement?.offsetWidth + DEFAULT_DISTANCE || offset.left,\r\n          documentContainerWidth - containerRef.current.getBoundingClientRect().width - DEFAULT_DISTANCE,\r\n        );\r\n      }\r\n    } else {\r\n      if (documentElement && containerRef?.current) {\r\n        const containerWidth = containerRef.current.getBoundingClientRect().width;\r\n        offset.left = documentElement?.offsetLeft - DEFAULT_DISTANCE - containerWidth || DEFAULT_DISTANCE;\r\n        if (documentContainerElement && offset.left < documentContainerElement.offsetLeft) {\r\n          offset.left = documentContainerElement.offsetLeft + DEFAULT_DISTANCE;\r\n        }\r\n      }\r\n      if (!offset.left || isNaN(offset.left) || offset.left < 0) {\r\n        offset.left = DEFAULT_DISTANCE;\r\n      }\r\n    }\r\n    return offset;\r\n  };\r\n  const style = calculateStyle();\r\n\r\n  useEffect(() => {\r\n    setPosition({ x: 0, y: 0 });\r\n  }, [initialPosition]);\r\n\r\n  const containerBounds = () => {\r\n    const initialPositionParts = initialPosition.split('-');\r\n    const bounds = { top: 0, bottom: 0, left: 0, right: 0 };\r\n    if (initialPositionParts[0] === 'top') {\r\n      bounds.top = 0;\r\n      bounds.bottom = documentContainerHeight - (DEFAULT_DISTANCE * 2);\r\n      if (containerRef.current) {\r\n        bounds.bottom -= containerRef.current.getBoundingClientRect().height;\r\n      } else {\r\n        bounds.bottom -= DEFAULT_CONTAINER_TOP_OFFSET;\r\n      }\r\n    } else {\r\n      bounds.top = -documentContainerHeight + (DEFAULT_DISTANCE * 2);\r\n      if (containerRef.current) {\r\n        bounds.top += containerRef.current.getBoundingClientRect().height;\r\n      } else {\r\n        bounds.top += DEFAULT_CONTAINER_TOP_OFFSET;\r\n      }\r\n      bounds.bottom = 0;\r\n    }\r\n\r\n    if (initialPositionParts[1] === 'right') {\r\n      bounds.left = -documentContainerWidth;\r\n      bounds.right = documentContainerWidth / 3;\r\n      if (style) {\r\n        bounds.right = documentContainerWidth - style['left'];\r\n      }\r\n    } else {\r\n      bounds.left = documentContainerElement?.offsetLeft;\r\n      if (style) {\r\n        bounds.left = documentContainerElement?.offsetLeft - style['left'] + DEFAULT_DISTANCE;\r\n      }\r\n      bounds.right = documentContainerWidth - DEFAULT_DISTANCE - DEFAULT_CONTAINER_RIGHT_OFFSET;\r\n      if (style) {\r\n        bounds.right -= style['left'];\r\n      }\r\n    }\r\n    return bounds;\r\n  };\r\n\r\n  const syncDraggablePosition = (e, { x, y }) => {\r\n    setPosition({\r\n      x,\r\n      y,\r\n    });\r\n  };\r\n\r\n  const updateIsCalibration = useCallback((isCalibration) => {\r\n    dispatch(actions.updateCalibrationInfo({ isCalibration }));\r\n  }, []);\r\n\r\n  const enableOrDisableToolElements = useCallback((disabled) => {\r\n    measurementDataElements.forEach((dataElement) => {\r\n      dispatch(\r\n        actions.setCustomElementOverrides(dataElement, {\r\n          disabled,\r\n        }),\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  const setSelectedScale = (scale) => dispatch(actions.setSelectedScale(scale));\r\n\r\n  const openScaleModal = useCallback((scale) => {\r\n    scale && setSelectedScale(new Scale(scale));\r\n    dispatch(actions.openElements([DataElements.SCALE_MODAL]));\r\n    dispatch(actions.setIsAddingNewScale());\r\n  }, []);\r\n\r\n  const onScaleSelected = useCallback((selectedScales, scale) => {\r\n    const newScale = new Scale(scale);\r\n    if (selectedScales.length === 1 && selectedScales.includes(scale)) {\r\n      openScaleModal(scale);\r\n    } else {\r\n      const applyTo = [...annotations, selectedTool];\r\n      const scaleToDelete = core.getDocumentViewer().getMeasurementManager().getOldScalesToDeleteAfterApplying({ scale: newScale, applyTo })[0];\r\n      const createAndApplyScale = () => {\r\n        core.createAndApplyScale(\r\n          newScale,\r\n          [...annotations, selectedTool]\r\n        );\r\n      };\r\n      if (scaleToDelete) {\r\n        confirmScaleToDelete(scaleToDelete, createAndApplyScale);\r\n      } else {\r\n        createAndApplyScale();\r\n      }\r\n    }\r\n  }, [annotations, selectedTool]);\r\n\r\n  const confirmScaleToDelete = (scaleToDelete, createAndApplyScale) => {\r\n    const message = (\r\n      <div>\r\n        <p>\r\n          <span>\r\n            {t('option.measurement.deleteScaleModal.ifChangeScale')}\r\n            <b>{scaleToDelete}</b>\r\n            {t('option.measurement.deleteScaleModal.notUsedWillDelete')}\r\n          </span>\r\n        </p>\r\n        <p>\r\n          <span>\r\n            {t('option.measurement.deleteScaleModal.ifToContinue')}\r\n          </span>\r\n        </p>\r\n      </div>\r\n    );\r\n    const title = `${t('option.measurement.deleteScaleModal.deleteScale')} ${scaleToDelete}`;\r\n    const confirmBtnText = t('action.confirm');\r\n\r\n    const warning = {\r\n      message,\r\n      title,\r\n      confirmBtnText,\r\n      onConfirm: () => createAndApplyScale()\r\n    };\r\n    dispatch(actions.showWarningMessage(warning));\r\n  };\r\n\r\n  const onCancelCalibrationMode = useCallback((previousToolName) => {\r\n    core.setToolMode(previousToolName);\r\n    updateIsCalibration(false);\r\n    dispatch(actions.setIsElementHidden(DataElements.SCALE_MODAL, false));\r\n  }, []);\r\n\r\n  const onApplyCalibration = useCallback((previousToolName, tempScale, isFractionalUnit) => {\r\n    dispatch(actions.updateCalibrationInfo({ isCalibration: false, tempScale, isFractionalUnit }));\r\n    dispatch(actions.setIsElementHidden(DataElements.SCALE_MODAL, false));\r\n    core.setToolMode(previousToolName);\r\n    core.deleteAnnotations([annotations[0]]);\r\n  }, [annotations]);\r\n\r\n  const onAddingNewScale = useCallback(() => {\r\n    openScaleModal();\r\n    dispatch(actions.setIsAddingNewScale(true));\r\n  }, []);\r\n\r\n  return !isDisabled && (\r\n    <Draggable\r\n      position={position}\r\n      bounds={containerBounds()}\r\n      onDrag={syncDraggablePosition}\r\n      onStop={syncDraggablePosition}\r\n      cancel={'.scale-overlay-selector, .add-new-scale'}\r\n    >\r\n      <div\r\n        className={classNames({\r\n          Overlay: true,\r\n          ScaleOverlay: true,\r\n          open: isOpen,\r\n          closed: !isOpen,\r\n        })}\r\n        data-element={DataElements.SCALE_OVERLAY_CONTAINER}\r\n        style={style}\r\n        ref={containerRef}\r\n      >\r\n        <ScaleOverlay\r\n          annotations={annotations}\r\n          selectedTool={selectedTool}\r\n          updateIsCalibration={updateIsCalibration}\r\n          enableOrDisableToolElements={enableOrDisableToolElements}\r\n          onScaleSelected={onScaleSelected}\r\n          onCancelCalibrationMode={onCancelCalibrationMode}\r\n          onApplyCalibration={onApplyCalibration}\r\n          onAddingNewScale={onAddingNewScale}\r\n          forceUpdate={forceUpdate}\r\n        />\r\n      </div>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default ScaleOverlayContainer;\r\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ScaleOverlay{position:absolute;z-index:95;border-radius:4px;box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background)}.open.ScaleOverlay{visibility:visible}.closed.ScaleOverlay{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.ScaleOverlay{flex-direction:column;font-size:.81rem;padding:.375rem .375rem .375rem 1rem}.ScaleOverlay .divider{width:calc(100% + 1.375rem);height:1px;margin-left:-1rem;background:var(--gray-5);margin-top:12px}.ScaleOverlay .scale-overlay-header{position:relative;display:flex;flex-direction:row;justify-content:left;font-weight:400;align-items:center;padding-right:.75rem}.ScaleOverlay .scale-overlay-header .scale-overlay-title{margin-left:.8rem;color:var(--text-color);font-weight:700;line-height:1rem}.ScaleOverlay .scale-overlay-header .add-new-scale{margin-left:1.3rem;min-height:2rem;background-color:transparent;color:#3183c8;font-weight:400;font-size:.8rem;line-height:1rem;border-radius:.3rem;border:1px solid #3183c8;cursor:pointer!important}.ScaleOverlay .scale-overlay-header .scale-overlay-icon{width:1rem;height:1.3rem}.ScaleOverlay .scale-overlay-header .scale-overlay-selector{margin-left:1.3rem;position:relative}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-overlay-selection{height:2rem;min-width:9rem;position:relative;background-color:transparent;border:1px solid var(--border);border-radius:.3rem;line-height:2rem;padding:0 32px 0 .5rem;color:var(--text-color);font-weight:400;font-size:.8rem;text-align:left;text-overflow:ellipsis;white-space:nowrap}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-overlay-arrow{position:absolute;top:50%;right:8px;transform:translateY(-50%);display:flex;justify-content:center;width:16px;height:16px;padding:2px;color:var(--text-color)}.ScaleOverlay .scale-overlay-header .scale-overlay-selector ul{margin:0;list-style-type:none;position:absolute;min-width:10rem;left:0;top:0;text-align:left;letter-spacing:0;display:none;border-radius:4px;pointer-events:all;z-index:1000;background-color:var(--component-background);box-shadow:0 0 4px var(--gray-7);padding-left:0}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li{display:block;line-height:2rem;height:2rem;position:relative;font-weight:400;font-size:.8rem;padding-left:.5rem;padding-right:32px;max-width:100%}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li :hover{cursor:pointer}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li:not(:last-child):not(:first-child) .options:hover{background-color:var(--scale-overlay-item-hover)}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li:last-child{padding-top:.5rem;padding-bottom:.5rem;height:-moz-fit-content;height:fit-content}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li:last-child :hover{cursor:default}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .option-selected{color:#3183c8}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .delete{position:absolute;top:50%;right:8px;width:16px;height:16px;transform:translateY(-50%);border:none;background-color:transparent;padding:0;border-radius:2px;display:flex;align-items:center;justify-content:center}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .delete .Icon{width:11px;height:11px;display:flex}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .delete:hover{background-color:var(--scale-overlay-item-hover)}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .delete:disabled{background-color:transparent;cursor:not-allowed}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .add-new-scale{margin-left:0;width:100%}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .add-new-scale :hover{cursor:pointer}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .options{border:none;background-color:transparent;padding:0;text-align:left;display:flex;align-items:center;justify-content:space-between;height:100%;z-index:1}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-value{margin-right:1px}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-overlay-list{display:block;pointer-events:all;transform:translateY(0)}.ScaleOverlay .scale-overlay-content{width:192px;min-height:32px;font-weight:400;font-size:13px;line-height:16px;margin-top:16px}.ScaleOverlay .scale-overlay-calibrate{padding-top:20px}.ScaleOverlay .scale-overlay-footer{display:flex;flex-direction:row;justify-content:space-between;width:220px;height:49px;align-items:center}.ScaleOverlay .scale-overlay-footer .calibration-cancel{padding:0;background-color:transparent;color:var(--secondary-button-text);display:flex;align-items:center;justify-content:center;cursor:pointer;border:none;font-size:13px}:host(:not([data-tabbing=true])) .ScaleOverlay .scale-overlay-footer .calibration-cancel,html:not([data-tabbing=true]) .ScaleOverlay .scale-overlay-footer .calibration-cancel{outline:none}.ScaleOverlay .scale-overlay-footer .calibration-cancel:enabled:hover{color:var(--secondary-button-hover)}.ScaleOverlay .scale-overlay-footer .calibration-cancel:disabled{opacity:.5}.ScaleOverlay .scale-overlay-footer .calibration-apply{border:none;background-color:transparent;background:var(--primary-button);border-radius:4px;padding:0 8px;height:32px;width:72px;display:flex;align-items:center;justify-content:center;position:relative;color:var(--primary-button-text);cursor:pointer}:host(:not([data-tabbing=true])) .ScaleOverlay .scale-overlay-footer .calibration-apply,html:not([data-tabbing=true]) .ScaleOverlay .scale-overlay-footer .calibration-apply{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleOverlay .scale-overlay-footer .calibration-apply{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleOverlay .scale-overlay-footer .calibration-apply{font-size:13px}}.ScaleOverlay .scale-overlay-footer .calibration-apply:enabled:hover{background:var(--primary-button-hover)}.ScaleOverlay .scale-overlay-footer .calibration-apply:disabled{opacity:.5}.ScaleOverlay .MeasurementDetail{word-wrap:break-word;flex-wrap:wrap;font-weight:400;font-size:.81rem;line-height:1rem;margin-bottom:1rem}.ScaleOverlay .MeasurementDetail .header{display:flex;justify-content:left;align-items:center;width:100%;margin-top:.75rem;margin-bottom:.75rem;font-weight:700;font-size:.81rem}.ScaleOverlay .MeasurementDetail .header .icon{width:1.5rem;height:1.5rem;margin-right:.67rem}.ScaleOverlay .MeasurementDetail .scale-input{width:45px}.ScaleOverlay .MeasurementDetail .measurement__detail-container{margin-left:2.17rem}.ScaleOverlay .MeasurementDetail .measurement__detail-container .measurement__detail-item{display:flex;height:1.5rem;align-items:center}.ScaleOverlay .MeasurementDetail .distance_input{display:flex;margin-top:.5rem}.ScaleOverlay .MeasurementDetail .distance_input .distance-show{margin-right:.5rem}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleOverlay .MeasurementDetail .distance_input .distance-show{width:79px;height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleOverlay .MeasurementDetail .distance_input .distance-show{width:79px;height:32px}}.ScaleOverlay .MeasurementDetail .angle_input,.ScaleOverlay .MeasurementDetail .measurement__deltas--X,.ScaleOverlay .MeasurementDetail .measurement__deltas--Y{display:flex;margin-top:.5rem}.ScaleOverlay .MeasurementDetail .measurement_list{width:5rem;margin-right:.5rem}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ScaleOverlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["propTypes","scales","PropTypes","isRequired","selectedScales","onScaleSelected","onAddingNewScale","Scale","window","Core","ScaleSelector","_ref","_ref$scales","_ref$selectedScales","t","_slicedToArray","useTranslation","dispatch","useDispatch","isMultipleScalesMode","useSelector","state","selectors","getIsMultipleScalesMode","isMultipleScales","length","renderScale","scale","precision","core","getScalePrecision","pageScaleStr","getFormattedValue","pageScale","value","unit","worldScaleStr","worldScale","scaleDisplay","concat","React","title","selectedScale","_useState2","useState","isDropDownOpen","setOpenDropDown","selectorRef","useRef","useOnClickOutside","DataElementWrapper","className","dataElement","tabIndex","onClick","prevValue","ref","Icon","glyph","classNames","map","key","toString","onMouseDown","e","preventDefault","stopPropagation","deleteScale","scaleInfo","getScales","measurements","relatedPages","Set","forEach","measurementItem","Annotations","Annotation","add","push","measurementsNum","pages","getScaleInfo","warning","message","join","confirmBtnText","onConfirm","actions","showWarningMessage","openScaleDeletionModal","disabled","options","includes","ScaleHeader","measurementTypeTranslationMap","distanceMeasurement","perimeterMeasurement","areaMeasurement","rectangularAreaMeasurement","cloudyRectangularAreaMeasurement","ellipseMeasurement","arcMeasurement","split","pt1","pt2","pt3","angle","AB","Math","sqrt","pow","x","y","BC","AC","acos","atan2","abs","PI","unitMap","LineMeasurementInput","annotation","isOpen","selectedTool","_selectedTool$Measure","_annotation$getMeasur","isReadOnly","isDocumentReadOnly","factor","Measure","axis","DisplayUnits","getLineLength","toFixed","setLength","_useState4","toggleDistanceInput","setDistanceInputToggle","_useState6","toggleAngleInput","setAngleToggle","useEffect","onAnnotationChanged","setAngle","computeAngle","addEventListener","removeEventListener","onInputChanged","event","target","validateLineLength","finishAnnotation","getTool","finish","selectAnnotation","getAnnotationManager","deselectAnnotation","Precision","ensureLineIsWithinBounds","useCallback","lengthInPts","value1","value2","maxLengthInPts","getMaxLineLengthInPts","setLineLength","min","forceLineRedraw","getAnnotationUnit","_annotation$DisplayUn","annotUnit","annotationManager","drawAnnotations","PageNumber","trigger","maxX","maxY","currentPageNumber","getCurrentPage","documentWidth","getPageWidth","documentHeight","getPageHeight","angleInDegrees","getAngle","startPoint","getStartPoint","startX","startY","maxLenX","cos","maxLenY","sin","onAngleChange","angleInRadians","start","Start","endX","endY","setEndPoint","adjustRect","setLineAngle","_useState8","type","autoFocus","isMobileDevice","onChange","onBlur","onKeyDown","getMeasurementTextWithScaleAndUnits","call","max","getAngleInRadians","End","deltaX","deltaY","renderDeltas","props","propName","componentName","getContents","Error","defaults","EllipseMeasurementOverlay","_selectedTool$default","_selectedTool$default2","area","data","getFormattedUnit","refreshRadius","setRadius","computeRadius","onAnnotationDeselected","annotations","action","ensureDiameterIsWithinBounds","getWidth","decimalPlaces","getNumberOfDecimalPlaces","Width","onChangeRadiusLength","eventValue","radius","diameterInPts","rect","getRect","newRect","x1","y1","x2","y2","setHeight","setWidth","resize","forceEllipseRedraw","redrawAnnotation","getMaxDiameterInPts","boundingRect","width","height","Height","precisionFractions","validateDiameter","MeasurementDetail","icon","color","translationKey","useMemo","_selectedTool$default3","mapAnnotationToKey","mapToolNameToKey","name","getDataWithKey","Color","toHexString","StrokeColor","contents","keyDisplayNameMap","renderValue","Length","Radius","getIPathAnnotationPts","path","getPath","pts","_ref2","filter","pt","apply","Angle","undefined","renderAngle","renderDetails","CalibrationOverlayPropTypes","tempScale","onCancelCalibrationMode","onApplyCalibration","CalibrationOverlay","_Scale$worldScale","isCalibrationPopupOpen","isElementOpen","canApplyCalibration","onTouchStart","updateIsCalibration","enableOrDisableToolElements","ScaleOverlay","forceUpdate","_useSelector2","getCalibrationInfo","getActiveToolName","shallowEqual","_useSelector2$","isCalibration","_useSelector2$$previo","previousToolName","isFractionalUnit","activeToolName","setScales","shouldShowMeasurementDetail","Object","keys","onScaleUpdated","newScales","updateScales","onCreateAnnotationWithNoScale","_toConsumableArray","_measurementItem$Meas","has","totalScales","memo","measurementDataElements","DEFAULT_DISTANCE","isElementDisabled","DataElements","SCALE_OVERLAY_CONTAINER","getScaleOverlayPosition","isDisabled","initialPosition","position","setPosition","useReducer","_useSelector4","getDocumentContainerWidth","getDocumentContainerHeight","documentContainerWidth","documentContainerHeight","containerRef","documentElement","getViewerElement","documentContainerElement","getScrollViewElement","style","initialPositionParts","offset","left","top","offsetTop","containerHeight","current","getBoundingClientRect","offsetLeft","offsetWidth","containerWidth","isNaN","calculateStyle","bounds","syncDraggablePosition","updateCalibrationInfo","setCustomElementOverrides","openScaleModal","setSelectedScale","openElements","SCALE_MODAL","setIsAddingNewScale","newScale","applyTo","scaleToDelete","getDocumentViewer","getMeasurementManager","getOldScalesToDeleteAfterApplying","createAndApplyScale","confirmScaleToDelete","setToolMode","setIsElementHidden","deleteAnnotations","Draggable","bottom","right","onDrag","onStop","cancel","Overlay","open","closed","exports","___CSS_LOADER_API_IMPORT___","module","id","locals","api","content","__esModule","default","styleTag","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","tagName","root","elements","querySelectorAll","el","shadowRoot","clonedStyleTags","i","webComponent","onload","styleNode","innerHTML","cloneNode"],"sourceRoot":""}
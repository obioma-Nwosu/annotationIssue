{"version":3,"file":"chunks/5775.chunk.js","mappings":"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","sources":["webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/createClass.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/extends.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/inherits.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/interopRequireWildcard.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://webviewer-ui/./node_modules/@babel/runtime/helpers/typeof.js","webpack://webviewer-ui/./node_modules/lodash.debounce/index.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/CellMeasurer/index.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/CellMeasurer/types.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/Grid/Grid.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/Grid/defaultCellRangeRenderer.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/Grid/index.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/Grid/types.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/Grid/utils/maxElementSize.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/List/List.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/List/index.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/List/types.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/utils/animationFrame.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/utils/createCallbackMemoizer.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/commonjs/utils/requestAnimationTimeout.js"],"sourcesContent":["function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_child\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || (0, _reactDom.findDOMNode)(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n  return CellMeasurer;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof _types.bpfrpt_proptype_CellMeasureCache === \"function\" ? _types.bpfrpt_proptype_CellMeasureCache.isRequired ? _types.bpfrpt_proptype_CellMeasureCache.isRequired : _types.bpfrpt_proptype_CellMeasureCache : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].node]).isRequired,\n  \"columnIndex\": _propTypes[\"default\"].number,\n  \"index\": _propTypes[\"default\"].number,\n  \"parent\": _propTypes[\"default\"].shape({\n    invalidateCellSizeAfterRender: _propTypes[\"default\"].func,\n    recomputeGridSize: _propTypes[\"default\"].func\n  }).isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number\n}), _temp); // Used for DEV mode warning check\n\nexports[\"default\"] = CellMeasurer;\n(0, _defineProperty2[\"default\"])(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"./types\");\n\nvar DEFAULT_HEIGHT = 30;\nexports.DEFAULT_HEIGHT = DEFAULT_HEIGHT;\nvar DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\nexports.DEFAULT_WIDTH = DEFAULT_WIDTH;\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCache);\n    (0, _defineProperty2[\"default\"])(this, \"_cellHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_cellWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_columnWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_rowHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_defaultHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_defaultWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_keyMapper\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n  return CellMeasurerCache;\n}();\n\nexports[\"default\"] = CellMeasurerCache;\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"CellMeasurer\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"CellMeasurerCache\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurerCache[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _CellMeasurer = _interopRequireDefault(require(\"./CellMeasurer\"));\n\nvar _CellMeasurerCache = _interopRequireDefault(require(\"./CellMeasurerCache\"));\n\nvar _default = _CellMeasurer[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_CellMeasureCache = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellMeasureCache = process.env.NODE_ENV === 'production' ? null : {\n  \"hasFixedWidth\": _propTypes[\"default\"].func.isRequired,\n  \"hasFixedHeight\": _propTypes[\"default\"].func.isRequired,\n  \"has\": _propTypes[\"default\"].func.isRequired,\n  \"set\": _propTypes[\"default\"].func.isRequired,\n  \"getHeight\": _propTypes[\"default\"].func.isRequired,\n  \"getWidth\": _propTypes[\"default\"].func.isRequired\n};\nexports.bpfrpt_proptype_CellMeasureCache = bpfrpt_proptype_CellMeasureCache;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _calculateSizeAndPositionDataAndUpdateScrollOffset = _interopRequireDefault(require(\"./utils/calculateSizeAndPositionDataAndUpdateScrollOffset\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _createCallbackMemoizer = _interopRequireDefault(require(\"../utils/createCallbackMemoizer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireWildcard(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _updateScrollIndexHelper = _interopRequireDefault(require(\"./utils/updateScrollIndexHelper\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/scrollbarSize\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _requestAnimationTimeout = require(\"../utils/requestAnimationTimeout\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nvar DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nexports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = DEFAULT_SCROLLING_RESET_TIME_INTERVAL;\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Grid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Grid).call(this, props));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onGridRenderedMemoizer\", (0, _createCallbackMemoizer[\"default\"])());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollMemoizer\", (0, _createCallbackMemoizer[\"default\"])(false));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollLeftFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollTopFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_horizontalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_verticalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollbarPresenceChanged\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollingContainer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_childrenToDisplay\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollTop\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollLeft\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_disablePointerEventsTimeoutId\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_styleCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n    var columnSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  (0, _createClass2[\"default\"])(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", (0, _extends2[\"default\"])({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: (0, _clsx[\"default\"])('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = (0, _requestAnimationTimeout.requestAnimationTimeout)(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n  return Grid;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": _propTypes[\"default\"].string.isRequired,\n  \"aria-readonly\": _propTypes[\"default\"].bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRenderer === \"function\" ? _types.bpfrpt_proptype_CellRenderer.isRequired ? _types.bpfrpt_proptype_CellRenderer.isRequired : _types.bpfrpt_proptype_CellRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRangeRenderer === \"function\" ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired : _types.bpfrpt_proptype_CellRangeRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": _propTypes[\"default\"].object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": _propTypes[\"default\"].string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": _propTypes[\"default\"].object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": _propTypes[\"default\"].number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": _propTypes[\"default\"].string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": _propTypes[\"default\"].bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof _types.bpfrpt_proptype_NoContentRenderer === \"function\" ? _types.bpfrpt_proptype_NoContentRenderer.isRequired ? _types.bpfrpt_proptype_NoContentRenderer.isRequired : _types.bpfrpt_proptype_NoContentRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": _propTypes[\"default\"].func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof _types.bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _types.bpfrpt_proptype_OverscanIndicesGetter : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": _propTypes[\"default\"].string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": _propTypes[\"default\"].number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": _propTypes[\"default\"].number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof _types.bpfrpt_proptype_Alignment === \"function\" ? _types.bpfrpt_proptype_Alignment.isRequired ? _types.bpfrpt_proptype_Alignment.isRequired : _types.bpfrpt_proptype_Alignment : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": _propTypes[\"default\"].number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": _propTypes[\"default\"].number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": _propTypes[\"default\"].number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": _propTypes[\"default\"].number.isRequired\n}), _temp);\n(0, _defineProperty2[\"default\"])(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: _defaultCellRangeRenderer[\"default\"],\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: _scrollbarSize[\"default\"],\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: _defaultOverscanIndicesGetter[\"default\"],\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n(0, _reactLifecyclesCompat.polyfill)(Grid);\nvar _default = Grid;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultCellRangeRenderer;\n\nvar _types = require(\"./types\");\n\n/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nfunction defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Grid\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"accessibilityOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _accessibilityOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultCellRangeRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultCellRangeRenderer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_NoContentRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_NoContentRenderer;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Alignment\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Alignment;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellPosition\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellPosition;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellSize\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellSize;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_OverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_OverscanIndicesGetter;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_RenderedSection\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_RenderedSection;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellRendererParams\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellRendererParams;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Scroll\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Scroll;\n  }\n});\n\nvar _Grid = _interopRequireDefault(require(\"./Grid\"));\n\nvar _accessibilityOverscanIndicesGetter = _interopRequireDefault(require(\"./accessibilityOverscanIndicesGetter\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireDefault(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _types = require(\"./types\");","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_VisibleCellRange = exports.bpfrpt_proptype_Alignment = exports.bpfrpt_proptype_OverscanIndicesGetter = exports.bpfrpt_proptype_OverscanIndices = exports.bpfrpt_proptype_OverscanIndicesGetterParams = exports.bpfrpt_proptype_RenderedSection = exports.bpfrpt_proptype_ScrollbarPresenceChange = exports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_NoContentRenderer = exports.bpfrpt_proptype_CellSize = exports.bpfrpt_proptype_CellSizeGetter = exports.bpfrpt_proptype_CellRangeRenderer = exports.bpfrpt_proptype_CellRangeRendererParams = exports.bpfrpt_proptype_StyleCache = exports.bpfrpt_proptype_CellCache = exports.bpfrpt_proptype_CellRenderer = exports.bpfrpt_proptype_CellRendererParams = exports.bpfrpt_proptype_CellPosition = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_CellPosition = bpfrpt_proptype_CellPosition;\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isVisible\": _propTypes[\"default\"].bool.isRequired,\n  \"key\": _propTypes[\"default\"].string.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired,\n  \"style\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRendererParams = bpfrpt_proptype_CellRendererParams;\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRenderer = bpfrpt_proptype_CellRenderer;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired);\nexports.bpfrpt_proptype_CellCache = bpfrpt_proptype_CellCache;\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired);\nexports.bpfrpt_proptype_StyleCache = bpfrpt_proptype_StyleCache;\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired).isRequired,\n  \"cellRenderer\": _propTypes[\"default\"].func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n  \"horizontalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"styleCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"visibleColumnIndices\": _propTypes[\"default\"].object.isRequired,\n  \"visibleRowIndices\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRangeRendererParams = bpfrpt_proptype_CellRangeRendererParams;\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRangeRenderer = bpfrpt_proptype_CellRangeRenderer;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellSizeGetter = bpfrpt_proptype_CellSizeGetter;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].number]);\nexports.bpfrpt_proptype_CellSize = bpfrpt_proptype_CellSize;\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_NoContentRenderer = bpfrpt_proptype_NoContentRenderer;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": _propTypes[\"default\"].number.isRequired,\n  \"clientWidth\": _propTypes[\"default\"].number.isRequired,\n  \"scrollHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"scrollWidth\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": _propTypes[\"default\"].bool.isRequired,\n  \"vertical\": _propTypes[\"default\"].bool.isRequired,\n  \"size\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_ScrollbarPresenceChange = bpfrpt_proptype_ScrollbarPresenceChange;\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_RenderedSection = bpfrpt_proptype_RenderedSection;\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": _propTypes[\"default\"].oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": _propTypes[\"default\"].oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": _propTypes[\"default\"].number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": _propTypes[\"default\"].number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": _propTypes[\"default\"].number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndicesGetterParams = bpfrpt_proptype_OverscanIndicesGetterParams;\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"overscanStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndices = bpfrpt_proptype_OverscanIndices;\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_OverscanIndicesGetter = bpfrpt_proptype_OverscanIndicesGetter;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nexports.bpfrpt_proptype_Alignment = bpfrpt_proptype_Alignment;\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": _propTypes[\"default\"].number,\n  \"stop\": _propTypes[\"default\"].number\n};\nexports.bpfrpt_proptype_VisibleCellRange = bpfrpt_proptype_VisibleCellRange;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"../types\");\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n    (0, _classCallCheck2[\"default\"])(this, CellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionData\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_lastMeasuredIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_lastBatchedIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_cellCount\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeGetter\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_estimatedCellSize\", void 0);\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  (0, _createClass2[\"default\"])(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n  return CellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = CellSizeAndPositionManager;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellSizeAndPositionManager = _interopRequireDefault(require(\"./CellSizeAndPositionManager\"));\n\nvar _maxElementSize = require(\"./maxElementSize.js\");\n\nvar _types = require(\"../types\");\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? (0, _maxElementSize.getMaxElementSize)() : _ref$maxScrollSize,\n        params = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"maxScrollSize\"]);\n    (0, _classCallCheck2[\"default\"])(this, ScalingCellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionManager\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_maxScrollSize\", void 0);\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new _CellSizeAndPositionManager[\"default\"](params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  (0, _createClass2[\"default\"])(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = ScalingCellSizeAndPositionManager;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = calculateSizeAndPositionDataAndUpdateScrollOffset;\n\n/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nfunction calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMaxElementSize = void 0;\nvar DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nvar getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};\n\nexports.getMaxElementSize = getMaxElementSize;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = updateScrollIndexHelper;\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./ScalingCellSizeAndPositionManager.js\"));\n\nvar _types = require(\"../types\");\n\nfunction updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _Grid = _interopRequireWildcard(require(\"../Grid\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"Grid\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = (0, _clsx[\"default\"])('ReactVirtualized__List', className);\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n  return List;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": _propTypes[\"default\"].string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": _propTypes[\"default\"].string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": _propTypes[\"default\"].number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof _Grid.bpfrpt_proptype_NoContentRenderer === \"function\" ? _Grid.bpfrpt_proptype_NoContentRenderer.isRequired ? _Grid.bpfrpt_proptype_NoContentRenderer.isRequired : _Grid.bpfrpt_proptype_NoContentRenderer : _propTypes[\"default\"].shape(_Grid.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": _propTypes[\"default\"].func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof _Grid.bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? _Grid.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _Grid.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _Grid.bpfrpt_proptype_OverscanIndicesGetter : _propTypes[\"default\"].shape(_Grid.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof _Grid.bpfrpt_proptype_CellSize === \"function\" ? _Grid.bpfrpt_proptype_CellSize.isRequired ? _Grid.bpfrpt_proptype_CellSize.isRequired : _Grid.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_Grid.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof _types.bpfrpt_proptype_RowRenderer === \"function\" ? _types.bpfrpt_proptype_RowRenderer.isRequired ? _types.bpfrpt_proptype_RowRenderer.isRequired : _types.bpfrpt_proptype_RowRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof _Grid.bpfrpt_proptype_Alignment === \"function\" ? _Grid.bpfrpt_proptype_Alignment.isRequired ? _Grid.bpfrpt_proptype_Alignment.isRequired : _Grid.bpfrpt_proptype_Alignment : _propTypes[\"default\"].shape(_Grid.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": _propTypes[\"default\"].number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": _propTypes[\"default\"].number,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": _propTypes[\"default\"].number,\n\n  /** Width of list */\n  \"width\": _propTypes[\"default\"].number.isRequired\n}), _temp);\nexports[\"default\"] = List;\n(0, _defineProperty2[\"default\"])(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: _Grid.accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _List[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"List\", {\n  enumerable: true,\n  get: function get() {\n    return _List[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_RowRendererParams\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_RowRendererParams;\n  }\n});\n\nvar _List = _interopRequireDefault(require(\"./List\"));\n\nvar _types = require(\"./types\");","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_RenderedRows = exports.bpfrpt_proptype_RowRenderer = exports.bpfrpt_proptype_RowRendererParams = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isVisible\": _propTypes[\"default\"].bool.isRequired,\n  \"key\": _propTypes[\"default\"].string.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"style\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_RowRendererParams = bpfrpt_proptype_RowRendererParams;\nvar bpfrpt_proptype_RowRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_RowRenderer = bpfrpt_proptype_RowRenderer;\nvar bpfrpt_proptype_RenderedRows = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"overscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"startIndex\": _propTypes[\"default\"].number.isRequired,\n  \"stopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_RenderedRows = bpfrpt_proptype_RenderedRows;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.caf = exports.raf = void 0;\n// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nvar raf = request;\nexports.raf = raf;\nvar caf = cancel;\nexports.caf = caf;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createCallbackMemoizer;\n\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nfunction createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_AnimationTimeoutId = exports.requestAnimationTimeout = exports.cancelAnimationTimeout = void 0;\n\nvar _animationFrame = require(\"./animationFrame\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_AnimationTimeoutId = bpfrpt_proptype_AnimationTimeoutId;\n\nvar cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return (0, _animationFrame.caf)(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\n\nexports.cancelAnimationTimeout = cancelAnimationTimeout;\n\nvar requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = (0, _animationFrame.raf)(timeout);\n    }\n  };\n\n  var frame = {\n    id: (0, _animationFrame.raf)(timeout)\n  };\n  return frame;\n};\n\nexports.requestAnimationTimeout = requestAnimationTimeout;"],"names":["module","exports","self","ReferenceError","__esModule","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_extends","assign","arguments","source","hasOwnProperty","call","apply","this","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","create","constructor","_typeof","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","desc","set","objectWithoutPropertiesLoose","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","assertThisInitialized","_setPrototypeOf","p","Symbol","iterator","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","g","freeSelf","root","Function","objectToString","toString","nativeMax","Math","max","nativeMin","min","now","Date","isObject","type","toNumber","isObjectLike","isSymbol","other","valueOf","replace","isBinary","test","slice","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","undefined","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","remainingWait","debounced","isInvoking","leadingEdge","cancel","clearTimeout","flush","_interopRequireDefault","_interopRequireWildcard","_class","_temp","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf3","_assertThisInitialized2","_inherits2","_defineProperty2","React","_reactDom","CellMeasurer","_React$PureComponent","_getPrototypeOf2","_this","_len","Array","_key","concat","_this$props","_this$props$columnInd","columnIndex","parent","_this$props$rowIndex","rowIndex","index","_this$_getCellMeasure","_getCellMeasurements","height","width","getHeight","getWidth","recomputeGridSize","element","Element","console","warn","_child","_maybeMeasureCell","children","measure","_measure","registerChild","_registerChild","node","findDOMNode","ownerDocument","defaultView","HTMLElement","styleWidth","style","styleHeight","hasFixedWidth","hasFixedHeight","ceil","offsetHeight","offsetWidth","_this$props2","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","PureComponent","DEFAULT_WIDTH","DEFAULT_HEIGHT","CellMeasurerCache","params","_ref","_keyMapper","_columnWidthCache","_defaultWidth","_ref2","_rowHeightCache","_defaultHeight","defaultHeight","defaultWidth","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnWidth","columnKey","rowHeight","_i","rowKey","_CellMeasurerCache","_CellMeasurer","_default","bpfrpt_proptype_CellMeasureCache","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","_extends2","_clsx","_calculateSizeAndPositionDataAndUpdateScrollOffset","_ScalingCellSizeAndPositionManager","_createCallbackMemoizer","_defaultOverscanIndicesGetter","_updateScrollIndexHelper","_defaultCellRangeRenderer","_scrollbarSize","_reactLifecyclesCompat","_requestAnimationTimeout","ownKeys","object","enumerableOnly","symbols","filter","sym","push","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","callback","indices","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","cellCount","columnCount","cellSizeGetter","_wrapSizeGetter","estimatedCellSize","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","SCROLL_DIRECTION_FORWARD","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","scrollToAlignment","_ref$columnIndex","_ref$rowIndex","offsetProps","getTotalSize","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","SCROLL_DIRECTION_BACKWARD","_invokeOnScrollMemoizer","_ref3","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","getSizeAndPositionOfCell","_ref4","_ref4$columnIndex","_ref4$rowIndex","_this$props3","resetCell","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_ref5","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","sizeJustIncreasedFromZero","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToIndex","size","updateScrollIndexCallback","cancelAnimationTimeout","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","id","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","position","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","createElement","_setScrollingContainerRef","onScroll","_onScroll","maxWidth","maxHeight","overflow","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","getVisibleCellRange","containerSize","offset","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","start","stop","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","cellCache","styleCache","scrollingResetTimeInterval","requestAnimationTimeout","_debounceScrollEndedCallback","_ref6","_this3","_onScrollMemoizer","_ref7","_this3$props","clientHeight","clientWidth","scrollHeight","scrollWidth","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","maybeStateA","maybeStateB","configure","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","updateScrollOffsetForScrollToIndex","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","targetIndex","scrollBarSize","getUpdatedOffsetForIndex","align","currentOffset","calculatedScrollLeft","finalRow","calculatedScrollTop","polyfill","SCROLL_DIRECTION_VERTICAL","SCROLL_DIRECTION_HORIZONTAL","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","top","cellRendererParams","renderedCell","_Grid","_accessibilityOverscanIndicesGetter","_types","bpfrpt_proptype_NoContentRenderer","bpfrpt_proptype_Alignment","bpfrpt_proptype_CellPosition","bpfrpt_proptype_CellSize","bpfrpt_proptype_OverscanIndicesGetter","bpfrpt_proptype_RenderedSection","bpfrpt_proptype_CellRendererParams","bpfrpt_proptype_Scroll","bpfrpt_proptype_VisibleCellRange","bpfrpt_proptype_OverscanIndices","bpfrpt_proptype_OverscanIndicesGetterParams","bpfrpt_proptype_ScrollbarPresenceChange","bpfrpt_proptype_CellSizeGetter","bpfrpt_proptype_CellRangeRenderer","bpfrpt_proptype_CellRangeRendererParams","bpfrpt_proptype_StyleCache","bpfrpt_proptype_CellCache","bpfrpt_proptype_CellRenderer","CellSizeAndPositionManager","_cellSizeGetter","_cellCount","_estimatedCellSize","_lastMeasuredIndex","Error","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3$align","idealOffset","datum","maxOffset","minOffset","totalSize","_findNearestCell","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","_objectWithoutProperties2","_CellSizeAndPositionManager","_maxElementSize","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","getMaxElementSize","_cellSizeAndPositionManager","_maxScrollSize","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","_offsetToSafeOffset","window","chrome","hasScrollToIndex","List","rowRenderer","widthDescriptor","onRowsRendered","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","scrollToCell","noRowsRenderer","classNames","_cellRenderer","_onSectionRendered","_setRef","accessibilityOverscanIndicesGetter","_List","bpfrpt_proptype_RenderedRows","bpfrpt_proptype_RowRenderer","bpfrpt_proptype_RowRendererParams","win","caf","raf","request","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","requireAllKeys","cachedIndices","allInitialized","every","isArray","indexChanged","some","cachedValue","join","bpfrpt_proptype_AnimationTimeoutId","_animationFrame","frame","delay","Promise","resolve","then","timeout"],"sourceRoot":""}
{"version":3,"file":"chunks/3509.chunk.js","mappings":"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","sources":["webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/utils/animationFrame.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Grid/Grid.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Collection/CollectionView.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Collection/types.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Collection/Section.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Collection/SectionManager.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Collection/Collection.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/List/types.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/List/List.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/vendor/intervalTree.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Masonry/Masonry.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Table/SortDirection.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Table/SortIndicator.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Table/Column.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Table/Table.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","webpack://webviewer-ui/./node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"sourcesContent":["/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","var bpfrpt_proptype_Index = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_PositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeAndPositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_Index };\nexport { bpfrpt_proptype_PositionInfo };\nexport { bpfrpt_proptype_ScrollPosition };\nexport { bpfrpt_proptype_SizeAndPositionInfo };\nexport { bpfrpt_proptype_SizeInfo };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import * as React from 'react';\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_RowRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_RenderedRows = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired,\n  \"startIndex\": PropTypes.number.isRequired,\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_RowRendererParams };\nexport { bpfrpt_proptype_RowRenderer };\nexport { bpfrpt_proptype_RenderedRows };\nexport { bpfrpt_proptype_Scroll };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"names":["calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","this","_cellSizeGetter","_cellCount","_estimatedCellSize","key","value","_ref2","_lastMeasuredIndex","index","Error","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","i","undefined","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","window","chrome","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","length","cachedIndices","callback","indices","keys","Object","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","_class","_temp","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","call","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","props","_this","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","height","width","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","style","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","position","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","onScroll","_onScroll","maxWidth","maxHeight","overflow","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","clientWidth","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","top","cellRendererParams","renderedCell","polyfill","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","g","document","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetWidth","offsetHeight","scrollListener","e","indexOf","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","createElement","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","a","c","l","h","m","_GEP","_GEA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","prototype","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","remove","p","n","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","defaultHeaderRowRenderer","columns","ScrollSync","ASC","DESC","SortIndicator","sortDirection","viewBox","d","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","body","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getScrollOffset","documentElement","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","container","containerElement","elementRect","containerRect","_elementRect","_containerRect","getPositionOffset","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"sourceRoot":""}
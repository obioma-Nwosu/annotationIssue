{"version":3,"file":"chunks/9798.chunk.js","mappings":"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","sources":["webpack://webviewer-ui/./src/components/CollapsiblePanelGroup/CollapsiblePanelGroup.js","webpack://webviewer-ui/./src/components/CollapsiblePanelGroup/index.js","webpack://webviewer-ui/./src/components/ReactSelectWebComponentProvider/ReactSelectWebComponentProvider.js","webpack://webviewer-ui/./src/components/ReactSelectWebComponentProvider/index.js","webpack://webviewer-ui/./src/components/RedactionPanel/RedactionPanelContext.js","webpack://webviewer-ui/./src/components/RedactionTextPreview/RedactionTextPreviewContainer.js","webpack://webviewer-ui/./src/components/RedactionTextPreview/index.js","webpack://webviewer-ui/./src/components/RedactionPageGroup/RedactionItem/RedactionItem.js","webpack://webviewer-ui/./src/components/RedactionPageGroup/RedactionItem/RedactionItemContainer.js","webpack://webviewer-ui/./src/components/RedactionPageGroup/RedactionItem/index.js","webpack://webviewer-ui/./src/components/RedactionPageGroup/RedactionPageGroup.js","webpack://webviewer-ui/./src/components/RedactionPageGroup/RedactionPageGroupContainer.js","webpack://webviewer-ui/./src/components/RedactionPageGroup/index.js","webpack://webviewer-ui/./src/components/RedactionPanel/RedactionPanel.js","webpack://webviewer-ui/./src/components/CreatableMultiSelect/CreatableMultiSelect.js","webpack://webviewer-ui/./src/components/CreatableMultiSelect/index.js","webpack://webviewer-ui/./src/components/RedactionSearchOverlay/RedactionSearchMultiSelect/RedactionSearchMultiSelect.js","webpack://webviewer-ui/./src/components/RedactionSearchOverlay/RedactionSearchMultiSelect/index.js","webpack://webviewer-ui/./src/components/RedactionSearchOverlay/RedactionSearchOverlay.js","webpack://webviewer-ui/./src/helpers/multiSearch.js","webpack://webviewer-ui/./src/components/RedactionSearchOverlay/RedactionSearchOverlayContainer.js","webpack://webviewer-ui/./src/components/RedactionSearchOverlay/index.js","webpack://webviewer-ui/./src/components/RedactionSearchResultGroup/RedactionSearchResult/RedactionSearchResult.js","webpack://webviewer-ui/./src/components/RedactionSearchResultGroup/RedactionSearchResult/index.js","webpack://webviewer-ui/./src/components/RedactionSearchResultGroup/RedactionSearchResult/RedactionSearchResultContainer.js","webpack://webviewer-ui/./src/components/RedactionSearchResultGroup/RedactionSearchResultGroup.js","webpack://webviewer-ui/./src/components/RedactionSearchResultGroup/index.js","webpack://webviewer-ui/./src/constants/searchStatus.js","webpack://webviewer-ui/./src/components/RedactionSearchResults/RedactionSearchResults.js","webpack://webviewer-ui/./src/components/RedactionSearchResults/RedactionSearchResultsContainer.js","webpack://webviewer-ui/./src/components/RedactionSearchResults/index.js","webpack://webviewer-ui/./src/components/RedactionSearchPanel/RedactionSearchPanel.js","webpack://webviewer-ui/./src/hooks/useOnRedactionSearchCompleted/useOnRedactionSearchCompleted.js","webpack://webviewer-ui/./src/components/RedactionSearchPanel/index.js","webpack://webviewer-ui/./src/components/RedactionSearchPanel/RedactionSearchPanelContainer.js","webpack://webviewer-ui/./src/components/RedactionPanel/RedactionPanelContainer.js","webpack://webviewer-ui/./src/components/RedactionPanel/index.js","webpack://webviewer-ui/./src/helpers/applyRedactions.js","webpack://webviewer-ui/./src/components/CollapsiblePanelGroup/CollapsiblePanelGroup.scss","webpack://webviewer-ui/./src/components/RedactionPageGroup/RedactionItem/RedactionItem.scss","webpack://webviewer-ui/./src/components/RedactionPageGroup/RedactionPageGroup.scss","webpack://webviewer-ui/./src/components/RedactionPanel/RedactionPanel.scss","webpack://webviewer-ui/./src/components/RedactionSearchOverlay/RedactionSearchOverlay.scss","webpack://webviewer-ui/./src/components/RedactionSearchResultGroup/RedactionSearchResultGroup.scss","webpack://webviewer-ui/./src/components/RedactionSearchResultGroup/RedactionSearchResult/RedactionSearchResult.scss","webpack://webviewer-ui/./src/components/RedactionSearchResults/RedactionSearchResults.scss","webpack://webviewer-ui/./src/components/CollapsiblePanelGroup/CollapsiblePanelGroup.scss?00ff","webpack://webviewer-ui/./src/components/RedactionPageGroup/RedactionItem/RedactionItem.scss?6c02","webpack://webviewer-ui/./src/components/RedactionPageGroup/RedactionPageGroup.scss?75f8","webpack://webviewer-ui/./src/components/RedactionPanel/RedactionPanel.scss?bca9","webpack://webviewer-ui/./src/components/RedactionSearchOverlay/RedactionSearchOverlay.scss?16bc","webpack://webviewer-ui/./src/components/RedactionSearchResultGroup/RedactionSearchResultGroup.scss?b0dc","webpack://webviewer-ui/./src/components/RedactionSearchResultGroup/RedactionSearchResult/RedactionSearchResult.scss?cdc1","webpack://webviewer-ui/./src/components/RedactionSearchResults/RedactionSearchResults.scss?b7ae"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'components/Button';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './CollapsiblePanelGroup.scss';\r\n\r\nconst CollapsiblePanelGroup = (props) => {\r\n  const {\r\n    header,\r\n    children,\r\n    className,\r\n    role,\r\n    style,\r\n  } = props;\r\n\r\n  const [isExpanded, setIsExpanded] = useState(true);\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className={className} role={role} style={style}>\r\n      <div className=\"collapsible-page-group-header\">\r\n        {header()}\r\n        <Button\r\n          title={isExpanded ? t('redactionPanel.collapse') : t('redactionPanel.expand')}\r\n          img={isExpanded ? 'icon-chevron-up' : 'icon-chevron-down'}\r\n          className=\"expand-arrow\"\r\n          onClick={() => setIsExpanded(!isExpanded)}\r\n        />\r\n      </div>\r\n      {isExpanded && children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollapsiblePanelGroup;","import CollapsiblePanelGroup from './CollapsiblePanelGroup';\r\n\r\nexport default CollapsiblePanelGroup;","import React from 'react';\r\nimport { NonceProvider } from 'react-select';\r\nimport createCache from '@emotion/cache';\r\nimport getRootNode from 'helpers/getRootNode';\r\n\r\nclass EmotionNonceProvider extends NonceProvider {\r\n  createEmotionCache = (nonce) => {\r\n    return createCache({ nonce, container: this.props.container });\r\n  };\r\n}\r\n\r\nconst ReactSelectWebComponentProvider = ({ children }) => (\r\n  window.isApryseWebViewerWebComponent ?\r\n    <EmotionNonceProvider container={getRootNode()}>\r\n      {children}\r\n    </EmotionNonceProvider>\r\n    : children\r\n);\r\n\r\nexport default ReactSelectWebComponentProvider;","import ReactSelectWebComponentProvider from './ReactSelectWebComponentProvider';\r\n\r\nexport default ReactSelectWebComponentProvider;","import React, { useState, useEffect } from 'react';\r\nimport core from 'core';\r\n\r\n\r\nconst RedactionPanelContext = React.createContext();\r\n\r\nconst RedactionPanelProvider = ({ children }) => {\r\n  const [selectedRedactionItemId, setSelectedRedactionItemId] = useState(null);\r\n  const [isRedactionSearchActive, setIsRedactionSearchActive] = useState(false);\r\n  const [activeSearchResultIndex, setActiveSearchResultIndex] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    const onAnnotationSelected = (annotations, action) => {\r\n      if (action === 'selected') {\r\n        const redactionAnnotations = annotations.filter((annotation) => annotation.Subject === 'Redact');\r\n        // If multiple ones selected, we only use the first one\r\n        const selectedAnnotationId = redactionAnnotations.length > 0 ? redactionAnnotations[0].Id : null;\r\n        setSelectedRedactionItemId(selectedAnnotationId);\r\n      } else {\r\n        setSelectedRedactionItemId(null);\r\n      }\r\n    };\r\n\r\n    const activeSearchResultChanged = (newActiveSearchResult) => {\r\n      if (!newActiveSearchResult) {\r\n        return;\r\n      }\r\n      const coreSearchResults = core.getPageSearchResults() || [];\r\n      const newActiveSearchResultIndex = coreSearchResults.findIndex((searchResult) => {\r\n        return core.isSearchResultEqual(searchResult, newActiveSearchResult);\r\n      });\r\n      setActiveSearchResultIndex(newActiveSearchResultIndex);\r\n    };\r\n\r\n    core.addEventListener('annotationSelected', onAnnotationSelected);\r\n    core.addEventListener('activeSearchResultChanged', activeSearchResultChanged);\r\n\r\n    return () => {\r\n      core.removeEventListener('annotationSelected', onAnnotationSelected);\r\n      core.removeEventListener('activeSearchResultChanged', activeSearchResultChanged);\r\n    };\r\n  }, []);\r\n\r\n  const value = {\r\n    selectedRedactionItemId,\r\n    setSelectedRedactionItemId,\r\n    isRedactionSearchActive,\r\n    setIsRedactionSearchActive,\r\n    activeSearchResultIndex\r\n  };\r\n\r\n  return <RedactionPanelContext.Provider value={value}>{children}</RedactionPanelContext.Provider>;\r\n};\r\n\r\nexport { RedactionPanelProvider, RedactionPanelContext };\r\n","import React from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport selectors from 'selectors';\r\nimport NoteTextPreview from '../NoteTextPreview/NoteTextPreview';\r\n\r\nconst RedactionTextPreviewContainer = (props) => {\r\n  const [redactionPanelWidth] = useSelector(\r\n    (state) => [\r\n      selectors.getRedactionPanelWidth(state),\r\n    ],\r\n    shallowEqual,\r\n  );\r\n\r\n  return (\r\n    <NoteTextPreview {...props} panelWidth={redactionPanelWidth} comment />\r\n  );\r\n};\r\n\r\nexport default RedactionTextPreviewContainer;","import RedactionTextPreviewContainer from './RedactionTextPreviewContainer';\r\n\r\nexport default RedactionTextPreviewContainer;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Icon from 'src/components/Icon';\r\nimport getLatestActivityDate from 'helpers/getLatestActivityDate';\r\nimport dayjs from 'dayjs';\r\nimport Button from 'components/Button';\r\nimport './RedactionItem.scss';\r\nimport RedactionTextPreview from 'components/RedactionTextPreview';\r\nimport classNames from 'classnames';\r\nimport { redactionTypeMap } from 'constants/redactionTypes';\r\n\r\nconst RedactionItem = (props) => {\r\n  const {\r\n    iconColor,\r\n    annotation,\r\n    author,\r\n    dateFormat,\r\n    language,\r\n    onRedactionItemDelete,\r\n    onRedactionItemSelection,\r\n    textPreview,\r\n    isSelected,\r\n    timezone,\r\n  } = props;\r\n  const { t } = useTranslation();\r\n\r\n  let date = getLatestActivityDate(annotation);\r\n\r\n  if (timezone) {\r\n    const datetimeStr = date.toLocaleString('en-US', { timeZone: timezone });\r\n    date = new Date(datetimeStr);\r\n  }\r\n\r\n  const formattedDate = date ? dayjs(date).locale(language).format(dateFormat) : t('option.notesPanel.noteContent.noDate');\r\n  const dateAndAuthor = `${author} - ${formattedDate}`;\r\n  const className = classNames('redaction-item', { 'redaction-item-selected': isSelected });\r\n  const {\r\n    label,\r\n    icon = 'icon-form-field-text', // Default icon if none provided\r\n    redactionType\r\n  } = annotation;\r\n\r\n  let redactionPreview;\r\n\r\n  if (redactionType === redactionTypeMap['TEXT']) {\r\n    redactionPreview = (\r\n      <RedactionTextPreview linesToBreak={2}>\r\n        {textPreview}\r\n      </RedactionTextPreview>);\r\n  } else if (\r\n    redactionType === redactionTypeMap['FULL_PAGE']\r\n    || redactionType === redactionTypeMap['FULL_VIDEO_FRAME']\r\n    || redactionType === redactionTypeMap['REGION']\r\n    || redactionType === redactionTypeMap['AUDIO_REDACTION']\r\n    || redactionType === redactionTypeMap['FULL_VIDEO_FRAME_AND_AUDIO']\r\n  ) {\r\n    redactionPreview = t(label);\r\n  } else {\r\n    redactionPreview = annotation.getContents();\r\n  }\r\n\r\n  const onKeyUp = (event) => {\r\n    if (event.key === 'Enter') {\r\n      onRedactionItemSelection();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div role=\"listitem\" className={className} onClick={onRedactionItemSelection} onKeyUp={onKeyUp} tabIndex={0}>\r\n      <div className=\"redaction-icon-container\">\r\n        <Icon glyph={icon} color={iconColor} />\r\n      </div>\r\n      <div className=\"redaction-item-info\">\r\n        <div className=\"redaction-item-preview\">\r\n          {redactionPreview}\r\n        </div>\r\n        {\r\n          annotation.OverlayText ?\r\n            <div className=\"redaction-item-label-text\">\r\n              {t('option.stylePopup.labelText')}: {annotation.OverlayText}\r\n            </div> : null\r\n        }\r\n        <div className=\"redaction-item-date-author\">\r\n          {dateAndAuthor}\r\n        </div>\r\n      </div>\r\n      <Button\r\n        style={{ marginLeft: 'auto' }}\r\n        img={'icon-close'}\r\n        onClick={onRedactionItemDelete}\r\n        ariaLabel={t('action.delete')}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(RedactionItem);","import React, { useCallback, useContext } from 'react';\r\nimport { shallowEqual, useSelector } from 'react-redux';\r\nimport selectors from 'selectors';\r\nimport RedactionItem from './RedactionItem';\r\nimport core from 'core';\r\nimport { RedactionPanelContext } from '../../RedactionPanel/RedactionPanelContext';\r\n\r\nconst RedactionItemContainer = (props) => {\r\n  const { annotation } = props;\r\n\r\n  const { selectedRedactionItemId, setSelectedRedactionItemId } = useContext(RedactionPanelContext);\r\n\r\n  const [\r\n    dateFormat,\r\n    language,\r\n    customNoteSelectionFunction,\r\n    timezone,\r\n  ] = useSelector(\r\n    (state) => [\r\n      selectors.getNoteDateFormat(state),\r\n      selectors.getCurrentLanguage(state),\r\n      selectors.getCustomNoteSelectionFunction(state),\r\n      selectors.getTimezone(state)\r\n    ],\r\n    shallowEqual,\r\n  );\r\n\r\n  const textPreview = annotation.getCustomData('trn-annot-preview');\r\n  const iconColor = annotation.StrokeColor.toString();\r\n  const author = core.getDisplayAuthor(annotation['Author']);\r\n\r\n  const onRedactionItemSelection = useCallback(() => {\r\n    customNoteSelectionFunction && customNoteSelectionFunction(annotation);\r\n    core.deselectAllAnnotations();\r\n    core.selectAnnotation(annotation);\r\n    core.jumpToAnnotation(annotation);\r\n    setSelectedRedactionItemId(annotation.Id);\r\n  }, [annotation]);\r\n\r\n  const onRedactionItemDelete = useCallback(() => {\r\n    core.deleteAnnotations([annotation]);\r\n  }, [annotation]);\r\n\r\n  return (\r\n    <RedactionItem\r\n      dateFormat={dateFormat}\r\n      language={language}\r\n      timezone={timezone}\r\n      author={author}\r\n      annotation={annotation}\r\n      iconColor={iconColor}\r\n      textPreview={textPreview}\r\n      onRedactionItemDelete={onRedactionItemDelete}\r\n      onRedactionItemSelection={onRedactionItemSelection}\r\n      isSelected={selectedRedactionItemId === annotation.Id}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RedactionItemContainer;","import RedactionItemContainer from './RedactionItemContainer';\r\n\r\nexport default RedactionItemContainer;","import React from 'react';\r\nimport RedactionItem from './RedactionItem';\r\nimport CollapsiblePanelGroup from 'components/CollapsiblePanelGroup';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport './RedactionPageGroup.scss';\r\n\r\nconst RedactionPageGroup = (props) => {\r\n  const {\r\n    pageNumber,\r\n    redactionItems,\r\n  } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const header = () => {\r\n    return (\r\n      <div className=\"redaction-page-group-number\">\r\n        {t('option.shared.page')} {pageNumber}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <CollapsiblePanelGroup\r\n      className=\"redaction-page-group\"\r\n      header={header}\r\n    >\r\n      <div role=\"list\" className=\"redaction-items\">\r\n        {redactionItems.map((redactionItem) => (\r\n          <RedactionItem\r\n            annotation={redactionItem}\r\n            key={`${redactionItem.Id}-${pageNumber}`}\r\n          />\r\n        ))}\r\n      </div>\r\n    </CollapsiblePanelGroup>\r\n  );\r\n};\r\n\r\nexport default RedactionPageGroup;","import React, { useEffect, useState } from 'react';\r\nimport RedactionPageGroup from './RedactionPageGroup';\r\nimport { getSortStrategies } from 'constants/sortStrategies';\r\n\r\nconst RedactionPageGroupContainer = (props) => {\r\n  // Putting this in the container in case we want to allow users to change sort strategies\r\n  // which are stored in the application state\r\n  const { redactionItems } = props;\r\n  // Sorting strategies can be applied to any list of annotations\r\n  const [sortedRedactionItems, setSortedRedactionItems] = useState([]);\r\n  useEffect(() => {\r\n    setSortedRedactionItems(getSortStrategies()['position'].getSortedNotes(redactionItems));\r\n  }, [redactionItems]);\r\n  return (\r\n    <RedactionPageGroup\r\n      redactionItems={sortedRedactionItems}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RedactionPageGroupContainer;","import RedactionPageGroupContainer from './RedactionPageGroupContainer';\r\n\r\nexport default RedactionPageGroupContainer;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport Icon from 'components/Icon';\r\nimport { Virtuoso } from 'react-virtuoso';\r\nimport { RedactionPanelContext } from './RedactionPanelContext';\r\nimport { mapAnnotationToRedactionType } from 'constants/redactionTypes';\r\n\r\nimport './RedactionPanel.scss';\r\nimport RedactionPageGroup from '../RedactionPageGroup';\r\n\r\nconst RedactionPanel = (props) => {\r\n  const {\r\n    redactionAnnotations,\r\n    applyAllRedactions,\r\n    deleteAllRedactionAnnotations,\r\n    redactionTypesDictionary,\r\n  } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const [redactionPageMap, setRedactionPageMap] = useState({});\r\n  const [redactionPageNumbers, setRedactionPageNumbers] = useState([]);\r\n  // The following prop is needed only for the tests to actually render a list of results\r\n  // it only is ever injected in the tests\r\n  const { isTestMode } = useContext(RedactionPanelContext);\r\n\r\n  useEffect(() => {\r\n    const redactionPageMap = {};\r\n    redactionAnnotations.forEach((annotation) => {\r\n      const redactionType = mapAnnotationToRedactionType(annotation);\r\n      const { label, icon } = redactionTypesDictionary[redactionType] || {\r\n        icon: 'icon-tool-redaction-area',\r\n        label: 'redactionPanel.redactionItem.regionRedaction'\r\n      };\r\n      annotation.label = label;\r\n      annotation.icon = icon;\r\n      annotation.redactionType = redactionType;\r\n\r\n      const pageNumber = annotation.PageNumber;\r\n      if (redactionPageMap[pageNumber] === undefined) {\r\n        redactionPageMap[pageNumber] = [annotation];\r\n      } else {\r\n        redactionPageMap[pageNumber] = [annotation, ...redactionPageMap[pageNumber]];\r\n      }\r\n    });\r\n\r\n    setRedactionPageMap(redactionPageMap);\r\n    setRedactionPageNumbers(Object.keys(redactionPageMap));\r\n  }, [redactionAnnotations]);\r\n\r\n  const renderRedactionPageGroups = () => {\r\n    // Needed for the tests to actually render a list of results\r\n    // Not needed for the actual app; if we set it it kills performance when there are a lot of annotations\r\n    const testModeProps = isTestMode ? { initialItemCount: redactionPageNumbers.length } : {};\r\n    return (\r\n      <div className=\"redaction-group-container\" role=\"list\">\r\n        <Virtuoso\r\n          data={redactionPageNumbers}\r\n          itemContent={(index, pageNumber) => {\r\n            return (\r\n              <RedactionPageGroup\r\n                key={index}\r\n                pageNumber={pageNumber}\r\n                redactionItems={redactionPageMap[pageNumber]}\r\n              />);\r\n          }}\r\n          {...testModeProps}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const noRedactionAnnotations = (\r\n    <div className=\"no-marked-redactions\">\r\n      <div>\r\n        <Icon className=\"empty-icon\" glyph=\"icon-no-marked-redactions\" />\r\n      </div>\r\n      <div className=\"msg\">{t('redactionPanel.noMarkedRedactions')}</div>\r\n    </div>\r\n  );\r\n\r\n  const redactAllButtonClassName = classNames('redact-all-marked', { disabled: redactionAnnotations.length === 0 });\r\n  const clearAllButtonClassName = classNames('clear-all-marked', { disabled: redactionAnnotations.length === 0 });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"marked-redaction-counter\">\r\n        <span>{t('redactionPanel.redactionCounter')}</span> {`(${redactionAnnotations.length})`}\r\n      </div>\r\n      {redactionPageNumbers.length > 0 ? renderRedactionPageGroups() : noRedactionAnnotations}\r\n      <div className=\"redaction-panel-controls\">\r\n        <button\r\n          disabled={redactionAnnotations.length === 0}\r\n          className={clearAllButtonClassName}\r\n          onClick={deleteAllRedactionAnnotations}\r\n          aria-label={t('redactionPanel.clearMarked')}\r\n        >\r\n          {t('redactionPanel.clearMarked')}\r\n        </button>\r\n        <button\r\n          disabled={redactionAnnotations.length === 0}\r\n          className={redactAllButtonClassName}\r\n          onClick={applyAllRedactions}\r\n          aria-label={t('redactionPanel.redactAllMarked')}\r\n        >\r\n          {t('redactionPanel.redactAllMarked')}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RedactionPanel;","import React from 'react';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport ReactSelectWebComponentProvider from '../ReactSelectWebComponentProvider';\r\n\r\nconst CreatableMultiSelect = (props) => {\r\n  return (\r\n    <ReactSelectWebComponentProvider>\r\n      <CreatableSelect isMulti {...props} />\r\n    </ReactSelectWebComponentProvider>\r\n  );\r\n};\r\n\r\nexport default CreatableMultiSelect;","import CreatableMultiSelect from './CreatableMultiSelect';\r\n\r\nexport default CreatableMultiSelect;","import React from 'react';\r\nimport { components } from 'react-select';\r\nimport Icon from 'components/Icon';\r\nimport CreatableMultiSelect from 'components/CreatableMultiSelect';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst getStyles = (isDarkMode) => ({\r\n  groupHeading: (base) => ({\r\n    ...base,\r\n    textTransform: 'none',\r\n    fontSize: '10px',\r\n    color: isDarkMode ? '#FFFFFF' : '#485056',\r\n    paddingBottom: '8px',\r\n    paddingLeft: '8px',\r\n    paddingTop: '10px',\r\n  }),\r\n  group: (base) => ({\r\n    ...base,\r\n    padding: '0px',\r\n  }),\r\n  menu: (base) => ({\r\n    ...base,\r\n    padding: '0px 0px 0px 0px',\r\n  }),\r\n  menuList: (base) => ({\r\n    ...base,\r\n    padding: '0px',\r\n    backgroundColor: isDarkMode ? '#000000' : '#FFFFFF',\r\n  }),\r\n  multiValue: (base) => ({\r\n    ...base,\r\n    backgroundColor: isDarkMode ? '#192530' : '#E7EDF3',\r\n\r\n    padding: '2px 8px',\r\n    fontSize: '13px',\r\n    borderRadius: '4px',\r\n  }),\r\n  option: (base, state) => ({\r\n    ...base,\r\n    height: '28px',\r\n    display: 'flex',\r\n    fontSize: '13px',\r\n    padding: '6px 8px',\r\n    '&:hover': {\r\n      backgroundColor: isDarkMode ? '#192530' : '#E7EDF3',\r\n    },\r\n    backgroundColor: state.isFocused ? (isDarkMode ? '#192530' : '#E7EDF3') : 'transparent',\r\n  }),\r\n  valueContainer: (base) => ({\r\n    ...base,\r\n    padding: '1px',\r\n    maxHeight: '70px',\r\n    overflowY: 'scroll',\r\n  }),\r\n  control: (base) => ({\r\n    ...base,\r\n    backgroundColor: isDarkMode ? '#21242A' : '#FFFFFF',\r\n    minHeight: '29px',\r\n    borderColor: isDarkMode ? '#485056' : '#CFD4DA',\r\n    '&:hover': {\r\n      borderColor: isDarkMode ? '#485056' : '#CFD4DA',\r\n    },\r\n  }),\r\n  placeholder: (base) => ({\r\n    ...base,\r\n    fontSize: '13px',\r\n    color: isDarkMode ? '#868E96' : '#ADB5BD',\r\n    paddingLeft: '4px',\r\n  }),\r\n  input: (base) => ({\r\n    ...base,\r\n    fontSize: '13px',\r\n    color: isDarkMode ? '#FFFFFF' : '#485056',\r\n    paddingLeft: '3px',\r\n  }),\r\n});\r\n\r\nconst RedactionOption = (props) => {\r\n  const { data } = props;\r\n  const { t } = useTranslation();\r\n  return (\r\n    <components.Option {...props}>\r\n      {data.icon && <Icon glyph={data.icon} />}\r\n      {t(data.label)}\r\n    </components.Option>\r\n  );\r\n};\r\n\r\nconst MultiValueLabel = ({ data }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '18px' }}>\r\n      {data.icon && <Icon glyph={data.icon} />}\r\n      {t(data.label)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RedactionSearchMultiSelect = (props) => {\r\n  const { t } = useTranslation();\r\n  const { activeTheme, redactionSearchOptions } = props;\r\n\r\n  const redactionGroup = [\r\n    {\r\n      label: t('redactionPanel.search.pattern'),\r\n      options: redactionSearchOptions,\r\n    },\r\n  ];\r\n\r\n  const isDarkMode = activeTheme === 'dark';\r\n  const styles = getStyles(isDarkMode);\r\n\r\n  return (\r\n    <CreatableMultiSelect\r\n      options={redactionGroup}\r\n      styles={styles}\r\n      components={{ Option: RedactionOption, MultiValueLabel, IndicatorsContainer: () => null }}\r\n      placeholder={t('redactionPanel.redactionSearchPlaceholder')}\r\n      formatCreateLabel={(value) => `${t('component.searchPanel')} ${value}`}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RedactionSearchMultiSelect;\r\n","import RedactionSearchMultiSelect from './RedactionSearchMultiSelect';\r\n\r\nexport default RedactionSearchMultiSelect;","import React from 'react';\r\nimport DataElementWrapper from '../DataElementWrapper';\r\nimport RedactionSearchMultiSelect from './RedactionSearchMultiSelect';\r\nimport { redactionTypeMap } from 'constants/redactionTypes';\r\nimport './RedactionSearchOverlay.scss';\r\n\r\nconst buildSearchOptions = (searchTerms) => {\r\n  const options = {\r\n    textSearch: [],\r\n    caseSensitive: true,\r\n  };\r\n\r\n  if (!searchTerms) {\r\n    return options;\r\n  }\r\n\r\n  searchTerms.forEach((searchTerm) => {\r\n    const { type } = searchTerm;\r\n    if (type === redactionTypeMap['TEXT']) {\r\n      options.textSearch.push(searchTerm.label);\r\n    } else {\r\n      options[type] = true;\r\n    }\r\n    if (searchTerm.regex) {\r\n      options.caseSensitive = options.caseSensitive && !searchTerm.regex.ignoreCase;\r\n    }\r\n  });\r\n\r\n  return options;\r\n};\r\n\r\nconst RedactionSearchOverlay = (props) => {\r\n  const {\r\n    setIsRedactionSearchActive,\r\n    searchTerms,\r\n    setSearchTerms,\r\n    executeRedactionSearch,\r\n    activeTheme,\r\n    redactionSearchOptions,\r\n  } = props;\r\n\r\n  const handleChange = (updatedSearchTerms) => {\r\n    setSearchTerms(updatedSearchTerms);\r\n    const options = buildSearchOptions(updatedSearchTerms);\r\n    executeRedactionSearch(options);\r\n  };\r\n\r\n  const handleCreate = (newValue) => {\r\n    const textTerm = {\r\n      label: newValue,\r\n      value: newValue,\r\n      type: redactionTypeMap['TEXT']\r\n    };\r\n    // Initially search terms are null so we safeguard against this\r\n    const nonNullSearchTerms = searchTerms || [];\r\n    const updatedSearchTerms = [...nonNullSearchTerms, textTerm];\r\n    setSearchTerms(updatedSearchTerms);\r\n    const options = buildSearchOptions(updatedSearchTerms);\r\n    options.caseSensitive = false;\r\n    executeRedactionSearch(options);\r\n  };\r\n\r\n  return (\r\n    <DataElementWrapper\r\n      className=\"RedactionSearchOverlay\"\r\n      dataElement=\"redactionSearchOverlay\"\r\n    >\r\n      <RedactionSearchMultiSelect\r\n        onFocus={() => setIsRedactionSearchActive(true)}\r\n        value={searchTerms}\r\n        onCreateOption={handleCreate}\r\n        onChange={handleChange}\r\n        activeTheme={activeTheme}\r\n        redactionSearchOptions={redactionSearchOptions}\r\n      />\r\n\r\n    </DataElementWrapper>\r\n\r\n  );\r\n};\r\n\r\nexport default RedactionSearchOverlay;","import searchTextFullFactory from '../apis/searchTextFull';\r\nimport selectors from 'selectors';\r\nimport core from 'core';\r\n\r\n\r\nfunction multiSearch(store) {\r\n  return function multiSearch(searchTerms) {\r\n    const { getState } = store;\r\n    const state = getState();\r\n    const redactionSearchPatterns = selectors.getRedactionSearchPatterns(state);\r\n    // collect all regexes into an array\r\n    const searchOptionsMap = Object.keys(redactionSearchPatterns).reduce((map, key) => {\r\n      const { regex, type } = redactionSearchPatterns[key];\r\n      map[type] = regex;\r\n      return map;\r\n    }, {});\r\n\r\n\r\n    const options = {\r\n      regex: true,\r\n      caseSensitive: searchTerms.caseSensitive,\r\n    };\r\n\r\n    const { textSearch } = searchTerms;\r\n    const searchArray = [...textSearch];\r\n\r\n    // Now we can map type to regex\r\n    Object.keys(searchTerms).forEach((searchType) => {\r\n      const searchRegex = searchOptionsMap[searchType];\r\n      if (searchRegex) {\r\n        searchArray.push(searchRegex.source);\r\n      }\r\n    });\r\n\r\n    const searchString = searchArray.join('|');\r\n\r\n    // If search string is empty we return and clear searches or we send the search logic\r\n    // into an infinte loop\r\n    if (searchString === '') {\r\n      core.clearSearchResults();\r\n      return;\r\n    }\r\n\r\n    const searchTextFull = searchTextFullFactory();\r\n    searchTextFull(searchString, options);\r\n  };\r\n}\r\n\r\nexport default multiSearch;","import React, { useContext } from 'react';\r\nimport { useStore, useSelector, shallowEqual } from 'react-redux';\r\nimport selectors from 'selectors';\r\n\r\nimport RedactionSearchOverlay from './RedactionSearchOverlay';\r\nimport { RedactionPanelContext } from '../RedactionPanel/RedactionPanelContext';\r\nimport multiSearchFactory from '../../helpers/multiSearch';\r\n\r\n\r\nfunction executeRedactionSearch(options, store) {\r\n  const multiSearch = multiSearchFactory(store);\r\n  multiSearch(options);\r\n}\r\n\r\nconst RedactionSearchOverlayContainer = (props) => {\r\n  const { setIsRedactionSearchActive } = useContext(RedactionPanelContext);\r\n  const store = useStore();\r\n  const activeTheme = useSelector((state) => selectors.getActiveTheme(state));\r\n  const redactionSearchPatterns = useSelector((state) => selectors.getRedactionSearchPatterns(state), shallowEqual);\r\n  const redactionSearchOptions = Object.values(redactionSearchPatterns).map((pattern) => ({\r\n    ...pattern,\r\n    value: pattern.type,\r\n  }));\r\n\r\n  return (\r\n    <RedactionSearchOverlay\r\n      setIsRedactionSearchActive={setIsRedactionSearchActive}\r\n      executeRedactionSearch={(options = {}) => executeRedactionSearch(options, store)}\r\n      activeTheme={activeTheme}\r\n      redactionSearchOptions={redactionSearchOptions}\r\n      {...props}\r\n    />);\r\n};\r\n\r\nexport default RedactionSearchOverlayContainer;","import RedactionSearchOverlayContainer from './RedactionSearchOverlayContainer';\r\n\r\nexport default RedactionSearchOverlayContainer;","import React from 'react';\r\nimport { Choice } from '@pdftron/webviewer-react-toolkit';\r\nimport Icon from 'components/Icon';\r\nimport './RedactionSearchResult.scss';\r\nimport classNames from 'classnames';\r\nimport { redactionTypeMap } from 'constants/redactionTypes';\r\n\r\n// Alternatively wrap this in useCallback and declare inside component\r\nconst displayRedactionSearchResult = (props) => {\r\n  const { ambientStr, resultStrStart, resultStrEnd, resultStr, type } = props;\r\n  if (type === redactionTypeMap['TEXT']) {\r\n    const searchValue = ambientStr === '' ? resultStr : ambientStr.slice(resultStrStart, resultStrEnd);\r\n    const textBeforeSearchValue = ambientStr.slice(0, resultStrStart);\r\n    const textAfterSearchValue = ambientStr.slice(resultStrEnd);\r\n    return (\r\n      <>\r\n        {textBeforeSearchValue}\r\n        <span className=\"search-value\">{searchValue}</span>\r\n        {textAfterSearchValue}\r\n      </>\r\n    );\r\n  }\r\n  return resultStr;\r\n};\r\n\r\nconst RedactionSearchResult = (props) => {\r\n  const {\r\n    isChecked,\r\n    onChange,\r\n    onClickResult,\r\n    isActive,\r\n    icon,\r\n  } = props;\r\n\r\n  const displayResult = displayRedactionSearchResult(props);\r\n  const searchResultClassname = classNames('redaction-search-result', { active: isActive });\r\n\r\n  return (\r\n    <div className={searchResultClassname} role=\"listitem\" onClick={onClickResult}>\r\n      <div style={{ paddingRight: '14px' }}>\r\n        <Choice\r\n          checked={isChecked}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div style={{ paddingRight: '14px' }}>\r\n        <Icon glyph={icon} />\r\n      </div>\r\n      <div className=\"redaction-search-result-info\">\r\n        {displayResult}\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default React.memo(RedactionSearchResult);","import RedactionSearchResultContainer from './RedactionSearchResultContainer';\r\n\r\nexport default RedactionSearchResultContainer;","import React, { useCallback, useContext } from 'react';\r\nimport RedactionSearchResult from './RedactionSearchResult';\r\nimport { RedactionPanelContext } from 'components/RedactionPanel/RedactionPanelContext';\r\nimport core from 'core';\r\n\r\nconst RedactionSearchResultContainer = (props) => {\r\n  const {\r\n    searchResult,\r\n    checked,\r\n    checkResult,\r\n  } = props;\r\n\r\n  const { activeSearchResultIndex } = useContext(RedactionPanelContext);\r\n\r\n  const { ambientStr, resultStrStart, resultStrEnd, resultStr, icon, index, type } = searchResult;\r\n\r\n  const onChange = useCallback((event) => {\r\n    checkResult(event, index);\r\n  }, [index, checkResult]);\r\n\r\n  const onClickResult = useCallback(() => {\r\n    core.setActiveSearchResult(searchResult);\r\n  }, [searchResult]);\r\n\r\n  return (\r\n    <RedactionSearchResult\r\n      ambientStr={ambientStr}\r\n      resultStrStart={resultStrStart}\r\n      resultStrEnd={resultStrEnd}\r\n      resultStr={resultStr}\r\n      icon={icon}\r\n      type={type}\r\n      isChecked={checked}\r\n      onChange={onChange}\r\n      onClickResult={onClickResult}\r\n      isActive={activeSearchResultIndex === index}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RedactionSearchResultContainer;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport RedactionSearchResult from './RedactionSearchResult';\r\nimport { Choice } from '@pdftron/webviewer-react-toolkit';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CollapsiblePanelGroup from 'components/CollapsiblePanelGroup';\r\nimport './RedactionSearchResultGroup.scss';\r\n\r\nconst RedactionSearchResultGroup = (props) => {\r\n  const {\r\n    pageNumber,\r\n    searchResults,\r\n    selectedSearchResultIndexes,\r\n    setSelectedSearchResultIndexes,\r\n  } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const groupResultIndexes = searchResults.map((result) => result.index);\r\n  const [allItemsChecked, setAllItemsChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const allResultsSelected = groupResultIndexes.reduce((allSelected, currentIndex) => {\r\n      return selectedSearchResultIndexes[currentIndex] && allSelected;\r\n    }, true);\r\n\r\n    setAllItemsChecked(allResultsSelected);\r\n  }, [selectedSearchResultIndexes, groupResultIndexes]);\r\n\r\n  const checkAllResults = useCallback((event) => {\r\n    const checked = event.target.checked;\r\n    groupResultIndexes.forEach((resultIndex) => {\r\n      selectedSearchResultIndexes[resultIndex] = checked;\r\n    });\r\n    setAllItemsChecked(checked);\r\n    setSelectedSearchResultIndexes({ ...selectedSearchResultIndexes });\r\n  }, [selectedSearchResultIndexes, groupResultIndexes]);\r\n\r\n  const checkResult = useCallback((event, index) => {\r\n    const checked = event.target.checked;\r\n    selectedSearchResultIndexes[index] = checked;\r\n    setSelectedSearchResultIndexes({ ...selectedSearchResultIndexes });\r\n  }, [selectedSearchResultIndexes]);\r\n\r\n  const header = () => {\r\n    return (\r\n      <Choice\r\n        checked={allItemsChecked}\r\n        onChange={checkAllResults}\r\n        label={`${t('option.shared.page')} ${pageNumber}`}\r\n        className=\"redaction-search-results-page-number\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const style = {\r\n    paddingLeft: '12px',\r\n    paddingRight: '12px',\r\n    paddingTop: '8px',\r\n    paddingBottom: '4px',\r\n  };\r\n\r\n  return (\r\n    <CollapsiblePanelGroup header={header} role=\"row\" style={style}>\r\n      <div role=\"list\">\r\n        {searchResults.map((searchResult, index) => (\r\n          <RedactionSearchResult\r\n            checked={selectedSearchResultIndexes[searchResult.index]}\r\n            checkResult={checkResult}\r\n            searchResult={searchResult}\r\n            key={`${index}-${pageNumber}`}\r\n          />)\r\n        )}\r\n      </div>\r\n    </CollapsiblePanelGroup>\r\n  );\r\n};\r\n\r\nexport default RedactionSearchResultGroup;","import RedactionSearchResultGroup from './RedactionSearchResultGroup';\r\n\r\nexport default RedactionSearchResultGroup;","export default {\r\n  SEARCH_NOT_INITIATED: 'SEARCH_NOT_INITIATED',\r\n  SEARCH_IN_PROGRESS: 'SEARCH_IN_PROGRESS',\r\n  SEARCH_DONE: 'SEARCH_DONE',\r\n};","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport RedactionSearchResultGroup from 'components/RedactionSearchResultGroup';\r\nimport Spinner from 'components/Spinner';\r\nimport './RedactionSearchResults.scss';\r\nimport classNames from 'classnames';\r\nimport { Virtuoso } from 'react-virtuoso';\r\nimport SearchStatus from 'constants/searchStatus';\r\nimport { RedactionPanelContext } from '../RedactionPanel/RedactionPanelContext';\r\n\r\nfunction RedactionSearchResults(props) {\r\n  const {\r\n    redactionSearchResults,\r\n    searchStatus,\r\n    onCancelSearch,\r\n    isProcessingRedactionResults,\r\n    markSelectedResultsForRedaction,\r\n    redactSelectedResults,\r\n  } = props;\r\n\r\n  const { t } = useTranslation();\r\n  const [redactionSearchResultPageMap, setRedactionSearchResultPageMap] = useState({});\r\n  const [selectedSearchResultIndexesMap, setSelectedSearchResultIndexesMap] = useState({});\r\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\r\n  // The following prop is needed only for the tests to actually render a list of results\r\n  // it only is ever injected in the tests\r\n  const { isTestMode } = useContext(RedactionPanelContext);\r\n\r\n\r\n  useEffect(() => {\r\n    const redactionSearchResultPageMap = {};\r\n    redactionSearchResults.forEach((result, index) => {\r\n      const pageNumber = result.pageNum;\r\n      result.index = index;\r\n      if (redactionSearchResultPageMap[pageNumber] === undefined) {\r\n        redactionSearchResultPageMap[pageNumber] = [result];\r\n      } else {\r\n        redactionSearchResultPageMap[pageNumber] = [...redactionSearchResultPageMap[pageNumber], result];\r\n      }\r\n    });\r\n\r\n    setRedactionSearchResultPageMap(redactionSearchResultPageMap);\r\n\r\n    const selectedIndexesMap = {};\r\n    redactionSearchResults.forEach((value, index) => {\r\n      selectedIndexesMap[index] = false;\r\n    });\r\n    setSelectedSearchResultIndexesMap(selectedIndexesMap);\r\n  }, [redactionSearchResults]);\r\n\r\n\r\n  useEffect(() => {\r\n    const selectedIndexes = redactionSearchResults.filter((redactionSearchResult, index) => {\r\n      return selectedSearchResultIndexesMap[index];\r\n    });\r\n\r\n    setSelectedIndexes(selectedIndexes);\r\n  }, [selectedSearchResultIndexesMap]);\r\n\r\n\r\n  const renderSearchResults = () => {\r\n    const resultGroupPageNumbers = Object.keys(redactionSearchResultPageMap);\r\n    if (resultGroupPageNumbers.length > 0) {\r\n      // Needed for the tests to actually render a list of results\r\n      const testModeProps = isTestMode ? { initialItemCount: resultGroupPageNumbers.length } : {};\r\n      return (\r\n        <Virtuoso\r\n          data={resultGroupPageNumbers}\r\n          itemContent={(index, pageNumber) => {\r\n            return (\r\n              <RedactionSearchResultGroup\r\n                key={index}\r\n                pageNumber={pageNumber}\r\n                searchResults={redactionSearchResultPageMap[pageNumber]}\r\n                selectedSearchResultIndexes={selectedSearchResultIndexesMap}\r\n                setSelectedSearchResultIndexes={setSelectedSearchResultIndexesMap}\r\n              />);\r\n          }}\r\n          {...testModeProps}\r\n        />);\r\n    }\r\n  };\r\n\r\n  const renderStartSearch = () => (\r\n    <div aria-label={t('redactionPanel.search.start')}>\r\n      {t('redactionPanel.search.start')}\r\n    </div>\r\n  );\r\n\r\n  const noResults = (\r\n    <div aria-label={t('message.noResults')}>\r\n      {t('message.noResults')}\r\n    </div>\r\n  );\r\n\r\n  const renderSearchInProgress = () => (\r\n    <div >\r\n      <Spinner height=\"25px\" width=\"25px\" />\r\n    </div>\r\n  );\r\n\r\n  const onCancelHandler = () => {\r\n    setRedactionSearchResultPageMap({});\r\n    onCancelSearch();\r\n  };\r\n\r\n  const selectAllResults = () => {\r\n    const searchResultIndexMap = {};\r\n    redactionSearchResults.forEach((value, index) => {\r\n      searchResultIndexMap[index] = true;\r\n    });\r\n    setSelectedSearchResultIndexesMap(searchResultIndexMap);\r\n  };\r\n\r\n  const unselectAllResults = () => {\r\n    const searchResultIndexMap = {};\r\n    redactionSearchResults.forEach((value, index) => {\r\n      searchResultIndexMap[index] = false;\r\n    });\r\n    setSelectedSearchResultIndexesMap(searchResultIndexMap);\r\n  };\r\n\r\n  const onMarkAllForRedaction = () => {\r\n    markSelectedResultsForRedaction(selectedIndexes);\r\n    onCancelSearch();\r\n  };\r\n\r\n  const onRedactSelectedResults = () => {\r\n    redactSelectedResults(selectedIndexes);\r\n  };\r\n\r\n  const isEmptyList = redactionSearchResults.length === 0;\r\n\r\n  const resultsContainerClass = classNames('redaction-search-results-container', { emptyList: isEmptyList });\r\n  const redactAllButtonClass = classNames('redact-all-selected', { disabled: selectedIndexes.length === 0 });\r\n  const markAllForRedactionButtonClass = classNames('mark-all-selected', { disabled: selectedIndexes.length === 0 });\r\n  const shouldShowResultsCounterOptions = (searchStatus === SearchStatus['SEARCH_DONE'] && !isProcessingRedactionResults) || searchStatus === SearchStatus['SEARCH_NOT_INITIATED'];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"redaction-search-counter-controls\">\r\n        {searchStatus === SearchStatus['SEARCH_IN_PROGRESS'] && (\r\n          <div style={{ flexGrow: 1 }}>\r\n            <Spinner height=\"18px\" width=\"18px\" />\r\n          </div>)}\r\n        {shouldShowResultsCounterOptions && (\r\n          <>\r\n            <div className=\"redaction-search-results-counter\">\r\n              <span>{t('redactionPanel.searchResults')}</span> ({redactionSearchResults.length})\r\n            </div>\r\n            <button\r\n              onClick={selectAllResults}\r\n              disabled={isEmptyList}\r\n              aria-label={t('action.selectAll')}\r\n            >\r\n              {t('action.selectAll')}\r\n            </button>\r\n            <button\r\n              disabled={isEmptyList}\r\n              onClick={unselectAllResults}\r\n              aria-label={t('action.unselect')}\r\n            >\r\n              {t('action.unselect')}\r\n            </button>\r\n          </>)}\r\n      </div>\r\n      <div className={resultsContainerClass} role=\"list\">\r\n        {searchStatus === SearchStatus['SEARCH_NOT_INITIATED'] && renderStartSearch()}\r\n        {(searchStatus === SearchStatus['SEARCH_IN_PROGRESS'] && isEmptyList && isProcessingRedactionResults) && renderSearchInProgress()}\r\n        {searchStatus === SearchStatus['SEARCH_DONE'] && isEmptyList && !isProcessingRedactionResults && noResults}\r\n        {(searchStatus === SearchStatus['SEARCH_IN_PROGRESS'] || searchStatus === SearchStatus['SEARCH_DONE']) && renderSearchResults()}\r\n      </div>\r\n      <div className=\"redaction-search-panel-controls\" >\r\n        <button\r\n          onClick={onCancelHandler}\r\n          aria-label={t('action.cancel')}\r\n          className=\"cancel\"\r\n        >\r\n          {t('action.cancel')}\r\n        </button>\r\n        <button\r\n          disabled={selectedIndexes.length === 0}\r\n          aria-label={t('annotation.redact')}\r\n          className={redactAllButtonClass}\r\n          onClick={onRedactSelectedResults}\r\n        >\r\n          {t('annotation.redact')}\r\n        </button>\r\n        <button\r\n          disabled={selectedIndexes.length === 0}\r\n          aria-label={t('action.addMark')}\r\n          className={markAllForRedactionButtonClass}\r\n          onClick={onMarkAllForRedaction}\r\n        >\r\n          {t('action.addMark')}\r\n        </button>\r\n      </div >\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RedactionSearchResults;\r\n","import React, { useCallback } from 'react';\r\nimport RedactionSearchResults from './RedactionSearchResults';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport selectors from 'selectors';\r\nimport applyRedactions from 'helpers/applyRedactions';\r\nimport core from 'core';\r\n\r\n\r\nexport const defaultRedactionStyles = {\r\n  OverlayText: '',\r\n  StrokeColor: new window.Core.Annotations.Color(255, 0, 0),\r\n  TextColor: new window.Core.Annotations.Color(255, 0, 0, 1),\r\n  Font: 'Helvetica',\r\n};\r\n\r\nexport function createRedactionAnnotations(searchResults, activeToolStyles = defaultRedactionStyles) {\r\n  const {\r\n    StrokeColor,\r\n    OverlayText,\r\n    FillColor,\r\n    Font = 'Helvetica',\r\n    TextColor\r\n  } = activeToolStyles;\r\n  const redactionAnnotations = searchResults.map((result) => {\r\n    const redaction = new window.Core.Annotations.RedactionAnnotation();\r\n    redaction.PageNumber = result.page_num;\r\n    redaction.Quads = result.quads.map((quad) => quad.getPoints());\r\n    redaction.StrokeColor = StrokeColor;\r\n    redaction.OverlayText = OverlayText;\r\n    redaction.FillColor = FillColor;\r\n    redaction.Font = Font;\r\n    redaction.TextColor = TextColor;\r\n    redaction.setContents(result.result_str);\r\n    redaction.type = result.type;\r\n    redaction.Author = core.getCurrentUser();\r\n\r\n    if (result.type === 'text') {\r\n      redaction.setCustomData('trn-annot-preview', result.result_str);\r\n    }\r\n\r\n    redaction.setCustomData('trn-redaction-type', result.type);\r\n\r\n    return redaction;\r\n  });\r\n\r\n  return redactionAnnotations;\r\n}\r\n\r\nfunction RedactionSearchResultsContainer(props) {\r\n  const { onCancelSearch } = props;\r\n  const dispatch = useDispatch();\r\n  // activeToolStyles is an object so we do a shallowEqual to check equality\r\n  const [activeToolStyles, activeToolName] = useSelector(\r\n    (state) => [\r\n      selectors.getActiveToolStyles(state),\r\n      selectors.getActiveToolName(state)\r\n    ], shallowEqual);\r\n\r\n  const redactSelectedResults = (searchResults) => {\r\n    const redactionAnnotations = createRedactionAnnotations(searchResults, defaultRedactionStyles);\r\n    dispatch(applyRedactions(redactionAnnotations, onCancelSearch));\r\n  };\r\n\r\n  const markSelectedResultsForRedaction = useCallback((searchResults) => {\r\n    const redactionStyles = activeToolName.includes('Redaction') ? activeToolStyles : defaultRedactionStyles;\r\n    const redactionAnnotations = createRedactionAnnotations(searchResults, redactionStyles);\r\n    const annotationManager = core.getAnnotationManager();\r\n    annotationManager.addAnnotations(redactionAnnotations);\r\n  }, [activeToolStyles, activeToolName]);\r\n\r\n  return (\r\n    <RedactionSearchResults\r\n      markSelectedResultsForRedaction={markSelectedResultsForRedaction}\r\n      redactSelectedResults={redactSelectedResults}\r\n      {...props}\r\n    />);\r\n}\r\n\r\nexport default RedactionSearchResultsContainer;","import RedactionSearchResultsContainer from './RedactionSearchResultsContainer';\r\n\r\nexport default RedactionSearchResultsContainer;","import React, { useContext, useState } from 'react';\r\nimport RedactionSearchOverlay from 'src/components/RedactionSearchOverlay';\r\nimport { RedactionPanelContext } from 'components/RedactionPanel/RedactionPanelContext';\r\nimport RedactionSearchResults from 'components/RedactionSearchResults';\r\n\r\nconst RedactionSearchPanel = (props) => {\r\n  const [searchTerms, setSearchTerms] = useState([]);\r\n  const { isRedactionSearchActive, setIsRedactionSearchActive } = useContext(RedactionPanelContext);\r\n  const onCancelSearch = () => {\r\n    setSearchTerms([]);\r\n    clearRedactionSearchResults();\r\n    setIsRedactionSearchActive(false);\r\n  };\r\n\r\n  const {\r\n    redactionSearchResults,\r\n    isProcessingRedactionResults,\r\n    clearRedactionSearchResults,\r\n    searchStatus,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <RedactionSearchOverlay\r\n        searchTerms={searchTerms}\r\n        setSearchTerms={setSearchTerms}\r\n      />\r\n      {isRedactionSearchActive &&\r\n        <RedactionSearchResults\r\n          redactionSearchResults={redactionSearchResults}\r\n          onCancelSearch={onCancelSearch}\r\n          searchStatus={searchStatus}\r\n          isProcessingRedactionResults={isProcessingRedactionResults}\r\n        />\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RedactionSearchPanel;","import { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport selectors from 'selectors';\r\nimport core from 'core';\r\nimport { redactionTypeMap } from 'constants/redactionTypes';\r\nimport SearchStatus from 'constants/searchStatus';\r\n\r\nfunction useOnRedactionSearchCompleted() {\r\n  const [searchStatus, setSearchStatus] = useState(SearchStatus['SEARCH_NOT_INITIATED']);\r\n  const [redactionSearchResults, setRedactionSearchResults] = useState([]);\r\n  const [isProcessingRedactionResults, setIsProcessingRedactionResults] = useState(false);\r\n  const redactionSearchPatterns = useSelector((state) => selectors.getRedactionSearchPatterns(state), shallowEqual);\r\n\r\n  const searchPatterns = useMemo(() => {\r\n    return Object.keys(redactionSearchPatterns).reduce((map, key) => {\r\n      const { regex, type, icon } = redactionSearchPatterns[key];\r\n      map[type] = {\r\n        regex,\r\n        icon\r\n      };\r\n      return map;\r\n    }, {});\r\n  }, [redactionSearchPatterns]);\r\n\r\n  const mapResultToType = useCallback((result) => {\r\n    // Iterate through the patterns and return the first match\r\n    const { resultStr } = result;\r\n    const searchPatternKeys = Object.keys(searchPatterns);\r\n\r\n    const resultType = searchPatternKeys.find((key) => {\r\n      const { regex } = searchPatterns[key];\r\n      return regex.test(resultStr);\r\n    });\r\n\r\n    // If it didn't match any of the patterns, return the default type which is text\r\n    result.type = resultType === undefined ? redactionTypeMap['TEXT'] : resultType;\r\n    // And also set the icon to display in the panel. If no icon provided use the text icon\r\n    const { icon = 'icon-form-field-text' } = searchPatterns[result.type] || {};\r\n    result.icon = icon;\r\n    return result;\r\n  }, [searchPatterns]);// Dependency is an object but it is memoized so it will not re-create unless the patterns change\r\n\r\n  const clearRedactionSearchResults = useCallback(() => {\r\n    setRedactionSearchResults([]);\r\n    core.clearSearchResults();\r\n    setIsProcessingRedactionResults(false);\r\n  });\r\n\r\n  useEffect(() => {\r\n    function onSearchResultsChanged(results) {\r\n      const mappedResults = results.map(mapResultToType);\r\n      setIsProcessingRedactionResults(true);\r\n      setRedactionSearchResults(mappedResults);\r\n    }\r\n\r\n    core.addEventListener('searchResultsChanged', onSearchResultsChanged);\r\n    return () => {\r\n      core.removeEventListener('searchResultsChanged', onSearchResultsChanged);\r\n    };\r\n  }, [searchStatus]);\r\n\r\n  useEffect(() => {\r\n    function searchInProgressEventHandler(isSearching) {\r\n      if (isSearching === undefined || isSearching === null) {\r\n        // if isSearching is not passed at all, we consider that to mean that search was reset to original state\r\n        setSearchStatus(SearchStatus['SEARCH_NOT_INITIATED']);\r\n      } else if (isSearching) {\r\n        setSearchStatus(SearchStatus['SEARCH_IN_PROGRESS']);\r\n      } else {\r\n        setSearchStatus(SearchStatus['SEARCH_DONE']);\r\n        // Need a timeout due to timing issue as SEARCH_DONE is fired\r\n        // before final call to onSearchResultsChanged, otherwise we briefly show\r\n        // the NO RESULTS message before showing actual results.\r\n        setTimeout(() => {\r\n          setIsProcessingRedactionResults(false);\r\n        }, 100);\r\n      }\r\n    }\r\n\r\n    core.addEventListener('searchInProgress', searchInProgressEventHandler);\r\n\r\n    return () => {\r\n      core.removeEventListener('searchInProgress', searchInProgressEventHandler);\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    redactionSearchResults,\r\n    isProcessingRedactionResults,\r\n    clearRedactionSearchResults,\r\n    searchStatus,\r\n  };\r\n}\r\n\r\nexport default useOnRedactionSearchCompleted;","import ReactionSearchPanelContainer from './RedactionSearchPanelContainer';\r\n\r\nexport default ReactionSearchPanelContainer;","import React from 'react';\r\nimport RedactionSearchPanel from './RedactionSearchPanel';\r\nimport useOnRedactionSearchCompleted from 'hooks/useOnRedactionSearchCompleted';\r\n\r\nconst ReactionSearchPanelContainer = () => {\r\n  const {\r\n    redactionSearchResults,\r\n    isProcessingRedactionResults,\r\n    clearRedactionSearchResults,\r\n    searchStatus,\r\n  } = useOnRedactionSearchCompleted();\r\n\r\n  return (\r\n    <RedactionSearchPanel\r\n      redactionSearchResults={redactionSearchResults}\r\n      isProcessingRedactionResults={isProcessingRedactionResults}\r\n      clearRedactionSearchResults={clearRedactionSearchResults}\r\n      searchStatus={searchStatus}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ReactionSearchPanelContainer;","import React, { useContext, useEffect, useMemo, useState } from 'react';\r\nimport RedactionPanel from './RedactionPanel';\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\r\nimport selectors from 'selectors';\r\nimport actions from 'actions';\r\nimport core from 'core';\r\nimport applyRedactions from 'helpers/applyRedactions';\r\nimport { RedactionPanelContext, RedactionPanelProvider } from './RedactionPanelContext';\r\nimport { isMobileSize } from 'helpers/getDeviceSize';\r\nimport DataElementWrapper from '../DataElementWrapper';\r\nimport Icon from 'components/Icon';\r\nimport RedactionSearchPanel from 'components/RedactionSearchPanel';\r\nimport { defaultRedactionTypes } from 'constants/redactionTypes';\r\n\r\nexport const RedactionPanelContainer = (props) => {\r\n  const [\r\n    isOpen,\r\n    isDisabled,\r\n    redactionPanelWidth,\r\n    isInDesktopOnlyMode,\r\n    customApplyRedactionsHandler,\r\n    redactionSearchPatterns,\r\n  ] = useSelector(\r\n    (state) => [\r\n      selectors.isElementOpen(state, 'redactionPanel'),\r\n      selectors.isElementDisabled(state, 'redactionPanel'),\r\n      selectors.getRedactionPanelWidth(state),\r\n      selectors.isInDesktopOnlyMode(state),\r\n      selectors.getCustomApplyRedactionsHandler(state),\r\n      selectors.getRedactionSearchPatterns(state),\r\n    ],\r\n    shallowEqual,\r\n  );\r\n\r\n  const isMobile = isMobileSize();\r\n\r\n  const { redactionAnnotationsList } = props;\r\n\r\n  const redactionTypesDictionary = useMemo(() => {\r\n    const storedRedactionTypes = Object.keys(redactionSearchPatterns).reduce((map, key) => {\r\n      const { label, type, icon } = redactionSearchPatterns[key];\r\n      map[type] = {\r\n        label,\r\n        icon,\r\n      };\r\n      return map;\r\n    }, {});\r\n\r\n    return { ...storedRedactionTypes, ...defaultRedactionTypes };\r\n  }, [redactionSearchPatterns]);\r\n\r\n  const deleteAllRedactionAnnotations = () => {\r\n    core.deleteAnnotations(redactionAnnotationsList);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const applyAllRedactions = () => {\r\n    const originalApplyRedactions = () => {\r\n      const callOnRedactionCompleted = props.isCustomPanel\r\n        ? closeRedactionPanel : () => { };\r\n\r\n      dispatch(applyRedactions(redactionAnnotationsList, callOnRedactionCompleted));\r\n    };\r\n    if (customApplyRedactionsHandler) {\r\n      customApplyRedactionsHandler(redactionAnnotationsList, originalApplyRedactions);\r\n    } else {\r\n      originalApplyRedactions();\r\n    }\r\n  };\r\n  const closeRedactionPanel = () => {\r\n    const tempDataElement = props.isCustomPanel ? props.dataElement : 'redactionPanel';\r\n    dispatch(actions.closeElement(tempDataElement));\r\n  };\r\n\r\n  const renderMobileCloseButton = () => {\r\n    return (\r\n      <div className=\"close-container\">\r\n        <div className=\"close-icon-container\" onClick={closeRedactionPanel}>\r\n          <Icon glyph=\"ic_close_black_24px\" className=\"close-icon\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const style = props.isCustomPanel || !isInDesktopOnlyMode && isMobile ? {} : { width: `${redactionPanelWidth}px`, minWidth: `${redactionPanelWidth}px` };\r\n\r\n  const { isRedactionSearchActive } = useContext(RedactionPanelContext);\r\n\r\n  const [renderNull, setRenderNull] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setRenderNull(!isOpen);\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  if (isDisabled || (!isOpen && renderNull && !props.isCustomPanel)) {\r\n    return null;\r\n  }\r\n\r\n  const dataElement = props.isCustomPanel ? props.dataElement : 'redactionPanel';\r\n\r\n  return (\r\n    <DataElementWrapper dataElement={dataElement} className=\"Panel RedactionPanel\" style={style}>\r\n      {!isInDesktopOnlyMode && isMobile && renderMobileCloseButton()}\r\n      <RedactionSearchPanel />\r\n      {!isRedactionSearchActive && (\r\n        <RedactionPanel\r\n          redactionAnnotations={redactionAnnotationsList}\r\n          redactionTypesDictionary={redactionTypesDictionary}\r\n          applyAllRedactions={applyAllRedactions}\r\n          deleteAllRedactionAnnotations={deleteAllRedactionAnnotations}\r\n        />\r\n      )}\r\n    </DataElementWrapper>\r\n  );\r\n};\r\n\r\nconst RedactionPanelContainerWithProvider = (props) => {\r\n  return (\r\n    <RedactionPanelProvider>\r\n      <RedactionPanelContainer {...props} />\r\n    </RedactionPanelProvider>\r\n  );\r\n};\r\n\r\nexport default RedactionPanelContainerWithProvider;","import RedactionPanelContainerWithProvider from './RedactionPanelContainer';\r\n\r\nexport default RedactionPanelContainerWithProvider;","import core from 'core';\r\nimport i18next from 'i18next';\r\n\r\nimport actions from 'actions';\r\nimport { fireError } from 'helpers/fireEvent';\r\nimport downloadPdf from 'helpers/downloadPdf';\r\n\r\nfunction noop() { }\r\n\r\nexport default (annotations, onRedactionCompleted = noop, activeDocumentViewerKey = 1) => (dispatch) => {\r\n  if (core.isWebViewerServerDocument()) {\r\n    // when are using Webviewer Server, it'll download the redacted document\r\n    return webViewerServerApply(annotations, dispatch, activeDocumentViewerKey);\r\n  }\r\n  return webViewerApply(annotations, onRedactionCompleted, dispatch, activeDocumentViewerKey);\r\n};\r\n\r\nconst webViewerServerApply = (annotations, dispatch, activeDocumentViewerKey) => core.applyRedactions(annotations, activeDocumentViewerKey).then((results) => {\r\n  if (results && results.url) {\r\n    return downloadPdf(dispatch, {\r\n      filename: 'redacted.pdf',\r\n      includeAnnotations: true,\r\n      externalURL: results.url,\r\n    });\r\n  }\r\n  console.warn('WebViewer Server did not return a valid result');\r\n});\r\n\r\nconst webViewerApply = (annotations, onRedactionCompleted, dispatch, activeDocumentViewerKey) => {\r\n  const message = i18next.t('warning.redaction.applyMessage');\r\n  const title = i18next.t('warning.redaction.applyTile');\r\n  const confirmBtnText = i18next.t('action.apply');\r\n\r\n  const warning = {\r\n    message,\r\n    title,\r\n    confirmBtnText,\r\n    onConfirm: () => {\r\n      core.applyRedactions(annotations, activeDocumentViewerKey)\r\n        .then(() => {\r\n          onRedactionCompleted();\r\n        })\r\n        .catch((err) => fireError(err));\r\n      return Promise.resolve();\r\n    },\r\n  };\r\n\r\n  return dispatch(actions.showWarningMessage(warning));\r\n};\r\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".collapsible-page-group-header{display:flex;justify-content:space-between;align-items:baseline}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".redaction-item{display:flex;align-items:center;padding:12px 16px}.redaction-item:hover{background-color:var(--view-header-button-hover);cursor:pointer}.redaction-item-selected{background-color:var(--view-header-button-active)!important}.redaction-item-info{flex:1;padding-left:18px;padding-right:20px}.redaction-item-preview{font-size:13px;color:var(--text-color)}.redaction-item-date-author{font-size:10px;color:var(--faded-text)}.redaction-item-label-text{font-size:10px;margin:2px 0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".redaction-items{margin-top:8px;background-color:var(--component-background);border:1px solid var(--border);border-radius:4px}.redaction-items>:first-child{padding-top:16px}.redaction-items>:last-child{padding-bottom:16px}.redaction-page-group{padding-top:12px;padding-bottom:12px}.redaction-page-group-header{display:flex;justify-content:space-between;align-items:baseline}.redaction-page-group-number{font-size:13px;color:var(--faded-text)}.expand-arrow{height:16px;cursor:pointer}.expand-arrow .Icon{width:12px;height:5px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.RedactionPanel{padding:16px 16px 0;display:flex;flex-direction:column}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RedactionPanel{width:100%;min-width:100%;padding-top:0}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RedactionPanel .close-container{display:flex;align-items:center;justify-content:flex-end;height:64px;width:100%;padding-right:12px}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RedactionPanel .close-container .close-icon-container{cursor:pointer}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RedactionPanel .close-container .close-icon-container .close-icon{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .RedactionPanel{width:100%;min-width:100%;padding-top:0}.App.is-web-component:not(.is-in-desktop-only-mode) .RedactionPanel .close-container{display:flex;align-items:center;justify-content:flex-end;height:64px;width:100%;padding-right:12px}.App.is-web-component:not(.is-in-desktop-only-mode) .RedactionPanel .close-container .close-icon-container{cursor:pointer}.App.is-web-component:not(.is-in-desktop-only-mode) .RedactionPanel .close-container .close-icon-container .close-icon{width:24px;height:24px}}.RedactionPanel .marked-redaction-counter{flex:0 1 19px;margin-top:24px;margin-bottom:12px;font-size:16px}.RedactionPanel .marked-redaction-counter span{font-weight:700}.RedactionPanel .no-marked-redactions{display:flex;flex-direction:column;align-items:center;flex:1 1 auto}.RedactionPanel .no-marked-redactions .msg{text-align:center}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RedactionPanel .no-marked-redactions .msg{line-height:15px;width:146px}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .RedactionPanel .no-marked-redactions .msg{line-height:15px;width:146px}}.RedactionPanel .no-marked-redactions .empty-icon,.RedactionPanel .no-marked-redactions .empty-icon svg{width:65px;height:83px}.RedactionPanel .no-marked-redactions .empty-icon *{fill:var(--gray-5);color:var(--gray-5)}.RedactionPanel .redaction-panel-controls{flex:0 0 57px;margin-left:-16px;padding-top:13px;border-top:1px solid var(--divider);display:flex;background-color:var(--component-background);width:inherit;justify-content:flex-end;padding-right:16px}.RedactionPanel .redaction-panel-controls .redact-all-marked{padding:0;border:none;background-color:transparent;background-color:var(--primary-button);color:var(--primary-button-text);border-radius:4px;height:32px;width:90px;cursor:pointer}:host(:not([data-tabbing=true])) .RedactionPanel .redaction-panel-controls .redact-all-marked,html:not([data-tabbing=true]) .RedactionPanel .redaction-panel-controls .redact-all-marked{outline:none}.RedactionPanel .redaction-panel-controls .redact-all-marked.disabled{opacity:.5;cursor:not-allowed}.RedactionPanel .redaction-panel-controls .clear-all-marked{color:var(--secondary-button-text);background-color:transparent;border:none;height:32px;width:70px;padding:0 5px 0 0;cursor:pointer}:host(:not([data-tabbing=true])) .RedactionPanel .redaction-panel-controls .clear-all-marked,html:not([data-tabbing=true]) .RedactionPanel .redaction-panel-controls .clear-all-marked{outline:none}.RedactionPanel .redaction-panel-controls .clear-all-marked.disabled{opacity:.5;cursor:not-allowed}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RedactionPanel .redaction-panel-controls{left:0}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .RedactionPanel .redaction-panel-controls{left:0}}.RedactionPanel .redaction-group-container{overflow-y:scroll;flex:1 1 auto}.flx-Panel-container .RedactionPanel{height:100%;padding:unset}.flx-Panel-container .RedactionPanel .redaction-panel-controls{margin-right:-16px;padding-bottom:16px}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.RedactionSearchOverlay input{width:100%;padding:6px}.RedactionSearchOverlay input::-moz-placeholder{color:var(--placeholder-text)}.RedactionSearchOverlay input::placeholder{color:var(--placeholder-text)}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".redaction-search-results-page-number{display:flex;align-items:center;margin-left:11px!important}.redaction-search-results-page-number label{font-size:13px;color:var(--faded-text)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".redaction-search-result{display:flex;align-items:center;padding:12px;background-color:var(--component-background);border-radius:4px;box-shadow:0 0 3px var(--document-box-shadow);margin:8px 0}.redaction-search-result .Icon svg{transform:scale(1.2);padding-top:2px}.redaction-search-result .search-value{word-break:break-all;color:var(--secondary-button-text);font-weight:700}.redaction-search-result.active{background-color:var(--view-header-button-active)!important}.redaction-search-result-info{font-size:13px;color:var(--text-color)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.redaction-search-counter-controls{display:flex;flex-direction:row;margin-top:49px;font-size:var(--font-size-default);padding:16px;border:1px solid var(--border);background-color:var(--gray-0);border-radius:4px 4px 0 0;max-height:50px;min-height:50px}.redaction-search-counter-controls .redaction-search-results-counter{flex:3 1 auto}.redaction-search-counter-controls .redaction-search-results-counter span{font-weight:700}.redaction-search-counter-controls .spinner{margin:auto;flex:3 1 \\\"25px\\\"}.redaction-search-counter-controls button{padding:0;background-color:transparent;flex:1 1 auto;color:var(--secondary-button-text);border:none;cursor:pointer}:host(:not([data-tabbing=true])) .redaction-search-counter-controls button,html:not([data-tabbing=true]) .redaction-search-counter-controls button{outline:none}.redaction-search-counter-controls button.disabled{opacity:.5;cursor:not-allowed}.redaction-search-results-container{flex:1 1 auto;background-color:var(--gray-2);color:var(--placeholder-text);font-size:13px;border-left:1px solid var(--border);border-right:1px solid var(--border);display:flex;flex-direction:column}.redaction-search-no-results,.redaction-search-results-container.emptyList{justify-content:center;align-items:center}.redaction-search-panel-controls{display:flex;flex-direction:row;flex:0 1 52px;padding:12px;background-color:var(--component-background);border:1px solid var(--border);margin-bottom:16px}.redaction-search-panel-controls button{border:none;background-color:transparent;height:28px;padding:6px 16px;cursor:pointer}:host(:not([data-tabbing=true])) .redaction-search-panel-controls button,html:not([data-tabbing=true]) .redaction-search-panel-controls button{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .redaction-search-panel-controls button{height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .redaction-search-panel-controls button{height:32px}}.redaction-search-panel-controls .cancel{flex:2 1 auto;color:var(--secondary-button-text);border:none;cursor:pointer;margin-right:20px}.redaction-search-panel-controls .redact-all-selected{flex:1 1 auto;border:1px solid var(--secondary-button-text);border-radius:4px;color:var(--secondary-button-text);margin-right:8px}.redaction-search-panel-controls .redact-all-selected.disabled{opacity:.5;cursor:not-allowed}.redaction-search-panel-controls .mark-all-selected{flex:1 1 auto;background-color:var(--primary-button);border:1px solid var(--primary-button);color:var(--primary-button-text);border-radius:4px;cursor:pointer}.redaction-search-panel-controls .mark-all-selected.disabled{opacity:.5;cursor:not-allowed}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./CollapsiblePanelGroup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./RedactionItem.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./RedactionPageGroup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./RedactionPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./RedactionSearchOverlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./RedactionSearchResultGroup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./RedactionSearchResult.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./RedactionSearchResults.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["props","header","children","className","role","style","_useState2","useState","isExpanded","setIsExpanded","t","useTranslation","React","Button","title","img","onClick","EmotionNonceProvider","_NonceProvider","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","nonce","createCache","container","_inherits","NonceProvider","_ref","window","isApryseWebViewerWebComponent","getRootNode","RedactionPanelContext","RedactionPanelProvider","_slicedToArray","selectedRedactionItemId","setSelectedRedactionItemId","_useState4","isRedactionSearchActive","setIsRedactionSearchActive","_useState6","activeSearchResultIndex","setActiveSearchResultIndex","useEffect","onAnnotationSelected","annotations","action","redactionAnnotations","filter","annotation","Subject","selectedAnnotationId","Id","activeSearchResultChanged","newActiveSearchResult","newActiveSearchResultIndex","core","getPageSearchResults","findIndex","searchResult","isSearchResultEqual","addEventListener","removeEventListener","value","Provider","redactionPanelWidth","useSelector","state","selectors","getRedactionPanelWidth","shallowEqual","NoteTextPreview","_extends","panelWidth","comment","RedactionItem","iconColor","author","dateFormat","language","onRedactionItemDelete","onRedactionItemSelection","textPreview","isSelected","timezone","date","getLatestActivityDate","datetimeStr","toLocaleString","timeZone","Date","redactionPreview","formattedDate","dayjs","locale","format","dateAndAuthor","classNames","label","_annotation$icon","icon","redactionType","redactionTypeMap","RedactionTextPreview","linesToBreak","getContents","onKeyUp","event","key","tabIndex","Icon","glyph","color","OverlayText","marginLeft","ariaLabel","_useContext","useContext","_useSelector2","getNoteDateFormat","getCurrentLanguage","getCustomNoteSelectionFunction","getTimezone","customNoteSelectionFunction","getCustomData","StrokeColor","toString","getDisplayAuthor","useCallback","deselectAllAnnotations","selectAnnotation","jumpToAnnotation","deleteAnnotations","pageNumber","redactionItems","CollapsiblePanelGroup","map","redactionItem","sortedRedactionItems","setSortedRedactionItems","getSortStrategies","getSortedNotes","RedactionPageGroup","applyAllRedactions","deleteAllRedactionAnnotations","redactionTypesDictionary","redactionPageMap","setRedactionPageMap","redactionPageNumbers","setRedactionPageNumbers","isTestMode","forEach","mapAnnotationToRedactionType","PageNumber","undefined","Object","keys","testModeProps","noRedactionAnnotations","redactAllButtonClassName","disabled","clearAllButtonClassName","initialItemCount","Virtuoso","data","itemContent","index","ReactSelectWebComponentProvider","CreatableSelect","isMulti","RedactionOption","components","Option","MultiValueLabel","display","height","isDarkMode","activeTheme","redactionSearchOptions","redactionGroup","options","styles","groupHeading","base","_objectSpread","textTransform","fontSize","paddingBottom","paddingLeft","paddingTop","group","padding","menu","menuList","backgroundColor","multiValue","borderRadius","option","isFocused","valueContainer","maxHeight","overflowY","control","minHeight","borderColor","placeholder","input","CreatableMultiSelect","IndicatorsContainer","formatCreateLabel","buildSearchOptions","searchTerms","textSearch","caseSensitive","searchTerm","type","push","regex","ignoreCase","setSearchTerms","executeRedactionSearch","DataElementWrapper","dataElement","RedactionSearchMultiSelect","onFocus","onCreateOption","newValue","textTerm","updatedSearchTerms","onChange","store","getState","redactionSearchPatterns","getRedactionSearchPatterns","searchOptionsMap","reduce","_redactionSearchPatte","searchArray","searchType","searchRegex","source","searchString","join","searchTextFullFactory","searchTextFull","clearSearchResults","useStore","getActiveTheme","values","pattern","RedactionSearchOverlay","multiSearchFactory","multiSearch","RedactionSearchResult","isChecked","onClickResult","isActive","displayResult","ambientStr","resultStrStart","resultStrEnd","resultStr","searchValue","slice","textBeforeSearchValue","textAfterSearchValue","displayRedactionSearchResult","searchResultClassname","active","paddingRight","Choice","checked","checkResult","setActiveSearchResult","searchResults","selectedSearchResultIndexes","setSelectedSearchResultIndexes","groupResultIndexes","result","allItemsChecked","setAllItemsChecked","allResultsSelected","allSelected","currentIndex","checkAllResults","target","resultIndex","redactionSearchResults","searchStatus","onCancelSearch","isProcessingRedactionResults","markSelectedResultsForRedaction","redactSelectedResults","redactionSearchResultPageMap","setRedactionSearchResultPageMap","selectedSearchResultIndexesMap","setSelectedSearchResultIndexesMap","selectedIndexes","setSelectedIndexes","pageNum","selectedIndexesMap","redactionSearchResult","noResults","isEmptyList","resultsContainerClass","emptyList","redactAllButtonClass","markAllForRedactionButtonClass","shouldShowResultsCounterOptions","SearchStatus","flexGrow","Spinner","width","searchResultIndexMap","resultGroupPageNumbers","RedactionSearchResultGroup","renderSearchResults","defaultRedactionStyles","Core","Annotations","Color","TextColor","Font","createRedactionAnnotations","activeToolStyles","FillColor","_activeToolStyles$Fon","redaction","RedactionAnnotation","page_num","Quads","quads","quad","getPoints","setContents","result_str","Author","getCurrentUser","setCustomData","dispatch","useDispatch","getActiveToolStyles","getActiveToolName","activeToolName","includes","getAnnotationManager","addAnnotations","RedactionSearchResults","applyRedactions","clearRedactionSearchResults","_useOnRedactionSearch","setSearchStatus","setRedactionSearchResults","setIsProcessingRedactionResults","searchPatterns","useMemo","mapResultToType","resultType","find","test","_ref$icon","onSearchResultsChanged","results","mappedResults","searchInProgressEventHandler","isSearching","setTimeout","useOnRedactionSearchCompleted","RedactionSearchPanel","RedactionPanelContainer","isElementOpen","isElementDisabled","isInDesktopOnlyMode","getCustomApplyRedactionsHandler","isOpen","isDisabled","customApplyRedactionsHandler","isMobile","isMobileSize","redactionAnnotationsList","defaultRedactionTypes","closeRedactionPanel","tempDataElement","isCustomPanel","actions","closeElement","minWidth","renderNull","setRenderNull","timeout","clearTimeout","RedactionPanel","originalApplyRedactions","callOnRedactionCompleted","noop","onRedactionCompleted","activeDocumentViewerKey","isWebViewerServerDocument","webViewerServerApply","webViewerApply","then","url","downloadPdf","filename","includeAnnotations","externalURL","console","warn","warning","message","i18next","confirmBtnText","onConfirm","err","fireError","Promise","resolve","showWarningMessage","exports","___CSS_LOADER_API_IMPORT___","module","id","locals","api","content","__esModule","default","styleTag","document","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","tagName","root","elements","querySelectorAll","el","shadowRoot","clonedStyleTags","i","webComponent","onload","styleNode","innerHTML","cloneNode"],"sourceRoot":""}
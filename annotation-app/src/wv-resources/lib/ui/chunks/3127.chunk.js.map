{"version":3,"file":"chunks/3127.chunk.js","mappings":"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","sources":["webpack://webviewer-ui/./src/components/RichTextStyleEditor/RichTextStyleEditor.js","webpack://webviewer-ui/./src/components/RichTextStyleEditor/index.js","webpack://webviewer-ui/./src/components/StylePicker/SnapModeToggle/SnapModeToggle.js","webpack://webviewer-ui/./src/components/StylePicker/SnapModeToggle/index.js","webpack://webviewer-ui/./src/helpers/stylePanelHelper.js","webpack://webviewer-ui/./src/components/StylePicker/StylePicker.js","webpack://webviewer-ui/./src/components/StylePicker/index.js","webpack://webviewer-ui/./src/components/StylePanel/StylePanel.js","webpack://webviewer-ui/./src/components/StylePanel/StylePanelContainer.js","webpack://webviewer-ui/./src/components/StylePanel/index.js","webpack://webviewer-ui/./src/components/StylePicker/ColorPicker/ColorPicker.js","webpack://webviewer-ui/./src/components/StylePicker/ColorPicker/index.js","webpack://webviewer-ui/./src/components/RichTextStyleEditor/RichTextStyleEditor.scss","webpack://webviewer-ui/./src/components/StylePanel/StylePanel.scss","webpack://webviewer-ui/./src/components/StylePicker/ColorPicker/ColorPicker.scss","webpack://webviewer-ui/./src/components/StylePicker/StylePicker.scss","webpack://webviewer-ui/./src/components/RichTextStyleEditor/RichTextStyleEditor.scss?e056","webpack://webviewer-ui/./src/components/StylePanel/StylePanel.scss?b243","webpack://webviewer-ui/./src/components/StylePicker/ColorPicker/ColorPicker.scss?5eed","webpack://webviewer-ui/./src/components/StylePicker/StylePicker.scss?d3c4"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ColorPicker from 'components/StylePicker/ColorPicker';\r\nimport core from 'core';\r\nimport actions from 'actions';\r\nimport selectors from 'selectors';\r\nimport './RichTextStyleEditor.scss';\r\nimport DataElements from 'constants/dataElement';\r\nimport TextStylePicker from 'components/TextStylePicker';\r\nimport adjustFreeTextBoundingBox from 'helpers/adjustFreeTextBoundingBox';\r\n\r\nconst propTypes = {\r\n  annotation: PropTypes.object,\r\n  editor: PropTypes.object,\r\n  style: PropTypes.shape({\r\n    TextColor: PropTypes.object,\r\n    RichTextStyle: PropTypes.any,\r\n  }),\r\n  isFreeTextAutoSize: PropTypes.bool,\r\n  onFreeTextSizeToggle: PropTypes.func,\r\n  onPropertyChange: PropTypes.func,\r\n  onRichTextStyleChange: PropTypes.func,\r\n  isRedaction: PropTypes.bool,\r\n  isRichTextEditMode: PropTypes.bool,\r\n  setIsRichTextEditMode: PropTypes.func,\r\n  isTextStylePickerHidden: PropTypes.bool,\r\n};\r\n\r\nconst RichTextStyleEditor = ({\r\n  annotation, editor,\r\n  style,\r\n  isFreeTextAutoSize,\r\n  onFreeTextSizeToggle,\r\n  onPropertyChange,\r\n  onRichTextStyleChange,\r\n  isRichTextEditMode,\r\n  setIsRichTextEditMode,\r\n  isRedaction,\r\n  isTextStylePickerHidden,\r\n  activeTool,\r\n  textSizeSliderComponent,\r\n}) => {\r\n  const [\r\n    fonts,\r\n  ] = useSelector(\r\n    (state) => [\r\n      selectors.getFonts(state),\r\n    ],\r\n    shallowEqual,\r\n  );\r\n\r\n  const [format, setFormat] = useState({});\r\n  const editorRef = useRef(null);\r\n  const annotationRef = useRef(null);\r\n  const propertiesRef = useRef({});\r\n  const dispatch = useDispatch();\r\n  const oldSelectionRef = useRef();\r\n  const richTextEditModeRef = useRef();\r\n  richTextEditModeRef.current = isRichTextEditMode;\r\n\r\n  useEffect(() => {\r\n    const handleSelectionChange = (range, oldRange) => {\r\n      const shouldRestoreLostSelection = !range && oldRange && editorRef.current;\r\n      if (shouldRestoreLostSelection) {\r\n        editorRef.current.setSelection(oldRange.index, oldRange.length);\r\n      }\r\n      if (range && editorRef.current) {\r\n        setFormat(getFormat(range));\r\n      }\r\n    };\r\n    const handleTextChange = () => {\r\n      setFormat(getFormat(editorRef.current?.getSelection()));\r\n    };\r\n    core.addEventListener('editorSelectionChanged', handleSelectionChange);\r\n    core.addEventListener('editorTextChanged', handleTextChange);\r\n    // Have to disable instead of closing because annotation popup will reopen itself\r\n    dispatch(actions.disableElements([DataElements.ANNOTATION_STYLE_POPUP]));\r\n    return () => {\r\n      core.removeEventListener('editorSelectionChanged', handleSelectionChange);\r\n      core.removeEventListener('editorTextChanged', handleTextChange);\r\n      dispatch(actions.enableElements([DataElements.ANNOTATION_STYLE_POPUP]));\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    editorRef.current = editor;\r\n    annotationRef.current = annotation;\r\n    if (isRichTextEditMode && annotation) {\r\n      let StrokeStyle = 'solid';\r\n      try {\r\n        StrokeStyle = (annotation['Style'] === 'dash')\r\n          ? `${annotation['Style']},${annotation['Dashes']}`\r\n          : annotation['Style'];\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n      const richTextStyles = annotation.getRichTextStyle();\r\n      const stylesTemp = richTextStyles[0];\r\n\r\n      propertiesRef.current = {\r\n        Font: annotation.Font,\r\n        FontSize: annotation.FontSize,\r\n        TextAlign: annotation.TextAlign,\r\n        TextVerticalAlign: annotation.TextVerticalAlign,\r\n        bold: stylesTemp?.['font-weight'] === 'bold' ?? false,\r\n        italic: stylesTemp?.['font-style'] === 'italic' ?? false,\r\n        underline: stylesTemp?.['text-decoration']?.includes('underline')\r\n          || stylesTemp?.['text-decoration']?.includes('word'),\r\n        strikeout: stylesTemp?.['text-decoration']?.includes('line-through') ?? false,\r\n        size: stylesTemp?.['font-size'],\r\n        font: stylesTemp?.['font-family'],\r\n        StrokeStyle,\r\n        calculatedFontSize: annotation.getCalculatedFontSize()\r\n      };\r\n    }\r\n\r\n    setFormat(getFormat(editorRef.current?.getSelection()));\r\n\r\n    if (oldSelectionRef.current) {\r\n      editorRef.current.setSelection(oldSelectionRef.current);\r\n      oldSelectionRef.current = null;\r\n    }\r\n  }, [annotation, editor, isRichTextEditMode]);\r\n\r\n  useEffect(() => {\r\n    const handleEditorBlur = () => {\r\n      editorRef.current = null;\r\n      annotationRef.current = null;\r\n      setIsRichTextEditMode(false);\r\n    };\r\n    const handleEditorFocus = () => {\r\n      setIsRichTextEditMode(true);\r\n    };\r\n\r\n    core.addEventListener('editorBlur', handleEditorBlur);\r\n    core.addEventListener('editorFocus', handleEditorFocus);\r\n    return () => {\r\n      core.removeEventListener('editorBlur', handleEditorBlur);\r\n      core.removeEventListener('editorFocus', handleEditorFocus);\r\n    };\r\n  }, [dispatch]);\r\n\r\n\r\n  const getFormat = (range) => {\r\n    if (!range) {\r\n      return {};\r\n    }\r\n\r\n    const format = editorRef.current.getFormat(range.index, range.length);\r\n\r\n    if (typeof format.color === 'string') {\r\n      format.color = new window.Core.Annotations.Color(format.color);\r\n    } else if (Array.isArray(format.color)) {\r\n      // the selection contains multiple color, so we set the current color to the last selected color\r\n      const lastSelectedColor = new window.Core.Annotations.Color(format.color[format.color.length - 1]);\r\n      format.color = lastSelectedColor;\r\n    } else if (!format.color) {\r\n      format.color = annotationRef.current.TextColor;\r\n    }\r\n\r\n    const propertiesToCheck = ['font', 'size', 'originalSize'];\r\n\r\n    for (const prop of propertiesToCheck) {\r\n      if (format[prop] && Array.isArray(format[prop])) {\r\n        format[prop] = undefined;\r\n      }\r\n    }\r\n\r\n    return format;\r\n  };\r\n\r\n  const handleTextFormatChange = (format) => () => {\r\n    let { index, length } = editorRef.current.getSelection();\r\n    if (length === 0) {\r\n      oldSelectionRef.current = { index, length };\r\n      const newSelection = editorRef.current.getSelection();\r\n      index = newSelection.index;\r\n      length = newSelection.length;\r\n    }\r\n    const currentFormat = editorRef.current.getFormat(index, length);\r\n\r\n    applyFormat(format, !currentFormat[format]);\r\n  };\r\n\r\n  const handleColorChange = (name, color) => {\r\n    if (!richTextEditModeRef.current) {\r\n      onPropertyChange(name, color);\r\n      return;\r\n    }\r\n    applyFormat('color', color.toHexString());\r\n  };\r\n\r\n  const applyFormat = (formatKey, value) => {\r\n    if (formatKey === 'size') {\r\n      editorRef.current?.format('applyCustomFontSize', value);\r\n    } else {\r\n      editorRef.current?.format(formatKey, value);\r\n    }\r\n\r\n    if (formatKey === 'color') {\r\n      value = new window.Core.Annotations.Color(value);\r\n    }\r\n\r\n    // format the entire editor doesn't trigger the editorTextChanged event, so we set the format state here\r\n    setFormat({\r\n      ...format,\r\n      [formatKey]: value\r\n    });\r\n  };\r\n\r\n  // onPropertyChange\r\n  const handlePropertyChange = (property, value) => {\r\n    if (!richTextEditModeRef.current) {\r\n      onPropertyChange(property, value);\r\n      return;\r\n    }\r\n\r\n    const { index, length } = editorRef.current.getSelection();\r\n    const annotation = annotationRef.current;\r\n    annotation[property] = value;\r\n    editorRef.current.blur();\r\n    if (property === 'FontSize' || property === 'Font') {\r\n      adjustFreeTextBoundingBox(annotation);\r\n    }\r\n    setTimeout(() => {\r\n      oldSelectionRef.current = { index, length };\r\n      const editBoxManager = core.getAnnotationManager().getEditBoxManager();\r\n      editBoxManager.focusBox(annotation);\r\n    }, 0);\r\n  };\r\n\r\n\r\n  // onRichTextStyleChange\r\n  const handleRichTextStyleChange = (property, value) => {\r\n    if (!richTextEditModeRef.current) {\r\n      onRichTextStyleChange(property, value);\r\n      return;\r\n    }\r\n\r\n    const propertyTranslation = {\r\n      'font-weight': 'bold',\r\n      'font-style': 'italic',\r\n      'underline': 'underline',\r\n      'line-through': 'strike',\r\n      'font-family': 'font',\r\n      'font-size': 'size',\r\n    };\r\n    if (property === 'font-family' || property === 'font-size') {\r\n      applyFormat(propertyTranslation[property], value);\r\n      const freeText = annotationRef.current;\r\n      if (freeText.isAutoSized()) {\r\n        const editBoxManager = core.getAnnotationManager().getEditBoxManager();\r\n        editBoxManager.resizeAnnotation(freeText);\r\n      }\r\n    } else {\r\n      handleTextFormatChange(propertyTranslation[property])();\r\n    }\r\n  };\r\n\r\n  let properties = {};\r\n\r\n  const { RichTextStyle } = style;\r\n  const defaults = {\r\n    bold: RichTextStyle?.[0]?.['font-weight'] === 'bold' ?? false,\r\n    italic: RichTextStyle?.[0]?.['font-style'] === 'italic' ?? false,\r\n    underline: RichTextStyle?.[0]?.['text-decoration']?.includes('underline') || RichTextStyle?.[0]?.['text-decoration']?.includes('word'),\r\n    strikeout: RichTextStyle?.[0]?.['text-decoration']?.includes('line-through') ?? false,\r\n    font: RichTextStyle?.[0]?.['font-family'],\r\n    size: RichTextStyle?.[0]?.['font-size'],\r\n    StrokeStyle: 'solid',\r\n  };\r\n\r\n  properties = {\r\n    ...style,\r\n    ...defaults,\r\n  };\r\n\r\n  if (isRichTextEditMode && annotation) {\r\n    propertiesRef.current.bold = format.bold;\r\n    propertiesRef.current.italic = format.italic;\r\n    propertiesRef.current.underline = format.underline;\r\n    propertiesRef.current.strikeout = format.strike;\r\n    propertiesRef.current.quillFont = format.font || propertiesRef.current.Font;\r\n    propertiesRef.current.quillFontSize = format.originalSize || propertiesRef.current.FontSize;\r\n  }\r\n\r\n  return (\r\n    <div className=\"RichTextStyleEditor\"\r\n      onMouseDown={(e) => {\r\n        if (e.type !== 'touchstart' && isRichTextEditMode) {\r\n          e.preventDefault();\r\n        }\r\n      }}\r\n    >\r\n      {!isTextStylePickerHidden && (\r\n        <div className=\"menu-items\">\r\n          <TextStylePicker\r\n            fonts={fonts}\r\n            onPropertyChange={handlePropertyChange}\r\n            onRichTextStyleChange={handleRichTextStyleChange}\r\n            properties={isRichTextEditMode ? propertiesRef.current : properties}\r\n            stateless={true}\r\n            isFreeText={!isRedaction}\r\n            onFreeTextSizeToggle={onFreeTextSizeToggle}\r\n            isFreeTextAutoSize={isFreeTextAutoSize}\r\n            isRichTextEditMode={isRichTextEditMode}\r\n            isRedaction={isRedaction}\r\n          />\r\n        </div>\r\n      )}\r\n      <ColorPicker\r\n        onColorChange={(color) => {\r\n          handleColorChange('TextColor', new window.Core.Annotations.Color(color));\r\n        }}\r\n        color={isRichTextEditMode ? format.color : style['TextColor']}\r\n        activeTool={activeTool}\r\n        type={'Text'}\r\n      />\r\n      {textSizeSliderComponent}\r\n    </div>\r\n  );\r\n};\r\nRichTextStyleEditor.propTypes = propTypes;\r\n\r\nexport default React.memo(RichTextStyleEditor);\r\n","import RichTextStyleEditor from './RichTextStyleEditor';\r\n\r\nexport default RichTextStyleEditor;","import React from 'react';\r\nimport { workerTypes } from 'constants/types';\r\nimport core from 'core';\r\nimport i18next from 'i18next';\r\nimport Choice from 'components/Choice/Choice';\r\nimport getMeasurementTools from 'helpers/getMeasurementTools';\r\nimport actions from 'actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst SnapModeToggle = ({\r\n  Scale,\r\n  Precision,\r\n  isSnapModeEnabled,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const wasDocumentSwappedToClientSide =\r\n    core.getDocument()?.getType() === workerTypes.WEBVIEWER_SERVER && core.getDocument().isWebViewerServerDocument();\r\n  const isEligibleDocumentForSnapping = core.getDocument()?.getType().toLowerCase() === workerTypes.PDF || wasDocumentSwappedToClientSide;\r\n  const showMeasurementSnappingOption = Scale && Precision && isEligibleDocumentForSnapping && core.isFullPDFEnabled();\r\n\r\n  const onSnappingChange = (event) => {\r\n    if (!core.isFullPDFEnabled()) {\r\n      return;\r\n    }\r\n\r\n    const enableSnapping = event.target.checked;\r\n    const mode = enableSnapping\r\n      ? core.getDocumentViewer().SnapMode.e_DefaultSnapMode | core.getDocumentViewer().SnapMode.POINT_ON_LINE\r\n      : null;\r\n    const measurementTools = getMeasurementTools();\r\n\r\n    measurementTools.forEach((tool) => {\r\n      tool.setSnapMode?.(mode);\r\n    });\r\n\r\n    dispatch(actions.setEnableSnapMode(enableSnapping));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showMeasurementSnappingOption && (\r\n        <div className=\"snapping-option\">\r\n          <Choice\r\n            dataElement=\"measurementSnappingOption\"\r\n            id=\"measurement-snapping\"\r\n            type=\"checkbox\"\r\n            label={i18next.t('option.shared.enableSnapping')}\r\n            checked={isSnapModeEnabled}\r\n            onChange={onSnappingChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SnapModeToggle;","import SnapModeToggle from './SnapModeToggle';\r\n\r\nexport default SnapModeToggle;","import core from 'core';\r\n\r\nconst Tools = window.Core.Tools;\r\n\r\nexport const shouldHideStylePanelOptions = (toolName) => {\r\n  const toolsNoStylePanelOptions = [\r\n    Tools.CheckBoxFormFieldCreateTool,\r\n    Tools.RadioButtonFormFieldCreateTool,\r\n    Tools.AddParagraphTool,\r\n    Tools.AddImageContentTool,\r\n    Tools.CropCreateTool,\r\n    Tools.SnippingCreateTool,\r\n    Tools.SignatureFormFieldCreateTool,\r\n  ];\r\n\r\n  return toolsNoStylePanelOptions.some((tool) => core.getTool(toolName) instanceof tool);\r\n};\r\n\r\nexport const hasFillColorAndCollapsablePanelSections = (toolName) => {\r\n  const toolsWithCollapsedStylePanels = [\r\n    Tools.RectangleCreateTool,\r\n    Tools.EllipseCreateTool,\r\n    Tools.PolygonCreateTool,\r\n    Tools.PolygonCloudCreateTool,\r\n    Tools.EllipseMeasurementCreateTool,\r\n    Tools.AreaMeasurementCreateTool,\r\n    Tools.FreeTextCreateTool,\r\n    Tools.CalloutCreateTool,\r\n    Tools.RedactionCreateTool,\r\n  ];\r\n\r\n  return toolsWithCollapsedStylePanels.some((tool) => core.getTool(toolName) instanceof tool);\r\n};\r\n\r\nexport const shouldHideFillColorAndCollapsablePanelSections = (toolName) => {\r\n  const toolsWithHiddenFillColorSections = [\r\n    Tools.SignatureFormFieldCreateTool,\r\n    Tools.RubberStampCreateTool,\r\n    Tools.StampCreateTool,\r\n    Tools.EraserTool,\r\n  ];\r\n  return toolsWithHiddenFillColorSections.some((tool) => core.getTool(toolName) instanceof tool);\r\n};\r\n\r\nexport const shouldHideStrokeSlider = (toolName) => {\r\n  const toolsWithHiddenStrokeSlider = [\r\n    Tools.TextUnderlineCreateTool,\r\n    Tools.TextHighlightCreateTool,\r\n    Tools.TextSquigglyCreateTool,\r\n    Tools.TextStrikeoutCreateTool,\r\n    Tools.CountMeasurementCreateTool,\r\n    Tools.RubberStampCreateTool,\r\n    Tools.FileAttachmentCreateTool,\r\n    Tools.StampCreateTool,\r\n    Tools.StickyCreateTool,\r\n    Tools.MarkInsertTextCreateTool,\r\n    Tools.MarkReplaceTextCreateTool,\r\n  ];\r\n  return toolsWithHiddenStrokeSlider.some((tool) => core.getTool(toolName) instanceof tool);\r\n};\r\n\r\nexport const shouldHideStrokeStyle = (toolName) => {\r\n  const toolsWithHiddenStrokeStyle = [\r\n    Tools.RubberStampCreateTool,\r\n    Tools.StampCreateTool,\r\n    Tools.EraserTool,\r\n  ];\r\n  return toolsWithHiddenStrokeStyle.some((tool) => core.getTool(toolName) instanceof tool);\r\n};\r\n\r\nexport const shouldShowTextStyle = (toolName) => {\r\n  const toolsWithHiddenStrokeSlider = [\r\n    Tools.FreeTextCreateTool,\r\n    Tools.CalloutCreateTool,\r\n    Tools.RedactionCreateTool,\r\n    Tools.TextFormFieldCreateTool,\r\n    Tools.ListBoxFormFieldCreateTool,\r\n    Tools.ComboBoxFormFieldCreateTool,\r\n  ];\r\n  return toolsWithHiddenStrokeSlider.some((tool) => core.getTool(toolName) instanceof tool);\r\n};\r\n\r\nexport const shouldHideOpacitySlider = (toolName) => {\r\n  const toolsWithHiddenOpacitySlider = [\r\n    Tools.RedactionCreateTool,\r\n    Tools.EraserTool,\r\n    Tools.TextFormFieldCreateTool,\r\n    Tools.ListBoxFormFieldCreateTool,\r\n    Tools.ComboBoxFormFieldCreateTool,\r\n    Tools.SignatureFormFieldCreateTool,\r\n  ];\r\n  return toolsWithHiddenOpacitySlider.some((tool) => core.getTool(toolName) instanceof tool);\r\n};\r\n\r\nexport const hasSnapModeCheckbox = (toolName) => {\r\n  const toolsWithSnapModeCheckbox = [\r\n    Tools.DistanceMeasurementCreateTool,\r\n    Tools.ArcMeasurementCreateTool,\r\n    Tools.PerimeterMeasurementCreateTool,\r\n    Tools.AreaMeasurementCreateTool,\r\n    Tools.RectangularAreaMeasurementCreateTool,\r\n    Tools.CloudyRectangularAreaMeasurementCreateTool,\r\n  ];\r\n  return toolsWithSnapModeCheckbox.some((tool) => core.getTool(toolName) instanceof tool);\r\n};\r\n\r\nexport const extractUniqueFontFamilies = (jsonData, inputText) => {\r\n  const uniqueFontFamilies = new Set();\r\n  const uniqueFontSizes = new Set();\r\n\r\n  for (const key in jsonData) {\r\n    if (jsonData.hasOwnProperty(key)) {\r\n      const index = parseInt(key, 10);\r\n      if (!isNaN(index) && inputText[index] !== ' ' && jsonData[key]['font-family']) {\r\n        uniqueFontFamilies.add(jsonData[key]['font-family'].trim());\r\n      }\r\n      if (!isNaN(index) && inputText[index] !== ' ' && jsonData[key]['font-size']) {\r\n        uniqueFontSizes.add(jsonData[key]['font-size'].trim());\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    fonts: Array.from(uniqueFontFamilies),\r\n    sizes: Array.from(uniqueFontSizes),\r\n  };\r\n};\r\n\r\nexport const shouldHideTransparentFillColor = (toolName) => {\r\n  const toolsWithHiddenTransparentColor = [Tools.RedactionCreateTool];\r\n  return toolsWithHiddenTransparentColor.some((tool) => core.getTool(toolName) instanceof tool);\r\n};\r\n\r\nexport const stylePanelSectionTitles = (toolName, section) => {\r\n  const toolTitles = {\r\n    'AnnotationCreateRedaction': {\r\n      'Title': 'component.redaction',\r\n      'StrokeColor': 'stylePanel.headings.redactionMarkOutline',\r\n      'FillColor': 'stylePanel.headings.redactionFill',\r\n    },\r\n  };\r\n  return toolTitles[toolName] && toolTitles[toolName][section];\r\n};\r\n\r\nexport const shouldHideTextStylePicker = (toolName) => {\r\n  const { ToolNames } = window.Core.Tools;\r\n  const toolsWithHiddenTextStylePicker = [\r\n    ToolNames.TEXT_FORM_FIELD,\r\n    ToolNames.LIST_BOX_FIELD,\r\n    ToolNames.COMBO_BOX_FIELD,\r\n  ];\r\n  return toolsWithHiddenTextStylePicker.includes(toolName);\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './StylePicker.scss';\r\nimport ColorPicker from './ColorPicker';\r\nimport Slider from 'components/Slider';\r\nimport DataElements from 'constants/dataElement';\r\nimport { circleRadius } from 'constants/slider';\r\nimport Dropdown from '../Dropdown';\r\nimport {\r\n  defaultStartLineStyles,\r\n  defaultStrokeStyles,\r\n  defaultEndLineStyles,\r\n  cloudyStrokeStyle\r\n} from 'constants/strokeStyleIcons';\r\nimport Icon from 'components/Icon';\r\nimport SnapModeToggle from './SnapModeToggle';\r\nimport selectors from 'selectors';\r\nimport actions from 'actions';\r\nimport {\r\n  hasFillColorAndCollapsablePanelSections,\r\n  stylePanelSectionTitles,\r\n  shouldHideStrokeSlider,\r\n  shouldHideOpacitySlider,\r\n  hasSnapModeCheckbox,\r\n  shouldShowTextStyle,\r\n  shouldHideTransparentFillColor,\r\n  shouldHideStrokeStyle,\r\n  shouldHideFillColorAndCollapsablePanelSections,\r\n} from 'helpers/stylePanelHelper';\r\nimport useOnFreeTextEdit from 'hooks/useOnFreeTextEdit';\r\nimport RichTextStyleEditor from '../RichTextStyleEditor';\r\nimport LabelTextEditor from 'components/LabelTextEditor';\r\n\r\nconst withCloudyStyle = defaultStrokeStyles.concat(cloudyStrokeStyle);\r\n\r\nconst propTypes = {\r\n  onStyleChange: PropTypes.func.isRequired,\r\n  style: PropTypes.object.isRequired,\r\n  sliderProperties: PropTypes.arrayOf(PropTypes.string),\r\n  isFreeText: PropTypes.bool,\r\n  isEllipse: PropTypes.bool,\r\n  isRedaction: PropTypes.bool,\r\n  isTextStylePickerHidden: PropTypes.bool,\r\n  redactionLabelProperties: PropTypes.object,\r\n  isFreeHand: PropTypes.bool,\r\n  showLineStyleOptions: PropTypes.bool,\r\n  isArc: PropTypes.bool,\r\n  isStamp: PropTypes.bool,\r\n  isInFormFieldCreationMode: PropTypes.bool,\r\n  startLineStyle: PropTypes.string,\r\n  endLineStyle: PropTypes.string,\r\n  strokeStyle: PropTypes.string,\r\n  onLineStyleChange: PropTypes.func,\r\n  toolName: PropTypes.string,\r\n  onFreeTextSizeToggle: PropTypes.func,\r\n  isFreeTextAutoSize: PropTypes.bool,\r\n  handleRichTextStyleChange: PropTypes.func,\r\n  activeType: PropTypes.string,\r\n};\r\n\r\nconst MAX_STROKE_THICKNESS = 20;\r\n\r\nconst StylePicker = ({\r\n  onStyleChange,\r\n  style,\r\n  isFreeText,\r\n  isEllipse,\r\n  isRedaction,\r\n  isTextStylePickerHidden,\r\n  isFreeHand,\r\n  showLineStyleOptions,\r\n  isArc,\r\n  isStamp,\r\n  isInFormFieldCreationMode,\r\n  startLineStyle,\r\n  endLineStyle,\r\n  strokeStyle,\r\n  onLineStyleChange,\r\n  onFreeTextSizeToggle,\r\n  isFreeTextAutoSize,\r\n  handleRichTextStyleChange,\r\n  activeTool,\r\n  saveEditorInstance,\r\n}) => {\r\n  const [t] = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const [isRichTextEditMode, setIsRichTextEditMode] = useState(false);\r\n  const [strokeColor, setStrokeColor] = useState(style.StrokeColor);\r\n  const [startingLineStyle, setStartingLineStyle] = useState(startLineStyle);\r\n  const [endingLineStyle, setEndingLineStyle] = useState(endLineStyle);\r\n  const [strokeLineStyle, setStrokeLineStyle] = useState(strokeStyle);\r\n  const [fillColor, setFillColor] = useState(style.FillColor);\r\n\r\n  const hideStrokeStyle = shouldHideStrokeStyle(activeTool);\r\n  const showFillColorAndCollapsablePanelSections = hasFillColorAndCollapsablePanelSections(activeTool);\r\n  const hideFillColorAndCollapsablePanelSections = shouldHideFillColorAndCollapsablePanelSections(activeTool);\r\n  const hideStrokeSlider = shouldHideStrokeSlider(activeTool);\r\n  const showSnapModeCheckbox = hasSnapModeCheckbox(activeTool);\r\n  const showTextStyle = shouldShowTextStyle(activeTool);\r\n\r\n  useEffect(() => {\r\n    if (showFillColorAndCollapsablePanelSections) {\r\n      if (showTextStyle) {\r\n        dispatch(actions.openElement(DataElements.RICH_TEXT_STYLE_CONTAINER));\r\n      } else {\r\n        dispatch(actions.openElement(DataElements.STROKE_STYLE_CONTAINER));\r\n      }\r\n    }\r\n  }, [activeTool]);\r\n\r\n  useEffect(() => {\r\n    if (isRichTextEditMode) {\r\n      dispatch(actions.closeElement(DataElements.ANNOTATION_POPUP));\r\n    }\r\n  }, [isRichTextEditMode]);\r\n\r\n  useEffect(() => {\r\n    setStrokeColor(style.StrokeColor);\r\n    setFillColor(style.FillColor);\r\n  }, [strokeColor, fillColor, style]);\r\n\r\n  useEffect(() => {\r\n    setStrokeColor(style.StrokeColor);\r\n    setStartingLineStyle(startLineStyle);\r\n    setStrokeLineStyle(strokeStyle);\r\n    setEndingLineStyle(endLineStyle);\r\n  }, [startLineStyle, endLineStyle, strokeStyle]);\r\n\r\n  const onStrokeColorChange = (color) => {\r\n    onStyleChange?.('StrokeColor', color);\r\n    setStrokeColor(color);\r\n  };\r\n\r\n  const onStartLineStyleChange = (style) => {\r\n    onLineStyleChange?.('start', style);\r\n    setStartingLineStyle(style);\r\n  };\r\n\r\n  const onStrokeStyleChange = (style, value) => {\r\n    if (value) {\r\n      onLineStyleChange?.(style, value);\r\n      setStrokeLineStyle(value);\r\n    } else {\r\n      onLineStyleChange?.('middle', style);\r\n      setStrokeLineStyle(style);\r\n    }\r\n  };\r\n\r\n  const onEndLineStyleChange = (style) => {\r\n    onLineStyleChange?.('end', style);\r\n    setEndingLineStyle(style);\r\n  };\r\n\r\n  const onFillColorChange = (color) => {\r\n    onStyleChange?.('FillColor', color);\r\n    setFillColor(color);\r\n  };\r\n\r\n  const onSliderChange = (property, value) => {\r\n    onStyleChange?.(property, value);\r\n  };\r\n\r\n  // We do not have sliders to show up for redaction annots\r\n  if (isRedaction) {\r\n    style.Opacity = null;\r\n    style.StrokeThickness = null;\r\n  }\r\n\r\n  const [\r\n    isSnapModeEnabled,\r\n    isStyleOptionDisabled,\r\n    isStrokeStyleContainerActive,\r\n    isFillColorContainerActive,\r\n    isOpacityContainerActive,\r\n    isTextStyleContainerActive,\r\n  ] = useSelector((state) => [\r\n    selectors.isSnapModeEnabled(state),\r\n    selectors.isElementDisabled(state, DataElements.STYLE_OPTION),\r\n    selectors.isElementOpen(state, DataElements.STROKE_STYLE_CONTAINER),\r\n    selectors.isElementOpen(state, DataElements.FILL_COLOR_CONTAINER),\r\n    selectors.isElementOpen(state, DataElements.OPACITY_CONTAINER),\r\n    selectors.isElementOpen(state, DataElements.RICH_TEXT_STYLE_CONTAINER),\r\n  ]);\r\n\r\n  const panelItems = {\r\n    [DataElements.STROKE_STYLE_CONTAINER]: isStrokeStyleContainerActive,\r\n    [DataElements.FILL_COLOR_CONTAINER]: isFillColorContainerActive,\r\n    [DataElements.OPACITY_CONTAINER]: isOpacityContainerActive,\r\n    [DataElements.RICH_TEXT_STYLE_CONTAINER]: isTextStyleContainerActive,\r\n  };\r\n\r\n  const togglePanelItem = (dataElement) => {\r\n    if (!panelItems[dataElement]) {\r\n      dispatch(actions.openElement(dataElement));\r\n    } else {\r\n      dispatch(actions.closeElement(dataElement));\r\n    }\r\n  };\r\n  const openTextStyleContainer = () => {\r\n    dispatch(actions.openElements(DataElements.RICH_TEXT_EDITOR));\r\n    togglePanelItem(DataElements.RICH_TEXT_STYLE_CONTAINER);\r\n  };\r\n  const openStrokeStyleContainer = () => togglePanelItem(DataElements.STROKE_STYLE_CONTAINER);\r\n  const openFillColorContainer = () => togglePanelItem(DataElements.FILL_COLOR_CONTAINER);\r\n  const openOpacityContainer = () => togglePanelItem(DataElements.OPACITY_CONTAINER);\r\n\r\n  const getSliderProps = (type) => {\r\n    const { Opacity, StrokeThickness, FontSize } = style;\r\n\r\n    const lineStart = circleRadius;\r\n    switch (type.toLowerCase()) {\r\n      case 'opacity':\r\n        if (Opacity === null) {\r\n          return null;\r\n        }\r\n        return {\r\n          property: 'Opacity',\r\n          displayProperty: 'opacity',\r\n          value: Opacity,\r\n          getDisplayValue: (Opacity) => `${Math.round(Opacity * 100)}%`,\r\n          dataElement: DataElements.OPACITY_SLIDER,\r\n          getCirclePosition: (lineLength, Opacity) => Opacity * lineLength + lineStart,\r\n          convertRelativeCirclePositionToValue: (circlePosition) => circlePosition,\r\n          withInputField: true,\r\n          inputFieldType: 'number',\r\n          min: 0,\r\n          max: 100,\r\n          step: 1,\r\n          getLocalValue: (opacity) => parseInt(opacity) / 100,\r\n        };\r\n      case 'strokethickness':\r\n        if (StrokeThickness === null) {\r\n          return null;\r\n        }\r\n        return {\r\n          property: 'StrokeThickness',\r\n          displayProperty: 'thickness',\r\n          value: StrokeThickness,\r\n          getDisplayValue: (strokeThickness) => {\r\n            const placeOfDecimal =\r\n              Math.floor(strokeThickness) !== strokeThickness\r\n                ? strokeThickness?.toString().split('.')[1].length || 0\r\n                : 0;\r\n            if (StrokeThickness === 0 || (StrokeThickness >= 1 && (placeOfDecimal > 2 || placeOfDecimal === 0))) {\r\n              return `${Math.round(strokeThickness)}pt`;\r\n            }\r\n            return `${parseFloat(strokeThickness).toFixed(2)}pt`;\r\n          },\r\n          dataElement: DataElements.STROKE_THICKNESS_SLIDER,\r\n          getCirclePosition: (lineLength, strokeThickness) => (strokeThickness / MAX_STROKE_THICKNESS) * lineLength + lineStart,\r\n          convertRelativeCirclePositionToValue: (circlePosition) => {\r\n            if (circlePosition >= 1 / MAX_STROKE_THICKNESS) {\r\n              return Math.round(circlePosition * MAX_STROKE_THICKNESS);\r\n            }\r\n            if (circlePosition >= 0.75 / MAX_STROKE_THICKNESS && circlePosition < 1 / MAX_STROKE_THICKNESS) {\r\n              return 0.75;\r\n            }\r\n            if (circlePosition >= 0.5 / MAX_STROKE_THICKNESS && circlePosition < 0.75 / MAX_STROKE_THICKNESS) {\r\n              return 0.5;\r\n            }\r\n            if (circlePosition >= 0.25 / MAX_STROKE_THICKNESS && circlePosition < 0.5 / MAX_STROKE_THICKNESS) {\r\n              return 0.25;\r\n            }\r\n            if (circlePosition >= 0.08 / MAX_STROKE_THICKNESS && circlePosition < 0.25 / MAX_STROKE_THICKNESS) {\r\n              return 0.1;\r\n            }\r\n            return isFreeText ? 0 : 0.1;\r\n          },\r\n          withInputField: true,\r\n          inputFieldType: 'number',\r\n          min: isFreeText ? 0 : 0.1,\r\n          max: MAX_STROKE_THICKNESS,\r\n          step: 1,\r\n          getLocalValue: (strokeThickness) => parseFloat(strokeThickness).toFixed(2),\r\n        };\r\n      case 'fontsize':\r\n        if (FontSize === null) {\r\n          return null;\r\n        }\r\n        return {\r\n          property: 'FontSize',\r\n          displayProperty: 'text',\r\n          value: FontSize,\r\n          getDisplayValue: (FontSize) => `${Math.round(parseInt(FontSize, 10))}pt`,\r\n          dataElement: DataElements.FONT_SIZE_SLIDER,\r\n          getCirclePosition: (lineLength, FontSize) => ((parseInt(FontSize, 10) - 5) / 40) * lineLength + lineStart,\r\n          convertRelativeCirclePositionToValue: (circlePosition) => `${circlePosition * 40 + 5}pt`,\r\n          min: 5,\r\n          max: 45,\r\n          step: 1,\r\n          withInputField: true,\r\n          inputFieldType: 'number',\r\n          getLocalValue: (FontSize) => `${parseFloat(FontSize).toFixed(2)}pt`,\r\n        };\r\n    }\r\n  };\r\n\r\n  const renderSlider = (property, shouldHideSliderTitle) => {\r\n    const sliderProps = getSliderProps(property);\r\n    if (!sliderProps) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Slider\r\n        key={property}\r\n        {...sliderProps}\r\n        onStyleChange={onSliderChange}\r\n        onSliderChange={onSliderChange}\r\n        shouldHideSliderTitle={shouldHideSliderTitle}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderDivider = () => {\r\n    if (showFillColorAndCollapsablePanelSections) {\r\n      return <div className=\"divider\" />;\r\n    }\r\n  };\r\n\r\n  const onOpenProps = useOnFreeTextEdit(saveEditorInstance);\r\n  const textSizeSlider = (isTextStylePickerHidden) ? <div className=\"StyleOption text-size-slider\">{renderSlider('fontsize')}</div> : null;\r\n  const strokethicknessComponent = renderSlider('strokethickness');\r\n\r\n  return (\r\n    <div\r\n      className=\"StylePicker\"\r\n      onMouseDown={(e) => {\r\n        if (e.type !== 'touchstart' && e.target.tagName.toUpperCase() !== 'INPUT') {\r\n          e.preventDefault();\r\n        }\r\n      }}\r\n    >\r\n      {showTextStyle && (\r\n        <div className=\"PanelSection TextStyle\">\r\n          <div\r\n            className=\"collapsible-menu\"\r\n            onClick={openTextStyleContainer}\r\n            tabIndex={0}\r\n            onKeyDown={(e) => e.key === 'Enter' && openTextStyleContainer()}\r\n            role={'toolbar'}\r\n          >\r\n            <div\r\n              className=\"menu-title\">{t(stylePanelSectionTitles(activeTool, 'OverlayText') || 'option.stylePopup.textStyle')}</div>\r\n            <div className=\"icon-container\">\r\n              <Icon glyph={`icon-chevron-${isTextStyleContainerActive ? 'up' : 'down'}`} />\r\n            </div>\r\n          </div>\r\n          {isTextStyleContainerActive && isRedaction && (\r\n            <div className=\"PanelSubsection RedactionTextLabel\">\r\n              <div className=\"menu-subtitle\">{t('stylePanel.headings.redactionTextLabel')}</div>\r\n              <LabelTextEditor properties={style} onPropertyChange={onStyleChange} placeholderText={t('stylePanel.headings.redactionTextPlaceholder')} />\r\n            </div>\r\n          )}\r\n          {isTextStyleContainerActive && (\r\n            <RichTextStyleEditor\r\n              style={style}\r\n              {...onOpenProps}\r\n              property={'TextColor'}\r\n              colorMapKey={'freeText'}\r\n              isFreeTextAutoSize={isFreeTextAutoSize}\r\n              onFreeTextSizeToggle={onFreeTextSizeToggle}\r\n              onPropertyChange={onStyleChange}\r\n              onRichTextStyleChange={handleRichTextStyleChange}\r\n              isRichTextEditMode={isRichTextEditMode}\r\n              setIsRichTextEditMode={setIsRichTextEditMode}\r\n              isRedaction={isRedaction}\r\n              activeTool={activeTool}\r\n              isTextStylePickerHidden={isTextStylePickerHidden}\r\n              textSizeSliderComponent={textSizeSlider}\r\n            />\r\n          )}\r\n          {renderDivider()}\r\n        </div>\r\n      )}\r\n\r\n      {!hideStrokeStyle && (\r\n        <div className=\"PanelSection\">\r\n          {showFillColorAndCollapsablePanelSections && (\r\n            <div\r\n              className=\"collapsible-menu StrokeColorPicker\"\r\n              onClick={openStrokeStyleContainer}\r\n              tabIndex={0}\r\n              onKeyDown={(e) => e.key === 'Enter' && openStrokeStyleContainer()}\r\n              role={'toolbar'}\r\n            >\r\n              <div className=\"menu-title\">\r\n                {t(stylePanelSectionTitles(activeTool, 'StrokeColor') || 'option.annotationColor.StrokeColor')}\r\n              </div>\r\n              <div className=\"icon-container\">\r\n                <Icon glyph={`icon-chevron-${isStrokeStyleContainerActive ? 'up' : 'down'}`} />\r\n              </div>\r\n            </div>\r\n          )}\r\n          {(isStrokeStyleContainerActive || !showFillColorAndCollapsablePanelSections) && !isStamp && (\r\n            <>\r\n              <div className=\"menu-items\">\r\n                <ColorPicker onColorChange={onStrokeColorChange} onStyleChange={onStyleChange} color={strokeColor}\r\n                  activeTool={activeTool} type={'Stroke'}/>\r\n              </div>\r\n              {!hideStrokeSlider && strokethicknessComponent && (strokethicknessComponent)}\r\n              {/*\r\n                When showLineStyleOptions is true, we want to show the opacity slider together with the stroke slider\r\n              */}\r\n              {showLineStyleOptions && <div className=\"StyleOption\">{renderSlider('opacity')}</div>}\r\n              {!!strokeStyle && !(isInFormFieldCreationMode && !isFreeText) && !isFreeHand && !isArc && (\r\n                <div className=\"StyleOption\">\r\n                  <div className=\"styles-container lineStyleContainer\">\r\n                    <div className=\"styles-title\">Style</div>\r\n                    <div className=\"StylePicker-LineStyle\">\r\n                      {showLineStyleOptions && (\r\n                        <Dropdown\r\n                          className=\"StylePicker-StartLineStyleDropdown\"\r\n                          dataElement=\"startLineStyleDropdown\"\r\n                          images={defaultStartLineStyles}\r\n                          onClickItem={onStartLineStyleChange}\r\n                          currentSelectionKey={startingLineStyle}\r\n                        />\r\n                      )}\r\n                      {!isStyleOptionDisabled && (\r\n                        <Dropdown\r\n                          className={`StylePicker-StrokeLineStyleDropdown${\r\n                            !!strokeStyle && !showLineStyleOptions ? ' StyleOptions' : ''\r\n                          }`}\r\n                          dataElement=\"middleLineStyleDropdown\"\r\n                          images={isEllipse || showLineStyleOptions ? defaultStrokeStyles : withCloudyStyle}\r\n                          onClickItem={onStrokeStyleChange}\r\n                          currentSelectionKey={strokeLineStyle}\r\n                        />\r\n                      )}\r\n                      {showLineStyleOptions && (\r\n                        <Dropdown\r\n                          className=\"StylePicker-EndLineStyleDropdown\"\r\n                          dataElement=\"endLineStyleDropdown\"\r\n                          images={defaultEndLineStyles}\r\n                          onClickItem={onEndLineStyleChange}\r\n                          currentSelectionKey={endingLineStyle}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n          {renderDivider()}\r\n        </div>\r\n      )}\r\n      {hideStrokeStyle && !hideStrokeSlider && strokethicknessComponent && (strokethicknessComponent)}\r\n      {showFillColorAndCollapsablePanelSections && !hideFillColorAndCollapsablePanelSections && (\r\n        <div className=\"PanelSection\">\r\n          <div\r\n            className=\"collapsible-menu FillColorPicker\"\r\n            onClick={openFillColorContainer}\r\n            tabIndex={0}\r\n            onKeyDown={(e) => e.key === 'Enter' && openFillColorContainer()}\r\n            role={'toolbar'}\r\n          >\r\n            <div className=\"menu-title\">\r\n              {t(stylePanelSectionTitles(activeTool, 'FillColor') || 'option.annotationColor.FillColor')}\r\n            </div>\r\n            <div className=\"icon-container\">\r\n              <Icon glyph={`icon-chevron-${isFillColorContainerActive ? 'up' : 'down'}`} />\r\n            </div>\r\n          </div>\r\n          {isFillColorContainerActive && (\r\n            <div className=\"menu-items\">\r\n              <ColorPicker\r\n                onColorChange={onFillColorChange}\r\n                onStyleChange={onStyleChange}\r\n                color={fillColor}\r\n                hasTransparentColor={!shouldHideTransparentFillColor(activeTool)}\r\n                activeTool={activeTool}\r\n                type={'Fill'}\r\n              />\r\n            </div>\r\n          )}\r\n          {!shouldHideOpacitySlider(activeTool) && renderDivider()}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"PanelSection\">\r\n        {showFillColorAndCollapsablePanelSections && !shouldHideOpacitySlider(activeTool) && (\r\n          <div\r\n            className=\"collapsible-menu StrokeColorPicker\"\r\n            onClick={openOpacityContainer}\r\n            tabIndex={0}\r\n            onKeyDown={(e) => e.key === 'Enter' && openOpacityContainer()}\r\n            role={'toolbar'}\r\n          >\r\n            <div className=\"menu-title\">{t('option.slider.opacity')}</div>\r\n            <div className=\"icon-container\">\r\n              <Icon glyph={`icon-chevron-${isOpacityContainerActive ? 'up' : 'down'}`} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/*\r\n          If showLineStyleOptions is true, then we don't want to show the opacity slider\r\n          in the bottom because it is already shown before together with the stroke slider\r\n        */}\r\n        {!showLineStyleOptions && !shouldHideOpacitySlider(activeTool) && (isOpacityContainerActive || !showFillColorAndCollapsablePanelSections) && (\r\n          <div className=\"StyleOption\">{renderSlider('opacity', showFillColorAndCollapsablePanelSections)}</div>\r\n        )}\r\n        {showSnapModeCheckbox && renderDivider()}\r\n      </div>\r\n      {showSnapModeCheckbox && (\r\n        <>\r\n          {/* to avoid inline styling when there's no divider */}\r\n          {!showFillColorAndCollapsablePanelSections && <div className=\"spacer\" />}\r\n          <div className=\"PanelSection\">\r\n            <SnapModeToggle Scale={style.Scale} Precision={style.Precision} isSnapModeEnabled={isSnapModeEnabled} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nStylePicker.propTypes = propTypes;\r\n\r\nexport default StylePicker;","import StylePicker from './StylePicker';\r\n\r\nexport default StylePicker;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport selectors from 'selectors';\r\nimport Icon from 'components/Icon';\r\nimport StylePicker from 'components/StylePicker';\r\nimport getAnnotationCreateToolNames from 'helpers/getAnnotationCreateToolNames';\r\nimport { hexToRGBA } from 'helpers/color';\r\nimport getToolStyles from 'helpers/getToolStyles';\r\nimport setToolStyles from 'helpers/setToolStyles';\r\nimport adjustFreeTextBoundingBox from 'helpers/adjustFreeTextBoundingBox';\r\nimport core from 'core';\r\nimport { getDataWithKey, mapToolNameToKey } from 'constants/map';\r\nimport handleFreeTextAutoSizeToggle from 'helpers/handleFreeTextAutoSizeToggle';\r\nimport getTextDecoration from 'helpers/getTextDecoration';\r\nimport {\r\n  shouldHideStylePanelOptions,\r\n  extractUniqueFontFamilies,\r\n  stylePanelSectionTitles,\r\n  shouldHideTextStylePicker\r\n} from 'helpers/stylePanelHelper';\r\nimport defaultTool from 'constants/defaultTool';\r\n\r\nconst { ToolNames } = window.Core.Tools;\r\nconst { Annotations } = window.Core;\r\n\r\n\r\nconst StylePanel = () => {\r\n  const [t] = useTranslation();\r\n\r\n  const [\r\n    isPanelOpen,\r\n    toolButtonObject,\r\n    isAnnotationToolStyleSyncingEnabled,\r\n    activeDocumentViewerKey,\r\n  ] = useSelector((state) => [\r\n    selectors.isElementOpen(state, 'stylePanel'),\r\n    selectors.getToolButtonObjects(state),\r\n    selectors.isAnnotationToolStyleSyncingEnabled(state),\r\n    selectors.getActiveDocumentViewerKey(state),\r\n  ]);\r\n\r\n\r\n  const currentTool = core.getToolMode();\r\n  const currentToolName = currentTool?.name;\r\n  const colorProperties = ['StrokeColor', 'FillColor'];\r\n  const [showStyles, setShowStyles] = useState(false);\r\n  const [noToolStyle, setNoToolStyle] = useState(shouldHideStylePanelOptions(currentToolName));\r\n  const [isEllipse, setIsEllipse] = useState(false);\r\n  const [isFreeText, setIsFreeText] = useState(false);\r\n  const [isRedaction, setIsRedaction] = useState(currentToolName === ToolNames.REDACTION);\r\n  const [isTextStylePickerHidden, setIsTextStylePickerHidden] = useState(currentToolName === defaultTool ? false : shouldHideTextStylePicker(currentToolName));\r\n  const [isFreeHand, setIsFreeHand] = useState(false);\r\n  const [isArc, setIsArc] = useState(false);\r\n  const [isStamp, setIsStamp] = useState(false);\r\n  const [isInFormFieldCreationMode, setIsInFormFieldCreationMode] = useState(false);\r\n  const [style, setStyle] = useState({});\r\n  const [startLineStyle, setStartLineStyle] = useState();\r\n  const [endLineStyle, setEndLineStyle] = useState();\r\n  const [strokeStyle, setStrokeStyle] = useState();\r\n  const [panelTitle, setPanelTitle] = useState(t('stylePanel.headings.styles'));\r\n  const annotationCreateToolNames = getAnnotationCreateToolNames();\r\n  const [showLineStyleOptions, setShowLineStyleOptions] = useState(currentToolName === defaultTool ? false : getDataWithKey(mapToolNameToKey(currentToolName)).hasLineEndings);\r\n  const [isAutoSizeFont, setIsAutoSizeFont] = useState(style.isAutoSizeFont);\r\n  const [activeTool, setActiveTool] = useState(currentToolName || 'Edit');\r\n  const [editorInstance, setEditorInstance] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (currentTool?.name === 'AnnotationCreateRubberStamp') {\r\n      core.setToolMode(defaultTool);\r\n    }\r\n  }, [currentTool]);\r\n\r\n  const getStrokeStyle = (annot) => {\r\n    const style = annot['Style'];\r\n    const dashes = annot['Dashes'];\r\n    if (style !== 'dash') {\r\n      return style;\r\n    }\r\n    return `${style},${dashes}`;\r\n  };\r\n\r\n  const getPanelTitleOnAnnotationSelected = (annot) => {\r\n    if (annot.isContentEditPlaceholder()) {\r\n      setPanelTitle(`${t('stylePanel.headings.contentEdit')} ${t('stylePanel.headings.annotation')}`);\r\n      setNoToolStyle(true);\r\n      return;\r\n    }\r\n    setPanelTitle(`${t(stylePanelSectionTitles(annot.ToolName, 'Title') || toolButtonObject[annot.ToolName].title)} ${t('stylePanel.headings.annotation')}`);\r\n  };\r\n\r\n  const setPanelTitleForSelectedTool = (tool) => {\r\n    const toolName = tool.name;\r\n    const title = toolButtonObject[toolName].title;\r\n    setPanelTitle(`${t(stylePanelSectionTitles(toolName, 'Title') || title)} ${t('stylePanel.headings.tool')}`);\r\n  };\r\n\r\n  const updateStylePanelProps = (annot) => {\r\n    const extraStyles = {};\r\n\r\n    if (annot instanceof Annotations.FreeTextAnnotation) {\r\n      let StrokeStyle = 'solid';\r\n      try {\r\n        StrokeStyle = (annot['Style'] === 'dash')\r\n          ? `${annot['Style']},${annot['Dashes']}`\r\n          : annot['Style'];\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n      extraStyles['TextColor'] = annot.TextColor;\r\n      extraStyles['RichTextStyle'] = annot.getRichTextStyle();\r\n      extraStyles['Font'] = annot.Font;\r\n      extraStyles['FontSize'] = annot.FontSize;\r\n      extraStyles['TextAlign'] = annot.TextAlign;\r\n      extraStyles['TextVerticalAlign'] = annot.TextVerticalAlign;\r\n      extraStyles['calculatedFontSize'] = annot.getCalculatedFontSize();\r\n      extraStyles['StrokeStyle'] = StrokeStyle;\r\n      extraStyles['isAutoSizeFont'] = annot.isAutoSizeFont();\r\n      setIsAutoSizeFont(annot.isAutoSizeFont());\r\n\r\n      const { fonts, sizes } = extractUniqueFontFamilies(extraStyles['RichTextStyle'], annot.getContents());\r\n      if (fonts.length >= 2 || (fonts.length === 1 && fonts[0] !== extraStyles['Font'])) {\r\n        extraStyles['Font'] = undefined;\r\n      }\r\n      if (sizes.length >= 2 || (sizes.length === 1 && sizes[0] !== extraStyles['FontSize'])) {\r\n        extraStyles['FontSize'] = undefined;\r\n      }\r\n    }\r\n\r\n    if (annot instanceof Annotations.RedactionAnnotation) {\r\n      extraStyles['OverlayText'] = annot.OverlayText;\r\n      extraStyles['Font'] = annot.Font;\r\n      extraStyles['FontSize'] = annot.FontSize;\r\n      extraStyles['TextAlign'] = annot.TextAlign;\r\n    }\r\n\r\n    if (annot instanceof Annotations.RectangleAnnotation && annot.isFormFieldPlaceholder() && annot.FontSize !== undefined) {\r\n      extraStyles.FontSize = annot.FontSize;\r\n    }\r\n\r\n    setStyle({\r\n      ...style,\r\n      StrokeColor: annot.StrokeColor,\r\n      StrokeThickness: annot.StrokeThickness,\r\n      Opacity: annot.Opacity,\r\n      FillColor: annot.FillColor,\r\n      ...extraStyles,\r\n    });\r\n    setStartLineStyle(annot.getStartStyle ? annot.getStartStyle() : 'None');\r\n    setEndLineStyle(annot.getEndStyle ? annot.getEndStyle() : 'None');\r\n    setStrokeStyle(getStrokeStyle(annot));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleToolModeChange = (newTool) => {\r\n      if (annotationCreateToolNames.includes(newTool?.name)) {\r\n        if (!panelTitle) {\r\n          setShowStyles(false);\r\n        } else {\r\n          if (shouldHideStylePanelOptions(newTool?.name)) {\r\n            setNoToolStyle(true);\r\n            setShowStyles(true);\r\n            setPanelTitleForSelectedTool(newTool);\r\n            return;\r\n          }\r\n\r\n          setNoToolStyle(false);\r\n          setActiveTool(newTool.name);\r\n          setShowLineStyleOptions(getDataWithKey(mapToolNameToKey(newTool.name)).hasLineEndings);\r\n          setIsEllipse(newTool.name === ToolNames.ELLIPSE);\r\n          setIsFreeText(newTool.name === ToolNames.FREETEXT);\r\n          setIsRedaction(newTool.name === ToolNames.REDACTION);\r\n\r\n          setIsTextStylePickerHidden(shouldHideTextStylePicker(newTool.name));\r\n\r\n          setIsFreeHand(\r\n            newTool.name === ToolNames.FREEHAND ||\r\n            newTool.name === ToolNames.FREEHAND_HIGHLIGHT,\r\n          );\r\n          setIsArc(newTool.name === ToolNames.ARC);\r\n          setIsStamp(newTool.name === ToolNames.STAMP);\r\n          setIsInFormFieldCreationMode(core.getFormFieldCreationManager().isInFormFieldCreationMode());\r\n          const toolStyles = getToolStyles(newTool.name);\r\n\r\n          if (newTool.name.includes('FreeText') || newTool.name.includes('Callout')) {\r\n            toolStyles['isAutoSizeFont'] = newTool['defaults']['isAutoSizeFont'];\r\n            setIsAutoSizeFont(newTool['defaults']['isAutoSizeFont']);\r\n          }\r\n\r\n          setStyle(toolStyles);\r\n          setStartLineStyle(toolStyles.StartLineStyle);\r\n          setStrokeStyle(toolStyles.StrokeStyle);\r\n          setEndLineStyle(toolStyles.EndLineStyle);\r\n          setShowStyles(true);\r\n          setPanelTitleForSelectedTool(newTool);\r\n        }\r\n      } else {\r\n        setShowStyles(false);\r\n      }\r\n    };\r\n    const onAnnotationSelected = (annotations, action) => {\r\n      if (action === 'selected') {\r\n        setShowStyles(true);\r\n        if (annotations.length === 1) {\r\n          getPanelTitleOnAnnotationSelected(annotations[0]);\r\n          if (shouldHideStylePanelOptions(annotations[0].ToolName)) {\r\n            setNoToolStyle(true);\r\n            return;\r\n          }\r\n          setNoToolStyle(false);\r\n          setActiveTool(annotations[0].ToolName);\r\n          setIsEllipse(annotations[0] instanceof Annotations.EllipseAnnotation);\r\n          setIsFreeText(annotations[0] instanceof Annotations.FreeTextAnnotation);\r\n          setIsRedaction(annotations[0] instanceof Annotations.RedactionAnnotation);\r\n          setIsTextStylePickerHidden(shouldHideTextStylePicker(annotations[0].ToolName));\r\n          setIsFreeHand(annotations[0] instanceof Annotations.FreeHandAnnotation);\r\n          setIsArc(annotations[0] instanceof Annotations.ArcAnnotation);\r\n          setIsStamp(annotations[0] instanceof Annotations.StampAnnotation);\r\n          setIsInFormFieldCreationMode(core.getFormFieldCreationManager().isInFormFieldCreationMode());\r\n          setShowLineStyleOptions(getDataWithKey(mapToolNameToKey(annotations[0].ToolName)).hasLineEndings);\r\n          updateStylePanelProps(annotations[0]);\r\n        } else {\r\n          setPanelTitle(`${t('stylePanel.headings.annotations')} (${annotations.length})`);\r\n          annotations.forEach((annot) => {\r\n            updateStylePanelProps(annot);\r\n          });\r\n        }\r\n      } else if (action === 'deselected') {\r\n        const currentTool = core.getToolMode();\r\n        if (currentTool instanceof window.Core.Tools.AnnotationEditTool) {\r\n          setShowStyles(false);\r\n        }\r\n        handleToolModeChange(currentTool);\r\n        // reset tool mode to change the tool name in the header\r\n        core.setToolMode(currentTool.name);\r\n      }\r\n    };\r\n\r\n    core.addEventListener('annotationSelected', onAnnotationSelected);\r\n    core.addEventListener('toolModeUpdated', handleToolModeChange);\r\n    core.addEventListener('annotationChanged', () => {\r\n      for (const annot of core.getSelectedAnnotations()) {\r\n        updateStylePanelProps(annot);\r\n      }\r\n    });\r\n    return () => {\r\n      core.removeEventListener('annotationSelected', onAnnotationSelected);\r\n      core.removeEventListener('toolModeUpdated', handleToolModeChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isPanelOpen) {\r\n      const selectedAnnotations = core.getSelectedAnnotations();\r\n      if (selectedAnnotations.length === 1) {\r\n        setShowStyles(true);\r\n        const annot = selectedAnnotations[0];\r\n        updateStylePanelProps(annot);\r\n        getPanelTitleOnAnnotationSelected(annot);\r\n      } else if (selectedAnnotations.length > 1) {\r\n        setShowStyles(true);\r\n        setPanelTitle(`${t('stylePanel.headings.annotations')} (${selectedAnnotations.length})`);\r\n        selectedAnnotations.forEach((annot) => {\r\n          updateStylePanelProps(annot);\r\n        });\r\n      } else {\r\n        const currentTool = core.getToolMode();\r\n        if (currentTool && currentTool.name !== defaultTool) {\r\n          setShowStyles(true);\r\n          const toolStyles = getToolStyles(currentTool.name);\r\n          if (toolStyles) {\r\n            setStyle(toolStyles);\r\n            setStartLineStyle(toolStyles.StartLineStyle);\r\n            setEndLineStyle(toolStyles.EndLineStyle);\r\n            setStrokeStyle(toolStyles.StrokeStyle);\r\n          }\r\n          setPanelTitleForSelectedTool(currentTool);\r\n        }\r\n      }\r\n    }\r\n  }, [isPanelOpen, isAutoSizeFont]);\r\n\r\n  const onStyleChange = (property, value) => {\r\n    const newStyle = { ...style };\r\n    newStyle[property] = value;\r\n    setStyle(newStyle);\r\n    const annotationsToUpdate = core.getSelectedAnnotations();\r\n\r\n    // Newly created freetext is not saved in annotationManager yet, so getSelectedAnnotations\r\n    // will return empty array, but editor has focus and an annotation\r\n    if (annotationsToUpdate.length === 0 && editorInstance && property === 'FillColor') {\r\n      const editor = editorInstance[0];\r\n      if (editor?.hasFocus()) {\r\n        const annot = editorInstance[1];\r\n        editor.setStyle({ background: value });\r\n        annot['FillColor'] = new Annotations.Color(value);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (annotationsToUpdate.length > 0) {\r\n      annotationsToUpdate.forEach((annot) => {\r\n        if (colorProperties.includes(property)) {\r\n          const colorRGB = hexToRGBA(value);\r\n          const color = new Annotations.Color(colorRGB.r, colorRGB.g, colorRGB.b, colorRGB.a);\r\n          annot[property] = color;\r\n          if (isAnnotationToolStyleSyncingEnabled) {\r\n            setToolStyles(annot.ToolName, property, color);\r\n          }\r\n        } else {\r\n          annot[property] = value;\r\n          if (annot instanceof Annotations.FreeTextAnnotation) {\r\n            if (property === 'FontSize' || property === 'Font' || property === 'StrokeThickness') {\r\n              adjustFreeTextBoundingBox(annot);\r\n            }\r\n          }\r\n          if (isAnnotationToolStyleSyncingEnabled) {\r\n            setToolStyles(annot.ToolName, property, value);\r\n          }\r\n        }\r\n\r\n        core.getAnnotationManager().redrawAnnotation(annot);\r\n      });\r\n    } else {\r\n      const currentTool = core.getToolMode();\r\n      if (currentTool) {\r\n        if (colorProperties.includes(property)) {\r\n          const colorRGB = hexToRGBA(value);\r\n          const color = new Annotations.Color(colorRGB.r, colorRGB.g, colorRGB.b, colorRGB.a);\r\n          setToolStyles(currentTool.name, property, color);\r\n        } else if (property === 'Opacity') {\r\n          setToolStyles(currentTool.name, 'Opacity', value);\r\n        } else if (property === 'StrokeThickness') {\r\n          setToolStyles(currentTool.name, 'StrokeThickness', value);\r\n        } else {\r\n          setToolStyles(currentTool.name, property, value);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const onLineStyleChange = (section, value) => {\r\n    const sectionPropertyMap = {\r\n      start: 'StartLineStyle',\r\n      middle: 'StrokeStyle',\r\n      end: 'EndLineStyle',\r\n    };\r\n    if (section === 'start') {\r\n      setStartLineStyle(value);\r\n    } else if (section === 'middle') {\r\n      setStrokeStyle(value);\r\n    } else if (section === 'end') {\r\n      setEndLineStyle(value);\r\n    }\r\n    const annotationsToUpdate = core.getSelectedAnnotations();\r\n    if (annotationsToUpdate.length > 0) {\r\n      annotationsToUpdate.forEach((annot) => {\r\n        if (section === 'start') {\r\n          annot.setStartStyle(value);\r\n        } else if (section === 'middle') {\r\n          const dashes = value.split(',');\r\n          const lineStyle = dashes.shift();\r\n          annot.Style = lineStyle;\r\n          annot.Dashes = dashes;\r\n        } else if (section === 'end') {\r\n          annot.setEndStyle(value);\r\n        }\r\n        core.getAnnotationManager().redrawAnnotation(annot);\r\n        if (isAnnotationToolStyleSyncingEnabled) {\r\n          setToolStyles(annot.ToolName, sectionPropertyMap[section], value);\r\n        }\r\n      });\r\n    } else {\r\n      const currentTool = core.getToolMode();\r\n      if (currentTool) {\r\n        setToolStyles(currentTool.name, sectionPropertyMap[section], value);\r\n      }\r\n    }\r\n  };\r\n  const handleAutoSize = () => {\r\n    const annotationsToUpdate = core.getSelectedAnnotations()[0];\r\n    if (annotationsToUpdate) {\r\n      handleFreeTextAutoSizeToggle(annotationsToUpdate, setIsAutoSizeFont, isAutoSizeFont);\r\n    } else {\r\n      const currentTool = core.getToolMode();\r\n      if (currentTool) {\r\n        setToolStyles(currentTool.name, 'isAutoSizeFont', !style.isAutoSizeFont);\r\n        setIsAutoSizeFont(!isAutoSizeFont);\r\n      }\r\n    }\r\n  };\r\n\r\n  const noToolSelected = (\r\n    <>\r\n      <div className='style-panel-header'>\r\n        {t('stylePanel.headings.styles')}\r\n      </div>\r\n      <div className=\"no-tool-selected\">\r\n        <div>\r\n          <Icon className=\"empty-icon\" glyph=\"style-panel-no-tool-selected\" />\r\n        </div>\r\n        <div className=\"msg\">{t('stylePanel.noToolSelected')}</div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const handleRichTextStyleChange = (property, value) => {\r\n    const originalProperty = property;\r\n    const originalValue = value;\r\n    const activeToolRichTextStyle = style['RichTextStyle']?.[0];\r\n    if (property === 'underline' || property === 'line-through') {\r\n      value = getTextDecoration({ [property]: value }, activeToolRichTextStyle);\r\n      property = 'text-decoration';\r\n    }\r\n    const richTextStyle = {\r\n      0: {\r\n        ...activeToolRichTextStyle,\r\n        [property]: value,\r\n      }\r\n    };\r\n\r\n    const annotationsToUpdate = core.getSelectedAnnotations();\r\n    if (annotationsToUpdate.length > 0) {\r\n      annotationsToUpdate.forEach((annotation) => {\r\n        core.updateAnnotationRichTextStyle(annotation, { [originalProperty]: originalValue }, activeDocumentViewerKey);\r\n      });\r\n      setStyle({ ...style, 'RichTextStyle': richTextStyle });\r\n    } else {\r\n      const currentTool = core.getToolMode();\r\n      if (currentTool) {\r\n        if (typeof currentTool.complete === 'function') {\r\n          currentTool.complete();\r\n        }\r\n        setToolStyles(currentTool.name, 'RichTextStyle', richTextStyle);\r\n      }\r\n    }\r\n  };\r\n\r\n  return !showStyles ? (\r\n    noToolSelected\r\n  ) : (\r\n    <>\r\n      <div className=\"style-panel-header\">{panelTitle}</div>\r\n      {noToolStyle ? (\r\n        <div className=\"no-tool-selected\">\r\n          <div>\r\n            <Icon className=\"empty-icon\" glyph=\"style-panel-no-tool-selected\" />\r\n          </div>\r\n          <div className=\"msg\">{t('stylePanel.noToolStyle')}</div>\r\n        </div>\r\n      ) : (\r\n        <StylePicker\r\n          sliderProperties={['Opacity', 'StrokeThickness']}\r\n          style={style}\r\n          onStyleChange={onStyleChange}\r\n          isFreeText={isFreeText}\r\n          isEllipse={isEllipse}\r\n          isRedaction={isRedaction}\r\n          isTextStylePickerHidden={isTextStylePickerHidden}\r\n          isFreeHand={isFreeHand}\r\n          isArc={isArc}\r\n          isStamp={isStamp}\r\n          isInFormFieldCreationMode={isInFormFieldCreationMode}\r\n          showLineStyleOptions={showLineStyleOptions}\r\n          startLineStyle={startLineStyle}\r\n          endLineStyle={endLineStyle}\r\n          strokeStyle={strokeStyle}\r\n          onLineStyleChange={onLineStyleChange}\r\n          onFreeTextSizeToggle={handleAutoSize}\r\n          isFreeTextAutoSize={isAutoSizeFont}\r\n          handleRichTextStyleChange={handleRichTextStyleChange}\r\n          activeTool={activeTool}\r\n          saveEditorInstance={setEditorInstance}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StylePanel;","import React from 'react';\r\nimport StylePanel from './StylePanel';\r\nimport DataElementWrapper from '../DataElementWrapper';\r\nimport './StylePanel.scss';\r\n\r\nconst StylePanelContainer = () => {\r\n  return (\r\n    <DataElementWrapper dataElement=\"stylePanel\" className=\"Panel StylePanel\">\r\n      <StylePanel />\r\n    </DataElementWrapper>\r\n  );\r\n};\r\n\r\nexport default StylePanelContainer;","import StylePanelContainer from './StylePanelContainer';\r\n\r\nexport default StylePanelContainer;","import React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport './ColorPicker.scss';\r\nimport { useTranslation } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\nimport actions from 'actions';\r\nimport { useDispatch, useStore, useSelector } from 'react-redux';\r\nimport Events from 'constants/events';\r\nimport { getInstanceNode } from 'helpers/getRootNode';\r\nimport selectors from 'selectors';\r\nimport Button from 'components/Button';\r\n\r\nconst parseColor = (color) => {\r\n  if (!color) {\r\n    return color;\r\n  }\r\n  let parsedColor = color;\r\n  if (parsedColor?.toHexString) {\r\n    parsedColor = parsedColor.toHexString();\r\n  }\r\n  if (parsedColor?.toLowerCase) {\r\n    parsedColor = parsedColor.toLowerCase();\r\n  }\r\n\r\n  return parsedColor;\r\n};\r\n\r\nconst TRANSPARENT_COLOR = 'transparent';\r\n\r\nconst transparentIcon = (\r\n  <svg\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    className={classNames('transparent')}\r\n  >\r\n    <line stroke=\"#d82e28\" x1=\"0\" y1=\"100%\" x2=\"100%\" y2=\"0\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\r\n  </svg>\r\n);\r\n\r\n\r\nconst propTypes = {\r\n  color: PropTypes.any\r\n};\r\n\r\nconst ColorPicker = ({\r\n  onColorChange,\r\n  hasTransparentColor = false,\r\n  color,\r\n  activeTool,\r\n  type,\r\n}) => {\r\n  const activeToolName = Object.values(window.Core.Tools.ToolNames).includes(activeTool) ? activeTool : window.Core.Tools.ToolNames.EDIT;\r\n  const store = useStore();\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const [colors] = useSelector((state) => [\r\n    selectors.getColors(state, activeToolName, type),\r\n  ]);\r\n  const [selectedColor, setSelectedColor] = useState();\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const forceExpandRef = useRef(true);\r\n\r\n  useEffect(() => {\r\n    forceExpandRef.current = true;\r\n  }, [activeToolName, color]);\r\n\r\n  useEffect(() => {\r\n    if (color) {\r\n      setSelectedColor(parseColor(color));\r\n    }\r\n  }, [color]);\r\n\r\n  const getCustomColorAndRemove = () => {\r\n    const customColor = selectors.getCustomColor(store.getState());\r\n    dispatch(actions.setCustomColor(null));\r\n    return customColor;\r\n  };\r\n\r\n  const handleAddColor = useCallback(() => {\r\n    dispatch(actions.openElement('ColorPickerModal'));\r\n    const onVisibilityChanged = (e) => {\r\n      const { element, isVisible } = e.detail;\r\n      if (element === 'ColorPickerModal' && !isVisible) {\r\n        const color = parseColor(getCustomColorAndRemove());\r\n        if (color) {\r\n          if (colors.includes(color)) {\r\n            setSelectedColor(color);\r\n            onColorChange(color);\r\n          } else {\r\n            const newColors = [...colors, color];\r\n            dispatch(actions.setColors(newColors, activeToolName, type, true));\r\n            setSelectedColor(color);\r\n            onColorChange(color);\r\n          }\r\n        }\r\n      }\r\n      getInstanceNode().removeEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\r\n    };\r\n    getInstanceNode().addEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\r\n  }, [colors?.length, dispatch, setSelectedColor, onColorChange, getCustomColorAndRemove, type, activeToolName]);\r\n\r\n  const handleDelete = () => {\r\n    const color = parseColor(selectedColor);\r\n    const newColors = [...colors];\r\n    const indexToDelete = newColors.indexOf(color);\r\n    if (indexToDelete > -1) {\r\n      const nextIndex = indexToDelete === newColors.length - 1 ? 0 : indexToDelete + 1;\r\n      setSelectedColor(colors[nextIndex]);\r\n      onColorChange(colors[nextIndex]);\r\n      newColors.splice(indexToDelete, 1);\r\n      dispatch(actions.setColors(newColors, activeToolName, type, true));\r\n    }\r\n  };\r\n\r\n  const handleCopyColor = () => {\r\n    const color = parseColor(selectedColor);\r\n    const newColors = [...colors, color];\r\n    dispatch(actions.setColors(newColors, activeToolName, type, true));\r\n  };\r\n\r\n  const toggleExpanded = () => {\r\n    const newValue = !isExpanded;\r\n    setIsExpanded(newValue);\r\n  };\r\n\r\n  let palette = colors.map((color) => color.toLowerCase());\r\n  if (hasTransparentColor) {\r\n    palette.push(TRANSPARENT_COLOR);\r\n  }\r\n\r\n  if (!selectedColor) {\r\n    setSelectedColor('transparent');\r\n  }\r\n\r\n  if (palette.indexOf(selectedColor) > 6 && !isExpanded && forceExpandRef.current) {\r\n    setIsExpanded(true);\r\n    forceExpandRef.current = false;\r\n  }\r\n\r\n  const shouldHideShowMoreButton = palette.length <= 7;\r\n  const showCopyButtonDisabled = !(selectedColor && !palette.includes(selectedColor));\r\n  const isDeleteDisabled = palette.length <= 1 || !showCopyButtonDisabled;\r\n\r\n  if (!isExpanded) {\r\n    palette = palette.slice(0, 7);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classNames('ColorPalette')}>\r\n        {palette.map((color) => parseColor(color)).map((color, i) => (\r\n          !color\r\n            ? <div key={i} className=\"dummy-cell\"/>\r\n            : <button\r\n              key={i}\r\n              className=\"cell-container\"\r\n              onClick={() => {\r\n                setSelectedColor(color);\r\n                onColorChange(color);\r\n              }}\r\n              aria-label={`${t('option.colorPalette.colorLabel')} ${i + 1}`}\r\n            >\r\n              <div\r\n                className={classNames({\r\n                  'cell-outer': true,\r\n                  active: parseColor(selectedColor) === color || (!parseColor(selectedColor) && color === TRANSPARENT_COLOR),\r\n                })}\r\n              >\r\n                <div\r\n                  className={classNames({\r\n                    cell: true,\r\n                    border: color === '#ffffff' || color === TRANSPARENT_COLOR,\r\n                  })}\r\n                  style={{ backgroundColor: color }}\r\n                >\r\n                  {color === TRANSPARENT_COLOR && transparentIcon}\r\n                </div>\r\n              </div>\r\n            </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"palette-controls\">\r\n        <div className=\"button-container\">\r\n          <Button\r\n            img=\"icon-header-zoom-in-line\"\r\n            title={t('action.addNewColor')}\r\n            onClick={handleAddColor}\r\n            className=\"control-button\"\r\n            dataElement=\"addCustomColor\"\r\n          />\r\n          <Button\r\n            img=\"icon-delete-line\"\r\n            title={t('action.deleteColor')}\r\n            onClick={handleDelete}\r\n            disabled={isDeleteDisabled}\r\n            className=\"control-button\"\r\n            dataElement=\"deleteSelectedColor\"\r\n          />\r\n          <Button\r\n            img=\"icon-copy2\"\r\n            title={t('action.copySelectedColor')}\r\n            onClick={handleCopyColor}\r\n            disabled={showCopyButtonDisabled}\r\n            className=\"control-button\"\r\n            dataElement=\"copySelectedColor\"\r\n          />\r\n        </div>\r\n        <button className={classNames('show-more-button control-button', {\r\n          hidden: shouldHideShowMoreButton,\r\n        })} onClick={toggleExpanded}>\r\n          {t(isExpanded ? 'message.showLess' : 'message.showMore')}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nColorPicker.propTypes = propTypes;\r\n\r\nexport default ColorPicker;","import ColorPicker from './ColorPicker';\r\n\r\nexport default ColorPicker;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}@keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}.RichTextStyleEditor{margin-bottom:16px}.RichTextStyleEditor .menu-items{margin-bottom:8px!important}.RichTextStyleEditor .menu-items .icon-grid{padding-top:12px;grid-row-gap:12px;row-gap:12px}.RichTextStyleEditor .menu-items .icon-grid .row{padding-top:0}.RichTextStyleEditor .menu-items .icon-grid .row.isRedaction{padding-bottom:8px}.RichTextStyleEditor .menu-items .icon-grid .auto-size-checkbox{padding-top:4px;padding-bottom:8px}.RichTextStyleEditor .Dropdown__wrapper{width:100%}.RichTextStyleEditor .Dropdown__wrapper .Dropdown{width:100%!important}.RichTextStyleEditor .Dropdown__wrapper .Dropdown__items{right:unset}.RichTextStyleEditor .FontSizeDropdown{width:100%!important}.RichTextStyleEditor .ColorPalette{padding-bottom:8px}.RichTextStyleEditor .text-size-slider{margin-top:16px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RichTextStyleEditor .icon-grid{display:flex;flex-direction:column}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .RichTextStyleEditor .icon-grid{display:flex;flex-direction:column}}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePanel{display:flex;flex-direction:column;background-color:var(--panel-background);padding-bottom:75px}.StylePanel .style-panel-header{font-size:16px;font-weight:700;margin-bottom:16px}.StylePanel .label{padding-top:16px;font-size:14px;font-weight:700}.StylePanel .no-tool-selected{padding-top:36px;display:flex;flex-direction:column;align-items:center;flex:1 1 auto}.StylePanel .no-tool-selected .msg{padding-top:24px;font-size:14px;text-align:center}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePanel .no-tool-selected .msg{line-height:15px;width:146px}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePanel .no-tool-selected .msg{line-height:15px;width:146px}}.StylePanel .no-tool-selected .empty-icon,.StylePanel .no-tool-selected .empty-icon svg{width:55px;height:56px}.StylePanel .no-tool-selected .empty-icon *{fill:var(--gray-5);color:var(--gray-5)}.StylePanel .StylePicker .lineStyleContainer .StylePicker-LineStyle button.Dropdown,.StylePanel .StylePicker input{border-color:var(--gray-4)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePanel{width:100%;height:100%;padding-bottom:16px}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePanel .style-panel-header{margin:0 16px 16px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePanel{width:100%;height:100%;padding-bottom:16px}.App.is-web-component:not(.is-in-desktop-only-mode) .StylePanel .style-panel-header{margin:0 16px 16px}}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePicker .ColorPalette{display:flex;flex-wrap:wrap;display:grid;grid-template-columns:repeat(7,1fr);grid-row-gap:8px;row-gap:8px;justify-items:center}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.StylePicker .ColorPalette{width:196px}}.StylePicker .ColorPalette.padding{padding:4px 12px 8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette{max-width:450px;width:auto}}@media(max-width:640px)and (-ms-high-contrast:active),(max-width:640px)and (-ms-high-contrast:none){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette{width:308px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette{max-width:450px;width:auto}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette{width:308px}}}.StylePicker .ColorPalette .cell-container{padding:0;border:none;background-color:transparent;flex:1 0 14%;cursor:pointer;width:28px;height:28px;display:flex;align-items:center;justify-content:center}:host(:not([data-tabbing=true])) .StylePicker .ColorPalette .cell-container,html:not([data-tabbing=true]) .StylePicker .ColorPalette .cell-container{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container{width:44px;height:44px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container{width:44px;height:44px}}.StylePicker .ColorPalette .cell-container .cell-outer.active{border:1px solid var(--color-palette-border);width:26px;height:26px;border-radius:10000000px;display:flex;align-items:center;justify-content:center}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container .cell-outer.active{width:36px;height:36px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container .cell-outer.active{width:36px;height:36px}}.StylePicker .ColorPalette .cell-container .cell-outer .cell{width:18px;height:18px;border-radius:10000000px}.StylePicker .ColorPalette .cell-container .cell-outer .cell .transparent{border:2px solid var(--faded-text);border-radius:10000000px}.StylePicker .ColorPalette .cell-container .cell-outer .cell.border{border:1px solid var(--white-color-palette-border)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container .cell-outer .cell{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container .cell-outer .cell{width:24px;height:24px}}.StylePicker .palette-controls{padding-right:12px;padding-left:2px;display:flex;justify-content:space-between}.StylePicker .palette-controls .button-container{display:flex;grid-gap:8px;gap:8px}.StylePicker .palette-controls .control-button{display:flex;align-items:center;justify-content:center;text-align:center;min-width:32px;min-height:32px;padding:0;border:none;background-color:transparent;cursor:pointer;border-radius:4px}:host(:not([data-tabbing=true])) .StylePicker .palette-controls .control-button,html:not([data-tabbing=true]) .StylePicker .palette-controls .control-button{outline:none}.StylePicker .palette-controls .control-button.show-more-button{color:var(--ribbon-active-color)}.StylePicker .palette-controls .control-button.show-more-button:hover{background:none;color:var(--primary-button-hover)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .palette-controls .control-button.show-more-button{color:var(--ribbon-active-color)}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .palette-controls .control-button.show-more-button{color:var(--ribbon-active-color)}}.StylePicker .palette-controls .control-button:disabled{cursor:default}.StylePicker .palette-controls .control-button:disabled .Icon{color:var(--disabled-icon)}.StylePicker .palette-controls .control-button.hidden{display:none}.StylePicker .palette-controls .control-button:hover{background:var(--view-header-button-hover)}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePicker{display:flex;flex-direction:column}.StylePicker .slider-property{font-size:14px;font-weight:700;margin-bottom:8px!important}.StylePicker .StyleOption{margin-bottom:16px}.StylePicker .StyleOption .styles-container .styles-title{margin:0 0 8px;font-size:14px;font-weight:700}.StylePicker .StyleOption .styles-container [data-element=borderStylePicker]{margin-top:8px}.StylePicker .StyleOption .slider:only-child{margin-bottom:0}.StylePicker .StyleOption .slider .slider-element-container{margin-left:-3px}.StylePicker .StyleOption:last-child{margin-bottom:0}.StylePicker .PanelSection{margin-bottom:16px}.StylePicker .PanelSection .PanelSubsection{margin-bottom:12px}.StylePicker .PanelSection .PanelSubsection .menu-subtitle{font-size:14px;font-weight:700;margin-bottom:12px}.StylePicker .PanelSection .collapsible-menu{width:100%;display:flex;cursor:pointer;position:relative;align-items:center;margin-bottom:16px}.StylePicker .PanelSection .collapsible-menu .menu-title{padding-top:6px;padding-bottom:6px;font-weight:700;font-size:16px}.StylePicker .PanelSection .collapsible-menu .icon-container{position:absolute;right:0;display:flex;align-items:center;justify-content:center;text-align:center;min-width:28px;min-height:28px;border-radius:4px}.StylePicker .PanelSection .collapsible-menu .icon-container .Icon{height:18px;width:18px;color:var(--icon-color)}.StylePicker .PanelSection .collapsible-menu .icon-container:hover{background:var(--view-header-button-hover)}.StylePicker .PanelSection .divider{background-color:var(--divider);width:100%;height:1px}.StylePicker .PanelSection .menu-items{margin-bottom:16px}.StylePicker .PanelSection .menu-items:only-child{margin-bottom:0}.StylePicker .PanelSection .menu-items .ColorPalette{margin-bottom:8px}.StylePicker .PanelSection .slider{margin-bottom:16px}.StylePicker .PanelSection .slider:last-child,.StylePicker .PanelSection:empty,.StylePicker .PanelSection:last-child{margin-bottom:0}.StylePicker .spacer{width:100%}.StylePicker .Dropdown,.StylePicker .FontSizeDropdown,.StylePicker .overlay-text-input{height:32px}.StylePicker .lineStyleContainer{margin-bottom:0!important}.StylePicker .lineStyleContainer .StylePicker-LineStyle{display:flex;flex-direction:row;grid-column-gap:8px;-moz-column-gap:8px;column-gap:8px;justify-content:space-between}.StylePicker .lineStyleContainer .StylePicker-LineStyle button.Dropdown{width:100%!important}.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__items,.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__wrapper{width:100%}.StylePicker .lineStyleContainer .StylePicker-LineStyle .linestyle-image svg{width:35px;margin-top:11px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .linestyle-image.shift-alignment svg{margin-top:8px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__items .linestyle-image svg{width:45px}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .linestyle-image.shift-alignment{padding-top:0}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .linestyle-image.shift-alignment svg{margin-top:11px}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .Dropdown__items{top:-197px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .StyleOptions{max-width:80px}.StylePicker .lineStyleContainer .StylePicker-LineStyle>*{flex-grow:1;flex-basis:0}.StylePicker .Dropdown,.StylePicker .FontSizeDropdown{border-color:var(--lighter-border)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker{padding:0 16px 16px;overflow:auto}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker{padding:0 16px 16px;overflow:auto}}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./RichTextStyleEditor.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./StylePanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../../node_modules/sass-loader/dist/cjs.js!./ColorPicker.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/src/index.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./StylePicker.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\r\n                function findNestedWebComponents(tagName, root = document) {\r\n                  const elements = [];\r\n\r\n                  // Check direct children\r\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\r\n\r\n                  // Check shadow DOMs\r\n                  root.querySelectorAll('*').forEach(el => {\r\n                    if (el.shadowRoot) {\r\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\r\n                    }\r\n                  });\r\n\r\n                  return elements;\r\n                }\r\n                if (!window.isApryseWebViewerWebComponent) {\r\n                  document.head.appendChild(styleTag);\r\n                  return;\r\n                }\r\n\r\n                let webComponents;\r\n                // First we see if the webcomponent is at the document level\r\n                webComponents = document.getElementsByTagName('apryse-webviewer');\r\n                // If not, we check have to check if it is nested in another webcomponent\r\n                if (!webComponents.length) {\r\n                  webComponents = findNestedWebComponents('apryse-webviewer');\r\n                }\r\n                // Now we append the style tag to each webcomponent\r\n                const clonedStyleTags = [];\r\n                for (let i = 0; i < webComponents.length; i++) {\r\n                  const webComponent = webComponents[i];\r\n                  if (i === 0) {\r\n                    webComponent.shadowRoot.appendChild(styleTag);\r\n                    styleTag.onload = function () {\r\n                      if (clonedStyleTags.length > 0) {\r\n                        clonedStyleTags.forEach((styleNode) => {\r\n                          // eslint-disable-next-line no-unsanitized/property\r\n                          styleNode.innerHTML = styleTag.innerHTML;\r\n                        });\r\n                      }\r\n                    };\r\n                  } else {\r\n                    const styleNode = styleTag.cloneNode(true);\r\n                    webComponent.shadowRoot.appendChild(styleNode);\r\n                    clonedStyleTags.push(styleNode);\r\n                  }\r\n                }\r\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["propTypes","annotation","PropTypes","editor","style","TextColor","RichTextStyle","isFreeTextAutoSize","onFreeTextSizeToggle","onPropertyChange","onRichTextStyleChange","isRedaction","isRichTextEditMode","setIsRichTextEditMode","isTextStylePickerHidden","RichTextStyleEditor","_ref","_ref4","_RichTextStyle$","_ref5","_RichTextStyle$2","_RichTextStyle$3","_RichTextStyle$3$text","_RichTextStyle$4","_RichTextStyle$4$text","_RichTextStyle$0$text","_RichTextStyle$5","_RichTextStyle$5$text","_RichTextStyle$6","_RichTextStyle$7","activeTool","textSizeSliderComponent","fonts","_slicedToArray","useSelector","state","selectors","getFonts","shallowEqual","_useState2","useState","format","setFormat","editorRef","useRef","annotationRef","propertiesRef","dispatch","useDispatch","oldSelectionRef","richTextEditModeRef","current","useEffect","handleSelectionChange","range","oldRange","setSelection","index","length","getFormat","handleTextChange","_editorRef$current","getSelection","core","addEventListener","actions","disableElements","DataElements","ANNOTATION_STYLE_POPUP","removeEventListener","enableElements","_editorRef$current2","_ref2","_ref3","_stylesTemp$textDeco","_stylesTemp$textDeco2","_stylesTemp$textDeco3","_stylesTemp$textDeco4","StrokeStyle","concat","err","console","error","stylesTemp","getRichTextStyle","Font","FontSize","TextAlign","TextVerticalAlign","bold","italic","underline","includes","strikeout","size","font","calculatedFontSize","getCalculatedFontSize","handleEditorBlur","handleEditorFocus","properties","color","window","Core","Annotations","Color","Array","isArray","lastSelectedColor","_i","_propertiesToCheck","prop","undefined","applyFormat","formatKey","value","_editorRef$current3","_editorRef$current4","_objectSpread","_defineProperty","defaults","strike","quillFont","quillFontSize","originalSize","React","className","onMouseDown","e","type","preventDefault","TextStylePicker","property","_editorRef$current$ge2","blur","adjustFreeTextBoundingBox","setTimeout","getAnnotationManager","getEditBoxManager","focusBox","propertyTranslation","freeText","isAutoSized","resizeAnnotation","_editorRef$current$ge","newSelection","currentFormat","handleTextFormatChange","stateless","isFreeText","ColorPicker","onColorChange","name","toHexString","handleColorChange","_core$getDocument","_core$getDocument2","Scale","Precision","isSnapModeEnabled","wasDocumentSwappedToClientSide","getDocument","getType","workerTypes","WEBVIEWER_SERVER","isWebViewerServerDocument","isEligibleDocumentForSnapping","toLowerCase","PDF","showMeasurementSnappingOption","isFullPDFEnabled","Choice","dataElement","id","label","i18next","t","checked","onChange","event","enableSnapping","target","mode","getDocumentViewer","SnapMode","e_DefaultSnapMode","POINT_ON_LINE","getMeasurementTools","forEach","tool","_tool$setSnapMode","setSnapMode","call","setEnableSnapMode","Tools","shouldHideStylePanelOptions","toolName","CheckBoxFormFieldCreateTool","RadioButtonFormFieldCreateTool","AddParagraphTool","AddImageContentTool","CropCreateTool","SnippingCreateTool","SignatureFormFieldCreateTool","some","getTool","shouldHideOpacitySlider","RedactionCreateTool","EraserTool","TextFormFieldCreateTool","ListBoxFormFieldCreateTool","ComboBoxFormFieldCreateTool","shouldHideTransparentFillColor","stylePanelSectionTitles","section","toolTitles","shouldHideTextStylePicker","ToolNames","TEXT_FORM_FIELD","LIST_BOX_FIELD","COMBO_BOX_FIELD","withCloudyStyle","defaultStrokeStyles","cloudyStrokeStyle","onStyleChange","isRequired","sliderProperties","isEllipse","redactionLabelProperties","isFreeHand","showLineStyleOptions","isArc","isStamp","isInFormFieldCreationMode","startLineStyle","endLineStyle","strokeStyle","onLineStyleChange","handleRichTextStyleChange","activeType","StylePicker","saveEditorInstance","useTranslation","_useState4","StrokeColor","strokeColor","setStrokeColor","_useState6","startingLineStyle","setStartingLineStyle","_useState8","endingLineStyle","setEndingLineStyle","_useState10","strokeLineStyle","setStrokeLineStyle","_useState12","FillColor","fillColor","setFillColor","hideStrokeStyle","RubberStampCreateTool","StampCreateTool","showFillColorAndCollapsablePanelSections","RectangleCreateTool","EllipseCreateTool","PolygonCreateTool","PolygonCloudCreateTool","EllipseMeasurementCreateTool","AreaMeasurementCreateTool","FreeTextCreateTool","CalloutCreateTool","hasFillColorAndCollapsablePanelSections","hideFillColorAndCollapsablePanelSections","shouldHideFillColorAndCollapsablePanelSections","hideStrokeSlider","TextUnderlineCreateTool","TextHighlightCreateTool","TextSquigglyCreateTool","TextStrikeoutCreateTool","CountMeasurementCreateTool","FileAttachmentCreateTool","StickyCreateTool","MarkInsertTextCreateTool","MarkReplaceTextCreateTool","shouldHideStrokeSlider","showSnapModeCheckbox","DistanceMeasurementCreateTool","ArcMeasurementCreateTool","PerimeterMeasurementCreateTool","RectangularAreaMeasurementCreateTool","CloudyRectangularAreaMeasurementCreateTool","hasSnapModeCheckbox","showTextStyle","shouldShowTextStyle","openElement","RICH_TEXT_STYLE_CONTAINER","STROKE_STYLE_CONTAINER","closeElement","ANNOTATION_POPUP","onSliderChange","Opacity","StrokeThickness","_useSelector2","isElementDisabled","STYLE_OPTION","isElementOpen","FILL_COLOR_CONTAINER","OPACITY_CONTAINER","isStyleOptionDisabled","isStrokeStyleContainerActive","isFillColorContainerActive","isOpacityContainerActive","isTextStyleContainerActive","panelItems","togglePanelItem","openTextStyleContainer","openElements","RICH_TEXT_EDITOR","openStrokeStyleContainer","openFillColorContainer","openOpacityContainer","renderSlider","shouldHideSliderTitle","sliderProps","lineStart","circleRadius","displayProperty","getDisplayValue","Math","round","OPACITY_SLIDER","getCirclePosition","lineLength","convertRelativeCirclePositionToValue","circlePosition","withInputField","inputFieldType","min","max","step","getLocalValue","opacity","parseInt","strokeThickness","placeOfDecimal","floor","toString","split","parseFloat","toFixed","STROKE_THICKNESS_SLIDER","FONT_SIZE_SLIDER","getSliderProps","Slider","_extends","key","renderDivider","onOpenProps","useOnFreeTextEdit","textSizeSlider","strokethicknessComponent","tagName","toUpperCase","onClick","tabIndex","onKeyDown","role","Icon","glyph","LabelTextEditor","placeholderText","colorMapKey","Dropdown","images","defaultStartLineStyles","onClickItem","currentSelectionKey","defaultEndLineStyles","hasTransparentColor","SnapModeToggle","getToolButtonObjects","isAnnotationToolStyleSyncingEnabled","getActiveDocumentViewerKey","isPanelOpen","toolButtonObject","activeDocumentViewerKey","currentTool","getToolMode","currentToolName","colorProperties","showStyles","setShowStyles","noToolStyle","setNoToolStyle","setIsEllipse","setIsFreeText","REDACTION","setIsRedaction","defaultTool","setIsTextStylePickerHidden","_useState14","setIsFreeHand","_useState16","setIsArc","_useState18","setIsStamp","_useState20","setIsInFormFieldCreationMode","_useState22","setStyle","_useState24","setStartLineStyle","_useState26","setEndLineStyle","_useState28","setStrokeStyle","_useState30","panelTitle","setPanelTitle","annotationCreateToolNames","getAnnotationCreateToolNames","_useState32","getDataWithKey","mapToolNameToKey","hasLineEndings","setShowLineStyleOptions","_useState34","isAutoSizeFont","setIsAutoSizeFont","_useState36","setActiveTool","_useState38","editorInstance","setEditorInstance","setToolMode","getPanelTitleOnAnnotationSelected","annot","isContentEditPlaceholder","ToolName","title","setPanelTitleForSelectedTool","updateStylePanelProps","extraStyles","FreeTextAnnotation","_extractUniqueFontFam","jsonData","inputText","uniqueFontFamilies","Set","uniqueFontSizes","hasOwnProperty","isNaN","add","trim","from","sizes","extractUniqueFontFamilies","getContents","RedactionAnnotation","OverlayText","RectangleAnnotation","isFormFieldPlaceholder","getStartStyle","getEndStyle","dashes","getStrokeStyle","handleToolModeChange","newTool","ELLIPSE","FREETEXT","FREEHAND","FREEHAND_HIGHLIGHT","ARC","STAMP","getFormFieldCreationManager","toolStyles","getToolStyles","StartLineStyle","EndLineStyle","onAnnotationSelected","annotations","action","EllipseAnnotation","FreeHandAnnotation","ArcAnnotation","StampAnnotation","AnnotationEditTool","_step","_iterator","_createForOfIteratorHelper","getSelectedAnnotations","s","n","done","f","selectedAnnotations","noToolSelected","newStyle","annotationsToUpdate","hasFocus","background","colorRGB","hexToRGBA","r","g","b","a","setToolStyles","redrawAnnotation","sectionPropertyMap","start","middle","end","setStartStyle","lineStyle","shift","Style","Dashes","setEndStyle","handleFreeTextAutoSizeToggle","_style$RichTextStyle","originalProperty","originalValue","activeToolRichTextStyle","getTextDecoration","richTextStyle","updateAnnotationRichTextStyle","complete","DataElementWrapper","StylePanel","parseColor","_parsedColor","_parsedColor2","parsedColor","TRANSPARENT_COLOR","transparentIcon","width","height","classNames","stroke","x1","y1","x2","y2","strokeWidth","strokeLinecap","_ref$hasTransparentCo","activeToolName","Object","values","EDIT","store","useStore","colors","getColors","selectedColor","setSelectedColor","isExpanded","setIsExpanded","forceExpandRef","getCustomColorAndRemove","customColor","getCustomColor","getState","setCustomColor","handleAddColor","useCallback","getInstanceNode","Events","VISIBILITY_CHANGED","onVisibilityChanged","_e$detail","detail","element","isVisible","newColors","_toConsumableArray","setColors","palette","map","push","indexOf","shouldHideShowMoreButton","showCopyButtonDisabled","isDeleteDisabled","slice","i","active","cell","border","backgroundColor","Button","img","indexToDelete","nextIndex","splice","disabled","hidden","exports","___CSS_LOADER_API_IMPORT___","module","locals","api","content","__esModule","default","options","styleTag","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","root","elements","querySelectorAll","el","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode"],"sourceRoot":""}
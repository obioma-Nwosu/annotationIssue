{"version":3,"file":"chunks/5559.chunk.js","mappings":"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","sources":["webpack://webviewer-ui/./src/components/PageManipulationOverlay/PageManipulationControls/PageManipulationControls.js","webpack://webviewer-ui/./src/components/PageManipulationOverlay/PageManipulationControls/PageManipulationControlsContainer.js","webpack://webviewer-ui/./src/components/PageManipulationOverlay/PageManipulationControls/index.js"],"sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport DataElementWrapper from 'components/DataElementWrapper';\r\nimport Button from 'components/Button';\r\n\r\nfunction PageManipulationControls(props) {\r\n  const { t } = useTranslation();\r\n  const { deletePages, extractPages, insertPages, replacePages } = props;\r\n\r\n  return (\r\n    <>\r\n      <DataElementWrapper\r\n        dataElement=\"pageManipulationHeader\"\r\n        className=\"type\"\r\n      >\r\n        {t('action.pageManipulation')}\r\n      </DataElementWrapper>\r\n      <DataElementWrapper\r\n        className=\"row\"\r\n        dataElement=\"insertPage\"\r\n        onClick={insertPages}\r\n      >\r\n        <Button\r\n          title=\"action.insertPage\"\r\n          img=\"icon-page-insertion-insert\"\r\n          role=\"option\"\r\n          onClickAnnouncement={`${t('action.insertPage')} ${t('action.modal')} ${t('action.isOpen')}`}\r\n        />\r\n        <div className=\"title\">{t('action.insert')}</div>\r\n      </DataElementWrapper>\r\n      <DataElementWrapper\r\n        className=\"row\"\r\n        dataElement=\"replacePage\"\r\n        onClick={replacePages}\r\n      >\r\n        <Button\r\n          title=\"action.replacePage\"\r\n          img=\"icon-page-replacement\"\r\n          role=\"option\"\r\n          onClickAnnouncement={`${t('action.replacePage')} ${t('action.modal')} ${t('action.isOpen')}`}\r\n        />\r\n        <div className=\"title\">{t('action.replace')}</div>\r\n      </DataElementWrapper>\r\n      <DataElementWrapper\r\n        className=\"row\"\r\n        dataElement=\"extractPage\"\r\n        onClick={extractPages}\r\n      >\r\n        <Button\r\n          title=\"action.extractPage\"\r\n          img=\"icon-page-manipulation-extract\"\r\n          role=\"option\"\r\n          onClickAnnouncement={`${t('action.extractPage')} ${t('action.modal')} ${t('action.isOpen')}`}\r\n        />\r\n        <div className=\"title\">{t('action.extract')}</div>\r\n      </DataElementWrapper>\r\n      <DataElementWrapper\r\n        dataElement=\"deletePage\"\r\n        className=\"row\"\r\n        onClick={deletePages}\r\n      >\r\n        <Button\r\n          title=\"option.thumbnailPanel.delete\"\r\n          img=\"icon-delete-line\"\r\n          role=\"option\"\r\n          onClickAnnouncement={`${t('action.delete')} ${t('action.modal')} ${t('action.isOpen')}`}\r\n        />\r\n        <div className=\"title\">{t('action.delete')}</div>\r\n      </DataElementWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default PageManipulationControls;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport selectors from 'selectors';\r\nimport PageManipulationControls from './PageManipulationControls';\r\nimport { deletePages, extractPages, noPagesSelectedWarning, replace } from 'helpers/pageManipulationFunctions';\r\nimport PropTypes from 'prop-types';\r\nimport actions from 'actions';\r\nimport { isMobile } from 'helpers/device';\r\nimport DataElements from 'constants/dataElement';\r\n\r\nconst propTypes = {\r\n  pageNumbers: PropTypes.arrayOf(PropTypes.number),\r\n  warn: PropTypes.bool,\r\n};\r\n\r\nfunction PageManipulationControlsContainer(props) {\r\n  const dispatch = useDispatch();\r\n  const { pageNumbers, warn } = props;\r\n  const [isPageDeletionConfirmationModalEnabled] = useSelector((state) => [\r\n    selectors.pageDeletionConfirmationModalEnabled(state),\r\n  ]);\r\n\r\n  const openInsertPageModal = () => {\r\n    dispatch(actions.closeElement(DataElements.PAGE_MANIPULATION_OVERLAY));\r\n    dispatch(actions.openElement('insertPageModal'));\r\n  };\r\n\r\n  const onInsert = () => {\r\n    if (warn) {\r\n      !noPagesSelectedWarning(pageNumbers, dispatch) && openInsertPageModal();\r\n    } else {\r\n      openInsertPageModal();\r\n    }\r\n    isMobile() && dispatch(actions.closeElement(DataElements.PAGE_MANIPULATION_OVERLAY));\r\n  };\r\n\r\n  const onReplace = () => {\r\n    if (warn) {\r\n      !noPagesSelectedWarning(pageNumbers, dispatch) && replace(dispatch);\r\n    } else {\r\n      replace(dispatch);\r\n    }\r\n    isMobile() && dispatch(actions.closeElement(DataElements.PAGE_MANIPULATION_OVERLAY));\r\n  };\r\n  const onExtract = () => {\r\n    if (warn) {\r\n      !noPagesSelectedWarning(pageNumbers, dispatch) && extractPages(pageNumbers, dispatch);\r\n    } else {\r\n      extractPages(pageNumbers, dispatch);\r\n    }\r\n    isMobile() && dispatch(actions.closeElement(DataElements.PAGE_MANIPULATION_OVERLAY));\r\n  };\r\n  const onDelete = () => {\r\n    if (warn) {\r\n      !noPagesSelectedWarning(pageNumbers, dispatch) && deletePages(pageNumbers, dispatch, isPageDeletionConfirmationModalEnabled);\r\n    } else {\r\n      deletePages(pageNumbers, dispatch, isPageDeletionConfirmationModalEnabled);\r\n    }\r\n    isMobile() && dispatch(actions.closeElement(DataElements.PAGE_MANIPULATION_OVERLAY));\r\n  };\r\n\r\n  return (\r\n    <PageManipulationControls\r\n      insertPages={onInsert}\r\n      deletePages={onDelete}\r\n      extractPages={onExtract}\r\n      replacePages={onReplace}\r\n    />\r\n  );\r\n}\r\n\r\nPageManipulationControlsContainer.propTypes = propTypes;\r\n\r\nexport default PageManipulationControlsContainer;","import PageManipulationControlsContainer from './PageManipulationControlsContainer';\r\n\r\nexport default PageManipulationControlsContainer;"],"names":["props","t","useTranslation","deletePages","extractPages","insertPages","replacePages","React","DataElementWrapper","dataElement","className","onClick","Button","title","img","role","onClickAnnouncement","concat","propTypes","pageNumbers","PropTypes","warn","PageManipulationControlsContainer","dispatch","useDispatch","isPageDeletionConfirmationModalEnabled","useSelector","state","selectors","pageDeletionConfirmationModalEnabled","openInsertPageModal","actions","closeElement","DataElements","PAGE_MANIPULATION_OVERLAY","openElement","PageManipulationControls","noPagesSelectedWarning","isMobile","replace"],"sourceRoot":""}